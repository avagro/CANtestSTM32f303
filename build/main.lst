ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB144:
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * Copyright (c) 2023 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****   * in the root directory of this software component.
  14:Src/main.c    ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   ******************************************************************************
  17:Src/main.c    ****   */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** 
  22:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  23:Src/main.c    **** /* USER CODE BEGIN Includes */
  24:Src/main.c    **** 
  25:Src/main.c    **** /* USER CODE END Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  28:Src/main.c    **** /* USER CODE BEGIN PTD */
  29:Src/main.c    **** const uint8_t PWM_MIN = 4;
  30:Src/main.c    **** const uint8_t PWM_MAX = 100;
  31:Src/main.c    **** const uint8_t PWM_MIN_CHANGE = 5;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 2


  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** uint8_t timePulse = 50;
  37:Src/main.c    **** uint8_t timePulseDivider = PWM_MIN;
  38:Src/main.c    **** uint8_t timePulseMax = 100;
  39:Src/main.c    **** uint8_t timePulseMin = 1;
  40:Src/main.c    **** 
  41:Src/main.c    **** 
  42:Src/main.c    **** eDir tPulse = UP;
  43:Src/main.c    **** eDir tDivide = UP;
  44:Src/main.c    **** 
  45:Src/main.c    **** // enum{
  46:Src/main.c    **** //   UP=0,
  47:Src/main.c    **** //   DOWN
  48:Src/main.c    **** // }eDir;
  49:Src/main.c    **** 
  50:Src/main.c    **** // enum{
  51:Src/main.c    **** //     uP=0,
  52:Src/main.c    **** //     dOWN
  53:Src/main.c    **** // }eDivider;
  54:Src/main.c    **** /* USER CODE END PD */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  57:Src/main.c    **** /* USER CODE BEGIN PM */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END PM */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  62:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  63:Src/main.c    **** 
  64:Src/main.c    **** SPI_HandleTypeDef hspi1;
  65:Src/main.c    **** 
  66:Src/main.c    **** TIM_HandleTypeDef htim1;
  67:Src/main.c    **** TIM_HandleTypeDef htim2;
  68:Src/main.c    **** TIM_HandleTypeDef htim3;
  69:Src/main.c    **** TIM_HandleTypeDef htim4;
  70:Src/main.c    **** TIM_HandleTypeDef htim7;
  71:Src/main.c    **** TIM_HandleTypeDef htim8;
  72:Src/main.c    **** TIM_HandleTypeDef htim15;
  73:Src/main.c    **** TIM_HandleTypeDef htim16;
  74:Src/main.c    **** TIM_HandleTypeDef htim17;
  75:Src/main.c    **** 
  76:Src/main.c    **** PCD_HandleTypeDef hpcd_USB_FS;
  77:Src/main.c    **** 
  78:Src/main.c    **** /* USER CODE BEGIN PV */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE END PV */
  81:Src/main.c    **** 
  82:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  83:Src/main.c    **** void SystemClock_Config(void);
  84:Src/main.c    **** static void MX_GPIO_Init(void);
  85:Src/main.c    **** static void MX_I2C1_Init(void);
  86:Src/main.c    **** static void MX_SPI1_Init(void);
  87:Src/main.c    **** static void MX_TIM2_Init(void);
  88:Src/main.c    **** static void MX_TIM3_Init(void);
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 3


  89:Src/main.c    **** static void MX_TIM4_Init(void);
  90:Src/main.c    **** static void MX_TIM8_Init(void);
  91:Src/main.c    **** static void MX_TIM15_Init(void);
  92:Src/main.c    **** static void MX_TIM16_Init(void);
  93:Src/main.c    **** static void MX_TIM17_Init(void);
  94:Src/main.c    **** static void MX_USB_PCD_Init(void);
  95:Src/main.c    **** static void MX_TIM1_Init(void);
  96:Src/main.c    **** static void MX_TIM7_Init(void);
  97:Src/main.c    **** /* USER CODE BEGIN PFP */
  98:Src/main.c    **** 
  99:Src/main.c    **** /* USER CODE END PFP */
 100:Src/main.c    **** 
 101:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 102:Src/main.c    **** /* USER CODE BEGIN 0 */
 103:Src/main.c    **** 
 104:Src/main.c    **** /* USER CODE END 0 */
 105:Src/main.c    **** 
 106:Src/main.c    **** /**
 107:Src/main.c    ****   * @brief  The application entry point.
 108:Src/main.c    ****   * @retval int
 109:Src/main.c    ****   */
 110:Src/main.c    **** int main(void)
 111:Src/main.c    **** {
 112:Src/main.c    ****   /* USER CODE BEGIN 1 */
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* USER CODE END 1 */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 119:Src/main.c    ****   HAL_Init();
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* USER CODE BEGIN Init */
 122:Src/main.c    **** 
 123:Src/main.c    ****   /* USER CODE END Init */
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* Configure the system clock */
 126:Src/main.c    ****   SystemClock_Config();
 127:Src/main.c    **** 
 128:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 129:Src/main.c    **** 
 130:Src/main.c    ****   /* USER CODE END SysInit */
 131:Src/main.c    **** 
 132:Src/main.c    ****   /* Initialize all configured peripherals */
 133:Src/main.c    ****   MX_GPIO_Init();
 134:Src/main.c    ****   MX_I2C1_Init();
 135:Src/main.c    ****   MX_SPI1_Init();
 136:Src/main.c    ****   MX_TIM2_Init();
 137:Src/main.c    ****   MX_TIM3_Init();
 138:Src/main.c    ****   MX_TIM4_Init();
 139:Src/main.c    ****   MX_TIM8_Init();
 140:Src/main.c    ****   MX_TIM15_Init();
 141:Src/main.c    ****   MX_TIM16_Init();
 142:Src/main.c    ****   MX_TIM17_Init();
 143:Src/main.c    ****   MX_USB_PCD_Init();
 144:Src/main.c    ****   MX_TIM1_Init();
 145:Src/main.c    ****   MX_TIM7_Init();
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 4


 146:Src/main.c    ****   /* USER CODE BEGIN 2 */
 147:Src/main.c    **** 
 148:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim1);
 149:Src/main.c    ****   // HAL_TIM_Base_Start_IT(&htim7);
 150:Src/main.c    ****   // HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 151:Src/main.c    **** 
 152:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 153:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 154:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 155:Src/main.c    ****   /* USER CODE END 2 */
 156:Src/main.c    **** 
 157:Src/main.c    ****   /* Infinite loop */
 158:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 159:Src/main.c    ****   while (1)
 160:Src/main.c    ****   {
 161:Src/main.c    **** 
 162:Src/main.c    ****     if( HAL_GPIO_ReadPin(B1_user_GPIO_Port, B1_user_Pin) )
 163:Src/main.c    ****     {
 164:Src/main.c    **** 
 165:Src/main.c    ****         HAL_GPIO_WritePin( GPIOE, GPIO_PIN_10, GPIO_PIN_SET );
 166:Src/main.c    **** 
 167:Src/main.c    ****         if( tPulse == UP )
 168:Src/main.c    ****         {
 169:Src/main.c    ****             if( timePulse >= PWM_MAX )
 170:Src/main.c    ****                 tPulse = DOWN;
 171:Src/main.c    ****             else
 172:Src/main.c    ****                 timePulse += PWM_MIN_CHANGE;
 173:Src/main.c    ****         } else {
 174:Src/main.c    ****             if ( timePulse <= PWM_MIN )
 175:Src/main.c    ****                 tPulse = UP;
 176:Src/main.c    ****             else
 177:Src/main.c    ****                 timePulse -= PWM_MIN_CHANGE;
 178:Src/main.c    ****         }
 179:Src/main.c    ****     } else if( ! HAL_GPIO_ReadPin(B1_user_GPIO_Port, B1_user_Pin) ){
 180:Src/main.c    ****         HAL_GPIO_WritePin( GPIOE, GPIO_PIN_10, GPIO_PIN_RESET );
 181:Src/main.c    ****     }
 182:Src/main.c    **** 
 183:Src/main.c    ****     if( HAL_GPIO_ReadPin(B2_user_GPIO_Port, B2_user_Pin) )
 184:Src/main.c    ****     {
 185:Src/main.c    ****         HAL_GPIO_WritePin( GPIOE, LD8_Pin, GPIO_PIN_SET );
 186:Src/main.c    **** 
 187:Src/main.c    ****         if( tDivide == UP )
 188:Src/main.c    ****         {
 189:Src/main.c    ****             if( timePulseDivider >= PWM_MAX )
 190:Src/main.c    ****                 tDivide = DOWN;
 191:Src/main.c    ****             else
 192:Src/main.c    ****                 timePulseDivider += PWM_MIN_CHANGE;
 193:Src/main.c    ****         } else {
 194:Src/main.c    ****             if ( timePulse <= PWM_MIN )
 195:Src/main.c    ****                 tDivide = UP;
 196:Src/main.c    ****             else
 197:Src/main.c    ****                 timePulseDivider -= PWM_MIN_CHANGE;
 198:Src/main.c    ****         }
 199:Src/main.c    **** 
 200:Src/main.c    ****     } else if( ! HAL_GPIO_ReadPin(B2_user_GPIO_Port, B2_user_Pin) ){
 201:Src/main.c    **** 
 202:Src/main.c    ****         HAL_GPIO_WritePin( GPIOE, GPIO_PIN_14, GPIO_PIN_RESET );
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 5


 203:Src/main.c    ****     }
 204:Src/main.c    **** 
 205:Src/main.c    **** 
 206:Src/main.c    ****     /* USER CODE END WHILE */
 207:Src/main.c    **** 
 208:Src/main.c    ****     /* USER CODE BEGIN 3 */
 209:Src/main.c    ****     // HAL_GPIO_TogglePin (GPIOE, GPIO_PIN_8);
 210:Src/main.c    ****     HAL_Delay (300);
 211:Src/main.c    ****     HAL_GPIO_TogglePin (GPIOE, GPIO_PIN_15);
 212:Src/main.c    ****  }
 213:Src/main.c    ****   /* USER CODE END 3 */
 214:Src/main.c    **** }
 215:Src/main.c    **** 
 216:Src/main.c    **** /**
 217:Src/main.c    ****   * @brief System Clock Configuration
 218:Src/main.c    ****   * @retval None
 219:Src/main.c    ****   */
 220:Src/main.c    **** void SystemClock_Config(void)
 221:Src/main.c    **** {
 222:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 223:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 224:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 225:Src/main.c    **** 
 226:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 227:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 228:Src/main.c    ****   */
 229:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 230:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 231:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 232:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 233:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 234:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 235:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 236:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 237:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 238:Src/main.c    ****   {
 239:Src/main.c    ****     Error_Handler();
 240:Src/main.c    ****   }
 241:Src/main.c    **** 
 242:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 243:Src/main.c    ****   */
 244:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 245:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 246:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 247:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 248:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 249:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 250:Src/main.c    **** 
 251:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 252:Src/main.c    ****   {
 253:Src/main.c    ****     Error_Handler();
 254:Src/main.c    ****   }
 255:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB|RCC_PERIPHCLK_I2C1
 256:Src/main.c    ****                               |RCC_PERIPHCLK_TIM1|RCC_PERIPHCLK_TIM8;
 257:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 258:Src/main.c    ****   PeriphClkInit.USBClockSelection = RCC_USBCLKSOURCE_PLL;
 259:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 6


 260:Src/main.c    ****   PeriphClkInit.Tim8ClockSelection = RCC_TIM8CLK_HCLK;
 261:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 262:Src/main.c    ****   {
 263:Src/main.c    ****     Error_Handler();
 264:Src/main.c    ****   }
 265:Src/main.c    **** }
 266:Src/main.c    **** 
 267:Src/main.c    **** /**
 268:Src/main.c    ****   * @brief I2C1 Initialization Function
 269:Src/main.c    ****   * @param None
 270:Src/main.c    ****   * @retval None
 271:Src/main.c    ****   */
 272:Src/main.c    **** static void MX_I2C1_Init(void)
 273:Src/main.c    **** {
 274:Src/main.c    **** 
 275:Src/main.c    ****   /* USER CODE BEGIN I2C1_Init 0 */
 276:Src/main.c    **** 
 277:Src/main.c    ****   /* USER CODE END I2C1_Init 0 */
 278:Src/main.c    **** 
 279:Src/main.c    ****   /* USER CODE BEGIN I2C1_Init 1 */
 280:Src/main.c    **** 
 281:Src/main.c    ****   /* USER CODE END I2C1_Init 1 */
 282:Src/main.c    ****   hi2c1.Instance = I2C1;
 283:Src/main.c    ****   hi2c1.Init.Timing = 0x2000090E;
 284:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 285:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 286:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 287:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 288:Src/main.c    ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 289:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 290:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 291:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 292:Src/main.c    ****   {
 293:Src/main.c    ****     Error_Handler();
 294:Src/main.c    ****   }
 295:Src/main.c    **** 
 296:Src/main.c    ****   /** Configure Analogue filter
 297:Src/main.c    ****   */
 298:Src/main.c    ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 299:Src/main.c    ****   {
 300:Src/main.c    ****     Error_Handler();
 301:Src/main.c    ****   }
 302:Src/main.c    **** 
 303:Src/main.c    ****   /** Configure Digital filter
 304:Src/main.c    ****   */
 305:Src/main.c    ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 306:Src/main.c    ****   {
 307:Src/main.c    ****     Error_Handler();
 308:Src/main.c    ****   }
 309:Src/main.c    ****   /* USER CODE BEGIN I2C1_Init 2 */
 310:Src/main.c    **** 
 311:Src/main.c    ****   /* USER CODE END I2C1_Init 2 */
 312:Src/main.c    **** 
 313:Src/main.c    **** }
 314:Src/main.c    **** 
 315:Src/main.c    **** /**
 316:Src/main.c    ****   * @brief SPI1 Initialization Function
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 7


 317:Src/main.c    ****   * @param None
 318:Src/main.c    ****   * @retval None
 319:Src/main.c    ****   */
 320:Src/main.c    **** static void MX_SPI1_Init(void)
 321:Src/main.c    **** {
 322:Src/main.c    **** 
 323:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 324:Src/main.c    **** 
 325:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 326:Src/main.c    **** 
 327:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 328:Src/main.c    **** 
 329:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 330:Src/main.c    ****   /* SPI1 parameter configuration*/
 331:Src/main.c    ****   hspi1.Instance = SPI1;
 332:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 333:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 334:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_4BIT;
 335:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 336:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 337:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 338:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 339:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 340:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 341:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 342:Src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 343:Src/main.c    ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 344:Src/main.c    ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 345:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 346:Src/main.c    ****   {
 347:Src/main.c    ****     Error_Handler();
 348:Src/main.c    ****   }
 349:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 350:Src/main.c    **** 
 351:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 352:Src/main.c    **** 
 353:Src/main.c    **** }
 354:Src/main.c    **** 
 355:Src/main.c    **** /**
 356:Src/main.c    ****   * @brief TIM1 Initialization Function
 357:Src/main.c    ****   * @param None
 358:Src/main.c    ****   * @retval None
 359:Src/main.c    ****   */
 360:Src/main.c    **** static void MX_TIM1_Init(void)
 361:Src/main.c    **** {
 362:Src/main.c    **** 
 363:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 0 */
 364:Src/main.c    **** 
 365:Src/main.c    ****   /* USER CODE END TIM1_Init 0 */
 366:Src/main.c    **** 
 367:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 368:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 369:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 370:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 371:Src/main.c    **** 
 372:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 1 */
 373:Src/main.c    **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 8


 374:Src/main.c    ****   /* USER CODE END TIM1_Init 1 */
 375:Src/main.c    ****   htim1.Instance = TIM1;
 376:Src/main.c    ****   htim1.Init.Prescaler = 384-1;
 377:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 378:Src/main.c    ****   htim1.Init.Period = 500-1;
 379:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 380:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 381:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 382:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 383:Src/main.c    ****   {
 384:Src/main.c    ****     Error_Handler();
 385:Src/main.c    ****   }
 386:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 387:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 388:Src/main.c    ****   {
 389:Src/main.c    ****     Error_Handler();
 390:Src/main.c    ****   }
 391:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 392:Src/main.c    ****   {
 393:Src/main.c    ****     Error_Handler();
 394:Src/main.c    ****   }
 395:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 396:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 397:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 398:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 399:Src/main.c    ****   {
 400:Src/main.c    ****     Error_Handler();
 401:Src/main.c    ****   }
 402:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 403:Src/main.c    ****   sConfigOC.Pulse = 50;
 404:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 405:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 406:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 407:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 408:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 409:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 410:Src/main.c    ****   {
 411:Src/main.c    ****     Error_Handler();
 412:Src/main.c    ****   }
 413:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 414:Src/main.c    ****   {
 415:Src/main.c    ****     Error_Handler();
 416:Src/main.c    ****   }
 417:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 418:Src/main.c    ****   {
 419:Src/main.c    ****     Error_Handler();
 420:Src/main.c    ****   }
 421:Src/main.c    ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 422:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 423:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 424:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 425:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 426:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 427:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 428:Src/main.c    ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 429:Src/main.c    ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 430:Src/main.c    ****   sBreakDeadTimeConfig.Break2Filter = 0;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 9


 431:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 432:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 433:Src/main.c    ****   {
 434:Src/main.c    ****     Error_Handler();
 435:Src/main.c    ****   }
 436:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 2 */
 437:Src/main.c    **** 
 438:Src/main.c    ****   /* USER CODE END TIM1_Init 2 */
 439:Src/main.c    ****   HAL_TIM_MspPostInit(&htim1);
 440:Src/main.c    **** 
 441:Src/main.c    **** }
 442:Src/main.c    **** 
 443:Src/main.c    **** /**
 444:Src/main.c    ****   * @brief TIM2 Initialization Function
 445:Src/main.c    ****   * @param None
 446:Src/main.c    ****   * @retval None
 447:Src/main.c    ****   */
 448:Src/main.c    **** static void MX_TIM2_Init(void)
 449:Src/main.c    **** {
 450:Src/main.c    **** 
 451:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 452:Src/main.c    **** 
 453:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 454:Src/main.c    **** 
 455:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 456:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 457:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 458:Src/main.c    **** 
 459:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 460:Src/main.c    **** 
 461:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 462:Src/main.c    ****   htim2.Instance = TIM2;
 463:Src/main.c    ****   htim2.Init.Prescaler = 4;
 464:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 465:Src/main.c    ****   htim2.Init.Period = 1000;
 466:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 467:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 468:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 469:Src/main.c    ****   {
 470:Src/main.c    ****     Error_Handler();
 471:Src/main.c    ****   }
 472:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 473:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 474:Src/main.c    ****   {
 475:Src/main.c    ****     Error_Handler();
 476:Src/main.c    ****   }
 477:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 478:Src/main.c    ****   {
 479:Src/main.c    ****     Error_Handler();
 480:Src/main.c    ****   }
 481:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 482:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 483:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 484:Src/main.c    ****   {
 485:Src/main.c    ****     Error_Handler();
 486:Src/main.c    ****   }
 487:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 10


 488:Src/main.c    ****   sConfigOC.Pulse = 0;
 489:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 490:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 491:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 492:Src/main.c    ****   {
 493:Src/main.c    ****     Error_Handler();
 494:Src/main.c    ****   }
 495:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 496:Src/main.c    **** 
 497:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 498:Src/main.c    ****   HAL_TIM_MspPostInit(&htim2);
 499:Src/main.c    **** 
 500:Src/main.c    **** }
 501:Src/main.c    **** 
 502:Src/main.c    **** /**
 503:Src/main.c    ****   * @brief TIM3 Initialization Function
 504:Src/main.c    ****   * @param None
 505:Src/main.c    ****   * @retval None
 506:Src/main.c    ****   */
 507:Src/main.c    **** static void MX_TIM3_Init(void)
 508:Src/main.c    **** {
 509:Src/main.c    **** 
 510:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 0 */
 511:Src/main.c    **** 
 512:Src/main.c    ****   /* USER CODE END TIM3_Init 0 */
 513:Src/main.c    **** 
 514:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 515:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 516:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 517:Src/main.c    **** 
 518:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 1 */
 519:Src/main.c    **** 
 520:Src/main.c    ****   /* USER CODE END TIM3_Init 1 */
 521:Src/main.c    ****   htim3.Instance = TIM3;
 522:Src/main.c    ****   htim3.Init.Prescaler = 500;
 523:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 524:Src/main.c    ****   htim3.Init.Period = 800;
 525:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 526:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 527:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 528:Src/main.c    ****   {
 529:Src/main.c    ****     Error_Handler();
 530:Src/main.c    ****   }
 531:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 532:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 533:Src/main.c    ****   {
 534:Src/main.c    ****     Error_Handler();
 535:Src/main.c    ****   }
 536:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 537:Src/main.c    ****   {
 538:Src/main.c    ****     Error_Handler();
 539:Src/main.c    ****   }
 540:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 541:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 542:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 543:Src/main.c    ****   {
 544:Src/main.c    ****     Error_Handler();
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 11


 545:Src/main.c    ****   }
 546:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 547:Src/main.c    ****   sConfigOC.Pulse = 0;
 548:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 549:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 550:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 551:Src/main.c    ****   {
 552:Src/main.c    ****     Error_Handler();
 553:Src/main.c    ****   }
 554:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 555:Src/main.c    ****   {
 556:Src/main.c    ****     Error_Handler();
 557:Src/main.c    ****   }
 558:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 559:Src/main.c    ****   {
 560:Src/main.c    ****     Error_Handler();
 561:Src/main.c    ****   }
 562:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 563:Src/main.c    ****   {
 564:Src/main.c    ****     Error_Handler();
 565:Src/main.c    ****   }
 566:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 2 */
 567:Src/main.c    **** 
 568:Src/main.c    ****   /* USER CODE END TIM3_Init 2 */
 569:Src/main.c    ****   HAL_TIM_MspPostInit(&htim3);
 570:Src/main.c    **** 
 571:Src/main.c    **** }
 572:Src/main.c    **** 
 573:Src/main.c    **** /**
 574:Src/main.c    ****   * @brief TIM4 Initialization Function
 575:Src/main.c    ****   * @param None
 576:Src/main.c    ****   * @retval None
 577:Src/main.c    ****   */
 578:Src/main.c    **** static void MX_TIM4_Init(void)
 579:Src/main.c    **** {
 580:Src/main.c    **** 
 581:Src/main.c    ****   /* USER CODE BEGIN TIM4_Init 0 */
 582:Src/main.c    **** 
 583:Src/main.c    ****   /* USER CODE END TIM4_Init 0 */
 584:Src/main.c    **** 
 585:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 586:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 587:Src/main.c    **** 
 588:Src/main.c    ****   /* USER CODE BEGIN TIM4_Init 1 */
 589:Src/main.c    **** 
 590:Src/main.c    ****   /* USER CODE END TIM4_Init 1 */
 591:Src/main.c    ****   htim4.Instance = TIM4;
 592:Src/main.c    ****   htim4.Init.Prescaler = 0;
 593:Src/main.c    ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 594:Src/main.c    ****   htim4.Init.Period = 65535;
 595:Src/main.c    ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 596:Src/main.c    ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 597:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 598:Src/main.c    ****   {
 599:Src/main.c    ****     Error_Handler();
 600:Src/main.c    ****   }
 601:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 12


 602:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 603:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 604:Src/main.c    ****   {
 605:Src/main.c    ****     Error_Handler();
 606:Src/main.c    ****   }
 607:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 608:Src/main.c    ****   sConfigOC.Pulse = 0;
 609:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 610:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 611:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 612:Src/main.c    ****   {
 613:Src/main.c    ****     Error_Handler();
 614:Src/main.c    ****   }
 615:Src/main.c    ****   /* USER CODE BEGIN TIM4_Init 2 */
 616:Src/main.c    **** 
 617:Src/main.c    ****   /* USER CODE END TIM4_Init 2 */
 618:Src/main.c    ****   HAL_TIM_MspPostInit(&htim4);
 619:Src/main.c    **** 
 620:Src/main.c    **** }
 621:Src/main.c    **** 
 622:Src/main.c    **** /**
 623:Src/main.c    ****   * @brief TIM7 Initialization Function
 624:Src/main.c    ****   * @param None
 625:Src/main.c    ****   * @retval None
 626:Src/main.c    ****   */
 627:Src/main.c    **** static void MX_TIM7_Init(void)
 628:Src/main.c    **** {
 629:Src/main.c    **** 
 630:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 0 */
 631:Src/main.c    **** 
 632:Src/main.c    ****   /* USER CODE END TIM7_Init 0 */
 633:Src/main.c    **** 
 634:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 635:Src/main.c    **** 
 636:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 1 */
 637:Src/main.c    **** 
 638:Src/main.c    ****   /* USER CODE END TIM7_Init 1 */
 639:Src/main.c    ****   htim7.Instance = TIM7;
 640:Src/main.c    ****   htim7.Init.Prescaler = 4;
 641:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 642:Src/main.c    ****   htim7.Init.Period = 100;
 643:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 644:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 645:Src/main.c    ****   {
 646:Src/main.c    ****     Error_Handler();
 647:Src/main.c    ****   }
 648:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 649:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 650:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 651:Src/main.c    ****   {
 652:Src/main.c    ****     Error_Handler();
 653:Src/main.c    ****   }
 654:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 2 */
 655:Src/main.c    **** 
 656:Src/main.c    ****   /* USER CODE END TIM7_Init 2 */
 657:Src/main.c    **** 
 658:Src/main.c    **** }
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 13


 659:Src/main.c    **** 
 660:Src/main.c    **** /**
 661:Src/main.c    ****   * @brief TIM8 Initialization Function
 662:Src/main.c    ****   * @param None
 663:Src/main.c    ****   * @retval None
 664:Src/main.c    ****   */
 665:Src/main.c    **** static void MX_TIM8_Init(void)
 666:Src/main.c    **** {
 667:Src/main.c    **** 
 668:Src/main.c    ****   /* USER CODE BEGIN TIM8_Init 0 */
 669:Src/main.c    **** 
 670:Src/main.c    ****   /* USER CODE END TIM8_Init 0 */
 671:Src/main.c    **** 
 672:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 673:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 674:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 675:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 676:Src/main.c    **** 
 677:Src/main.c    ****   /* USER CODE BEGIN TIM8_Init 1 */
 678:Src/main.c    **** 
 679:Src/main.c    ****   /* USER CODE END TIM8_Init 1 */
 680:Src/main.c    ****   htim8.Instance = TIM8;
 681:Src/main.c    ****   htim8.Init.Prescaler = 0;
 682:Src/main.c    ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 683:Src/main.c    ****   htim8.Init.Period = 65535;
 684:Src/main.c    ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 685:Src/main.c    ****   htim8.Init.RepetitionCounter = 0;
 686:Src/main.c    ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 687:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 688:Src/main.c    ****   {
 689:Src/main.c    ****     Error_Handler();
 690:Src/main.c    ****   }
 691:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 692:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 693:Src/main.c    ****   {
 694:Src/main.c    ****     Error_Handler();
 695:Src/main.c    ****   }
 696:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim8) != HAL_OK)
 697:Src/main.c    ****   {
 698:Src/main.c    ****     Error_Handler();
 699:Src/main.c    ****   }
 700:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 701:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 702:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 703:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 704:Src/main.c    ****   {
 705:Src/main.c    ****     Error_Handler();
 706:Src/main.c    ****   }
 707:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 708:Src/main.c    ****   sConfigOC.Pulse = 0;
 709:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 710:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 711:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 712:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 713:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 714:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 715:Src/main.c    ****   {
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 14


 716:Src/main.c    ****     Error_Handler();
 717:Src/main.c    ****   }
 718:Src/main.c    ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 719:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 720:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 721:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 722:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 723:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 724:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 725:Src/main.c    ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 726:Src/main.c    ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 727:Src/main.c    ****   sBreakDeadTimeConfig.Break2Filter = 0;
 728:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 729:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 730:Src/main.c    ****   {
 731:Src/main.c    ****     Error_Handler();
 732:Src/main.c    ****   }
 733:Src/main.c    ****   /* USER CODE BEGIN TIM8_Init 2 */
 734:Src/main.c    **** 
 735:Src/main.c    ****   /* USER CODE END TIM8_Init 2 */
 736:Src/main.c    ****   HAL_TIM_MspPostInit(&htim8);
 737:Src/main.c    **** 
 738:Src/main.c    **** }
 739:Src/main.c    **** 
 740:Src/main.c    **** /**
 741:Src/main.c    ****   * @brief TIM15 Initialization Function
 742:Src/main.c    ****   * @param None
 743:Src/main.c    ****   * @retval None
 744:Src/main.c    ****   */
 745:Src/main.c    **** static void MX_TIM15_Init(void)
 746:Src/main.c    **** {
 747:Src/main.c    **** 
 748:Src/main.c    ****   /* USER CODE BEGIN TIM15_Init 0 */
 749:Src/main.c    **** 
 750:Src/main.c    ****   /* USER CODE END TIM15_Init 0 */
 751:Src/main.c    **** 
 752:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 753:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 754:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 755:Src/main.c    **** 
 756:Src/main.c    ****   /* USER CODE BEGIN TIM15_Init 1 */
 757:Src/main.c    **** 
 758:Src/main.c    ****   /* USER CODE END TIM15_Init 1 */
 759:Src/main.c    ****   htim15.Instance = TIM15;
 760:Src/main.c    ****   htim15.Init.Prescaler = 0;
 761:Src/main.c    ****   htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 762:Src/main.c    ****   htim15.Init.Period = 65535;
 763:Src/main.c    ****   htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 764:Src/main.c    ****   htim15.Init.RepetitionCounter = 0;
 765:Src/main.c    ****   htim15.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 766:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim15) != HAL_OK)
 767:Src/main.c    ****   {
 768:Src/main.c    ****     Error_Handler();
 769:Src/main.c    ****   }
 770:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 771:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 772:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim15, &sMasterConfig) != HAL_OK)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 15


 773:Src/main.c    ****   {
 774:Src/main.c    ****     Error_Handler();
 775:Src/main.c    ****   }
 776:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 777:Src/main.c    ****   sConfigOC.Pulse = 0;
 778:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 779:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 780:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 781:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 782:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 783:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim15, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 784:Src/main.c    ****   {
 785:Src/main.c    ****     Error_Handler();
 786:Src/main.c    ****   }
 787:Src/main.c    ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 788:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 789:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 790:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 791:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 792:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 793:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 794:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 795:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim15, &sBreakDeadTimeConfig) != HAL_OK)
 796:Src/main.c    ****   {
 797:Src/main.c    ****     Error_Handler();
 798:Src/main.c    ****   }
 799:Src/main.c    ****   /* USER CODE BEGIN TIM15_Init 2 */
 800:Src/main.c    **** 
 801:Src/main.c    ****   /* USER CODE END TIM15_Init 2 */
 802:Src/main.c    ****   HAL_TIM_MspPostInit(&htim15);
 803:Src/main.c    **** 
 804:Src/main.c    **** }
 805:Src/main.c    **** 
 806:Src/main.c    **** /**
 807:Src/main.c    ****   * @brief TIM16 Initialization Function
 808:Src/main.c    ****   * @param None
 809:Src/main.c    ****   * @retval None
 810:Src/main.c    ****   */
 811:Src/main.c    **** static void MX_TIM16_Init(void)
 812:Src/main.c    **** {
 813:Src/main.c    **** 
 814:Src/main.c    ****   /* USER CODE BEGIN TIM16_Init 0 */
 815:Src/main.c    **** 
 816:Src/main.c    ****   /* USER CODE END TIM16_Init 0 */
 817:Src/main.c    **** 
 818:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 819:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 820:Src/main.c    **** 
 821:Src/main.c    ****   /* USER CODE BEGIN TIM16_Init 1 */
 822:Src/main.c    **** 
 823:Src/main.c    ****   /* USER CODE END TIM16_Init 1 */
 824:Src/main.c    ****   htim16.Instance = TIM16;
 825:Src/main.c    ****   htim16.Init.Prescaler = 0;
 826:Src/main.c    ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 827:Src/main.c    ****   htim16.Init.Period = 65535;
 828:Src/main.c    ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 829:Src/main.c    ****   htim16.Init.RepetitionCounter = 0;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 16


 830:Src/main.c    ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 831:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 832:Src/main.c    ****   {
 833:Src/main.c    ****     Error_Handler();
 834:Src/main.c    ****   }
 835:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim16) != HAL_OK)
 836:Src/main.c    ****   {
 837:Src/main.c    ****     Error_Handler();
 838:Src/main.c    ****   }
 839:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 840:Src/main.c    ****   sConfigOC.Pulse = 0;
 841:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 842:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 843:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 844:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 845:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 846:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim16, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 847:Src/main.c    ****   {
 848:Src/main.c    ****     Error_Handler();
 849:Src/main.c    ****   }
 850:Src/main.c    ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 851:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 852:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 853:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 854:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 855:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 856:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 857:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 858:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim16, &sBreakDeadTimeConfig) != HAL_OK)
 859:Src/main.c    ****   {
 860:Src/main.c    ****     Error_Handler();
 861:Src/main.c    ****   }
 862:Src/main.c    ****   /* USER CODE BEGIN TIM16_Init 2 */
 863:Src/main.c    **** 
 864:Src/main.c    ****   /* USER CODE END TIM16_Init 2 */
 865:Src/main.c    ****   HAL_TIM_MspPostInit(&htim16);
 866:Src/main.c    **** 
 867:Src/main.c    **** }
 868:Src/main.c    **** 
 869:Src/main.c    **** /**
 870:Src/main.c    ****   * @brief TIM17 Initialization Function
 871:Src/main.c    ****   * @param None
 872:Src/main.c    ****   * @retval None
 873:Src/main.c    ****   */
 874:Src/main.c    **** static void MX_TIM17_Init(void)
 875:Src/main.c    **** {
 876:Src/main.c    **** 
 877:Src/main.c    ****   /* USER CODE BEGIN TIM17_Init 0 */
 878:Src/main.c    **** 
 879:Src/main.c    ****   /* USER CODE END TIM17_Init 0 */
 880:Src/main.c    **** 
 881:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 882:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 883:Src/main.c    **** 
 884:Src/main.c    ****   /* USER CODE BEGIN TIM17_Init 1 */
 885:Src/main.c    **** 
 886:Src/main.c    ****   /* USER CODE END TIM17_Init 1 */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 17


 887:Src/main.c    ****   htim17.Instance = TIM17;
 888:Src/main.c    ****   htim17.Init.Prescaler = 0;
 889:Src/main.c    ****   htim17.Init.CounterMode = TIM_COUNTERMODE_UP;
 890:Src/main.c    ****   htim17.Init.Period = 65535;
 891:Src/main.c    ****   htim17.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 892:Src/main.c    ****   htim17.Init.RepetitionCounter = 0;
 893:Src/main.c    ****   htim17.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 894:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim17) != HAL_OK)
 895:Src/main.c    ****   {
 896:Src/main.c    ****     Error_Handler();
 897:Src/main.c    ****   }
 898:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim17) != HAL_OK)
 899:Src/main.c    ****   {
 900:Src/main.c    ****     Error_Handler();
 901:Src/main.c    ****   }
 902:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 903:Src/main.c    ****   sConfigOC.Pulse = 0;
 904:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 905:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 906:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 907:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 908:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 909:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim17, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 910:Src/main.c    ****   {
 911:Src/main.c    ****     Error_Handler();
 912:Src/main.c    ****   }
 913:Src/main.c    ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 914:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 915:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 916:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 917:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 918:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 919:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 920:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 921:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim17, &sBreakDeadTimeConfig) != HAL_OK)
 922:Src/main.c    ****   {
 923:Src/main.c    ****     Error_Handler();
 924:Src/main.c    ****   }
 925:Src/main.c    ****   /* USER CODE BEGIN TIM17_Init 2 */
 926:Src/main.c    **** 
 927:Src/main.c    ****   /* USER CODE END TIM17_Init 2 */
 928:Src/main.c    ****   HAL_TIM_MspPostInit(&htim17);
 929:Src/main.c    **** 
 930:Src/main.c    **** }
 931:Src/main.c    **** 
 932:Src/main.c    **** /**
 933:Src/main.c    ****   * @brief USB Initialization Function
 934:Src/main.c    ****   * @param None
 935:Src/main.c    ****   * @retval None
 936:Src/main.c    ****   */
 937:Src/main.c    **** static void MX_USB_PCD_Init(void)
 938:Src/main.c    **** {
 939:Src/main.c    **** 
 940:Src/main.c    ****   /* USER CODE BEGIN USB_Init 0 */
 941:Src/main.c    **** 
 942:Src/main.c    ****   /* USER CODE END USB_Init 0 */
 943:Src/main.c    **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 18


 944:Src/main.c    ****   /* USER CODE BEGIN USB_Init 1 */
 945:Src/main.c    **** 
 946:Src/main.c    ****   /* USER CODE END USB_Init 1 */
 947:Src/main.c    ****   hpcd_USB_FS.Instance = USB;
 948:Src/main.c    ****   hpcd_USB_FS.Init.dev_endpoints = 8;
 949:Src/main.c    ****   hpcd_USB_FS.Init.speed = PCD_SPEED_FULL;
 950:Src/main.c    ****   hpcd_USB_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 951:Src/main.c    ****   hpcd_USB_FS.Init.low_power_enable = DISABLE;
 952:Src/main.c    ****   hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 953:Src/main.c    ****   if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)
 954:Src/main.c    ****   {
 955:Src/main.c    ****     Error_Handler();
 956:Src/main.c    ****   }
 957:Src/main.c    ****   /* USER CODE BEGIN USB_Init 2 */
 958:Src/main.c    **** 
 959:Src/main.c    ****   /* USER CODE END USB_Init 2 */
 960:Src/main.c    **** 
 961:Src/main.c    **** }
 962:Src/main.c    **** 
 963:Src/main.c    **** /**
 964:Src/main.c    ****   * @brief GPIO Initialization Function
 965:Src/main.c    ****   * @param None
 966:Src/main.c    ****   * @retval None
 967:Src/main.c    ****   */
 968:Src/main.c    **** static void MX_GPIO_Init(void)
 969:Src/main.c    **** {
  28              		.loc 1 969 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 48
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 8CB0     		sub	sp, sp, #48
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 64
 970:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 970 3 view .LVU1
  43              		.loc 1 970 20 is_stmt 0 view .LVU2
  44 0004 0024     		movs	r4, #0
  45 0006 0794     		str	r4, [sp, #28]
  46 0008 0894     		str	r4, [sp, #32]
  47 000a 0994     		str	r4, [sp, #36]
  48 000c 0A94     		str	r4, [sp, #40]
  49 000e 0B94     		str	r4, [sp, #44]
 971:Src/main.c    **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 972:Src/main.c    **** /* USER CODE END MX_GPIO_Init_1 */
 973:Src/main.c    **** 
 974:Src/main.c    ****   /* GPIO Ports Clock Enable */
 975:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  50              		.loc 1 975 3 is_stmt 1 view .LVU3
  51              	.LBB4:
  52              		.loc 1 975 3 view .LVU4
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 19


  53              		.loc 1 975 3 view .LVU5
  54 0010 324B     		ldr	r3, .L3
  55 0012 5A69     		ldr	r2, [r3, #20]
  56 0014 42F40012 		orr	r2, r2, #2097152
  57 0018 5A61     		str	r2, [r3, #20]
  58              		.loc 1 975 3 view .LVU6
  59 001a 5A69     		ldr	r2, [r3, #20]
  60 001c 02F40012 		and	r2, r2, #2097152
  61 0020 0192     		str	r2, [sp, #4]
  62              		.loc 1 975 3 view .LVU7
  63 0022 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 975 3 view .LVU8
 976:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  66              		.loc 1 976 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 976 3 view .LVU10
  69              		.loc 1 976 3 view .LVU11
  70 0024 5A69     		ldr	r2, [r3, #20]
  71 0026 42F40022 		orr	r2, r2, #524288
  72 002a 5A61     		str	r2, [r3, #20]
  73              		.loc 1 976 3 view .LVU12
  74 002c 5A69     		ldr	r2, [r3, #20]
  75 002e 02F40022 		and	r2, r2, #524288
  76 0032 0292     		str	r2, [sp, #8]
  77              		.loc 1 976 3 view .LVU13
  78 0034 029A     		ldr	r2, [sp, #8]
  79              	.LBE5:
  80              		.loc 1 976 3 view .LVU14
 977:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  81              		.loc 1 977 3 view .LVU15
  82              	.LBB6:
  83              		.loc 1 977 3 view .LVU16
  84              		.loc 1 977 3 view .LVU17
  85 0036 5A69     		ldr	r2, [r3, #20]
  86 0038 42F48002 		orr	r2, r2, #4194304
  87 003c 5A61     		str	r2, [r3, #20]
  88              		.loc 1 977 3 view .LVU18
  89 003e 5A69     		ldr	r2, [r3, #20]
  90 0040 02F48002 		and	r2, r2, #4194304
  91 0044 0392     		str	r2, [sp, #12]
  92              		.loc 1 977 3 view .LVU19
  93 0046 039A     		ldr	r2, [sp, #12]
  94              	.LBE6:
  95              		.loc 1 977 3 view .LVU20
 978:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  96              		.loc 1 978 3 view .LVU21
  97              	.LBB7:
  98              		.loc 1 978 3 view .LVU22
  99              		.loc 1 978 3 view .LVU23
 100 0048 5A69     		ldr	r2, [r3, #20]
 101 004a 42F40032 		orr	r2, r2, #131072
 102 004e 5A61     		str	r2, [r3, #20]
 103              		.loc 1 978 3 view .LVU24
 104 0050 5A69     		ldr	r2, [r3, #20]
 105 0052 02F40032 		and	r2, r2, #131072
 106 0056 0492     		str	r2, [sp, #16]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 20


 107              		.loc 1 978 3 view .LVU25
 108 0058 049A     		ldr	r2, [sp, #16]
 109              	.LBE7:
 110              		.loc 1 978 3 view .LVU26
 979:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 111              		.loc 1 979 3 view .LVU27
 112              	.LBB8:
 113              		.loc 1 979 3 view .LVU28
 114              		.loc 1 979 3 view .LVU29
 115 005a 5A69     		ldr	r2, [r3, #20]
 116 005c 42F48022 		orr	r2, r2, #262144
 117 0060 5A61     		str	r2, [r3, #20]
 118              		.loc 1 979 3 view .LVU30
 119 0062 5A69     		ldr	r2, [r3, #20]
 120 0064 02F48022 		and	r2, r2, #262144
 121 0068 0592     		str	r2, [sp, #20]
 122              		.loc 1 979 3 view .LVU31
 123 006a 059A     		ldr	r2, [sp, #20]
 124              	.LBE8:
 125              		.loc 1 979 3 view .LVU32
 980:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 126              		.loc 1 980 3 view .LVU33
 127              	.LBB9:
 128              		.loc 1 980 3 view .LVU34
 129              		.loc 1 980 3 view .LVU35
 130 006c 5A69     		ldr	r2, [r3, #20]
 131 006e 42F48012 		orr	r2, r2, #1048576
 132 0072 5A61     		str	r2, [r3, #20]
 133              		.loc 1 980 3 view .LVU36
 134 0074 5B69     		ldr	r3, [r3, #20]
 135 0076 03F48013 		and	r3, r3, #1048576
 136 007a 0693     		str	r3, [sp, #24]
 137              		.loc 1 980 3 view .LVU37
 138 007c 069B     		ldr	r3, [sp, #24]
 139              	.LBE9:
 140              		.loc 1 980 3 view .LVU38
 981:Src/main.c    **** 
 982:Src/main.c    ****   /*Configure GPIO pin Output Level */
 983:Src/main.c    ****   HAL_GPIO_WritePin(GPIOE, CS_I2C_SPI_Pin|LD4_Pin|GPIO_PIN_10|GPIO_PIN_12
 141              		.loc 1 983 3 view .LVU39
 142 007e 184D     		ldr	r5, .L3+4
 143 0080 2246     		mov	r2, r4
 144 0082 4DF20851 		movw	r1, #54536
 145 0086 2846     		mov	r0, r5
 146 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 147              	.LVL0:
 984:Src/main.c    ****                           |LD8_Pin|LD6_Pin, GPIO_PIN_RESET);
 985:Src/main.c    **** 
 986:Src/main.c    ****   /*Configure GPIO pins : DRDY_Pin MEMS_INT3_Pin MEMS_INT4_Pin MEMS_INT1_Pin
 987:Src/main.c    ****                            MEMS_INT2_Pin */
 988:Src/main.c    ****   GPIO_InitStruct.Pin = DRDY_Pin|MEMS_INT3_Pin|MEMS_INT4_Pin|MEMS_INT1_Pin
 148              		.loc 1 988 3 view .LVU40
 149              		.loc 1 988 23 is_stmt 0 view .LVU41
 150 008c 3723     		movs	r3, #55
 151 008e 0793     		str	r3, [sp, #28]
 989:Src/main.c    ****                           |MEMS_INT2_Pin;
 990:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 21


 152              		.loc 1 990 3 is_stmt 1 view .LVU42
 153              		.loc 1 990 24 is_stmt 0 view .LVU43
 154 0090 4FF49013 		mov	r3, #1179648
 155 0094 0893     		str	r3, [sp, #32]
 991:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 156              		.loc 1 991 3 is_stmt 1 view .LVU44
 157              		.loc 1 991 24 is_stmt 0 view .LVU45
 158 0096 0994     		str	r4, [sp, #36]
 992:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 159              		.loc 1 992 3 is_stmt 1 view .LVU46
 160 0098 07A9     		add	r1, sp, #28
 161 009a 2846     		mov	r0, r5
 162 009c FFF7FEFF 		bl	HAL_GPIO_Init
 163              	.LVL1:
 993:Src/main.c    **** 
 994:Src/main.c    ****   /*Configure GPIO pins : CS_I2C_SPI_Pin LD4_Pin PE10 PE12
 995:Src/main.c    ****                            LD8_Pin LD6_Pin */
 996:Src/main.c    ****   GPIO_InitStruct.Pin = CS_I2C_SPI_Pin|LD4_Pin|GPIO_PIN_10|GPIO_PIN_12
 164              		.loc 1 996 3 view .LVU47
 165              		.loc 1 996 23 is_stmt 0 view .LVU48
 166 00a0 4DF20853 		movw	r3, #54536
 167 00a4 0793     		str	r3, [sp, #28]
 997:Src/main.c    ****                           |LD8_Pin|LD6_Pin;
 998:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 168              		.loc 1 998 3 is_stmt 1 view .LVU49
 169              		.loc 1 998 24 is_stmt 0 view .LVU50
 170 00a6 0126     		movs	r6, #1
 171 00a8 0896     		str	r6, [sp, #32]
 999:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 172              		.loc 1 999 3 is_stmt 1 view .LVU51
 173              		.loc 1 999 24 is_stmt 0 view .LVU52
 174 00aa 0994     		str	r4, [sp, #36]
1000:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 175              		.loc 1 1000 3 is_stmt 1 view .LVU53
 176              		.loc 1 1000 25 is_stmt 0 view .LVU54
 177 00ac 0A94     		str	r4, [sp, #40]
1001:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 178              		.loc 1 1001 3 is_stmt 1 view .LVU55
 179 00ae 07A9     		add	r1, sp, #28
 180 00b0 2846     		mov	r0, r5
 181 00b2 FFF7FEFF 		bl	HAL_GPIO_Init
 182              	.LVL2:
1002:Src/main.c    **** 
1003:Src/main.c    ****   /*Configure GPIO pin : B1_user_Pin */
1004:Src/main.c    ****   GPIO_InitStruct.Pin = B1_user_Pin;
 183              		.loc 1 1004 3 view .LVU56
 184              		.loc 1 1004 23 is_stmt 0 view .LVU57
 185 00b6 0796     		str	r6, [sp, #28]
1005:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 186              		.loc 1 1005 3 is_stmt 1 view .LVU58
 187              		.loc 1 1005 24 is_stmt 0 view .LVU59
 188 00b8 0894     		str	r4, [sp, #32]
1006:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 189              		.loc 1 1006 3 is_stmt 1 view .LVU60
 190              		.loc 1 1006 24 is_stmt 0 view .LVU61
 191 00ba 0225     		movs	r5, #2
 192 00bc 0995     		str	r5, [sp, #36]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 22


1007:Src/main.c    ****   HAL_GPIO_Init(B1_user_GPIO_Port, &GPIO_InitStruct);
 193              		.loc 1 1007 3 is_stmt 1 view .LVU62
 194 00be 07A9     		add	r1, sp, #28
 195 00c0 4FF09040 		mov	r0, #1207959552
 196 00c4 FFF7FEFF 		bl	HAL_GPIO_Init
 197              	.LVL3:
1008:Src/main.c    **** 
1009:Src/main.c    ****   /*Configure GPIO pin : B2_user_Pin */
1010:Src/main.c    ****   GPIO_InitStruct.Pin = B2_user_Pin;
 198              		.loc 1 1010 3 view .LVU63
 199              		.loc 1 1010 23 is_stmt 0 view .LVU64
 200 00c8 1023     		movs	r3, #16
 201 00ca 0793     		str	r3, [sp, #28]
1011:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 202              		.loc 1 1011 3 is_stmt 1 view .LVU65
 203              		.loc 1 1011 24 is_stmt 0 view .LVU66
 204 00cc 0894     		str	r4, [sp, #32]
1012:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 205              		.loc 1 1012 3 is_stmt 1 view .LVU67
 206              		.loc 1 1012 24 is_stmt 0 view .LVU68
 207 00ce 0995     		str	r5, [sp, #36]
1013:Src/main.c    ****   HAL_GPIO_Init(B2_user_GPIO_Port, &GPIO_InitStruct);
 208              		.loc 1 1013 3 is_stmt 1 view .LVU69
 209 00d0 07A9     		add	r1, sp, #28
 210 00d2 0448     		ldr	r0, .L3+8
 211 00d4 FFF7FEFF 		bl	HAL_GPIO_Init
 212              	.LVL4:
1014:Src/main.c    **** 
1015:Src/main.c    **** /* USER CODE BEGIN MX_GPIO_Init_2 */
1016:Src/main.c    **** /* USER CODE END MX_GPIO_Init_2 */
1017:Src/main.c    **** }
 213              		.loc 1 1017 1 is_stmt 0 view .LVU70
 214 00d8 0CB0     		add	sp, sp, #48
 215              	.LCFI2:
 216              		.cfi_def_cfa_offset 16
 217              		@ sp needed
 218 00da 70BD     		pop	{r4, r5, r6, pc}
 219              	.L4:
 220              		.align	2
 221              	.L3:
 222 00dc 00100240 		.word	1073876992
 223 00e0 00100048 		.word	1207963648
 224 00e4 000C0048 		.word	1207962624
 225              		.cfi_endproc
 226              	.LFE144:
 228              		.section	.text.Error_Handler,"ax",%progbits
 229              		.align	1
 230              		.global	Error_Handler
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 235              	Error_Handler:
 236              	.LFB145:
1018:Src/main.c    **** 
1019:Src/main.c    **** /* USER CODE BEGIN 4 */
1020:Src/main.c    **** 
1021:Src/main.c    **** /* USER CODE END 4 */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 23


1022:Src/main.c    **** 
1023:Src/main.c    **** /**
1024:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
1025:Src/main.c    ****   * @retval None
1026:Src/main.c    ****   */
1027:Src/main.c    **** void Error_Handler(void)
1028:Src/main.c    **** {
 237              		.loc 1 1028 1 is_stmt 1 view -0
 238              		.cfi_startproc
 239              		@ Volatile: function does not return.
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		@ link register save eliminated.
1029:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
1030:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
1031:Src/main.c    ****   __disable_irq();
 243              		.loc 1 1031 3 view .LVU72
 244              	.LBB10:
 245              	.LBI10:
 246              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 24


  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 25


  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 247              		.loc 2 140 27 view .LVU73
 248              	.LBB11:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 249              		.loc 2 142 3 view .LVU74
 250              		.syntax unified
 251              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 252 0000 72B6     		cpsid i
 253              	@ 0 "" 2
 254              		.thumb
 255              		.syntax unified
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 26


 256              	.L6:
 257              	.LBE11:
 258              	.LBE10:
1032:Src/main.c    ****   while (1)
 259              		.loc 1 1032 3 view .LVU75
1033:Src/main.c    ****   {
1034:Src/main.c    ****   }
 260              		.loc 1 1034 3 view .LVU76
1032:Src/main.c    ****   while (1)
 261              		.loc 1 1032 9 view .LVU77
 262 0002 FEE7     		b	.L6
 263              		.cfi_endproc
 264              	.LFE145:
 266              		.section	.text.MX_I2C1_Init,"ax",%progbits
 267              		.align	1
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 272              	MX_I2C1_Init:
 273              	.LFB132:
 273:Src/main.c    **** 
 274              		.loc 1 273 1 view -0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278 0000 08B5     		push	{r3, lr}
 279              	.LCFI3:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 3, -8
 282              		.cfi_offset 14, -4
 282:Src/main.c    ****   hi2c1.Init.Timing = 0x2000090E;
 283              		.loc 1 282 3 view .LVU79
 282:Src/main.c    ****   hi2c1.Init.Timing = 0x2000090E;
 284              		.loc 1 282 18 is_stmt 0 view .LVU80
 285 0002 1148     		ldr	r0, .L15
 286 0004 114B     		ldr	r3, .L15+4
 287 0006 0360     		str	r3, [r0]
 283:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 288              		.loc 1 283 3 is_stmt 1 view .LVU81
 283:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 289              		.loc 1 283 21 is_stmt 0 view .LVU82
 290 0008 114B     		ldr	r3, .L15+8
 291 000a 4360     		str	r3, [r0, #4]
 284:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 292              		.loc 1 284 3 is_stmt 1 view .LVU83
 284:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 293              		.loc 1 284 26 is_stmt 0 view .LVU84
 294 000c 0023     		movs	r3, #0
 295 000e 8360     		str	r3, [r0, #8]
 285:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 296              		.loc 1 285 3 is_stmt 1 view .LVU85
 285:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 297              		.loc 1 285 29 is_stmt 0 view .LVU86
 298 0010 0122     		movs	r2, #1
 299 0012 C260     		str	r2, [r0, #12]
 286:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 300              		.loc 1 286 3 is_stmt 1 view .LVU87
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 27


 286:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 301              		.loc 1 286 30 is_stmt 0 view .LVU88
 302 0014 0361     		str	r3, [r0, #16]
 287:Src/main.c    ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 303              		.loc 1 287 3 is_stmt 1 view .LVU89
 287:Src/main.c    ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 304              		.loc 1 287 26 is_stmt 0 view .LVU90
 305 0016 4361     		str	r3, [r0, #20]
 288:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 306              		.loc 1 288 3 is_stmt 1 view .LVU91
 288:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 307              		.loc 1 288 31 is_stmt 0 view .LVU92
 308 0018 8361     		str	r3, [r0, #24]
 289:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 309              		.loc 1 289 3 is_stmt 1 view .LVU93
 289:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 310              		.loc 1 289 30 is_stmt 0 view .LVU94
 311 001a C361     		str	r3, [r0, #28]
 290:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 312              		.loc 1 290 3 is_stmt 1 view .LVU95
 290:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 313              		.loc 1 290 28 is_stmt 0 view .LVU96
 314 001c 0362     		str	r3, [r0, #32]
 291:Src/main.c    ****   {
 315              		.loc 1 291 3 is_stmt 1 view .LVU97
 291:Src/main.c    ****   {
 316              		.loc 1 291 7 is_stmt 0 view .LVU98
 317 001e FFF7FEFF 		bl	HAL_I2C_Init
 318              	.LVL5:
 291:Src/main.c    ****   {
 319              		.loc 1 291 6 discriminator 1 view .LVU99
 320 0022 50B9     		cbnz	r0, .L12
 298:Src/main.c    ****   {
 321              		.loc 1 298 3 is_stmt 1 view .LVU100
 298:Src/main.c    ****   {
 322              		.loc 1 298 7 is_stmt 0 view .LVU101
 323 0024 0021     		movs	r1, #0
 324 0026 0848     		ldr	r0, .L15
 325 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 326              	.LVL6:
 298:Src/main.c    ****   {
 327              		.loc 1 298 6 discriminator 1 view .LVU102
 328 002c 38B9     		cbnz	r0, .L13
 305:Src/main.c    ****   {
 329              		.loc 1 305 3 is_stmt 1 view .LVU103
 305:Src/main.c    ****   {
 330              		.loc 1 305 7 is_stmt 0 view .LVU104
 331 002e 0021     		movs	r1, #0
 332 0030 0548     		ldr	r0, .L15
 333 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 334              	.LVL7:
 305:Src/main.c    ****   {
 335              		.loc 1 305 6 discriminator 1 view .LVU105
 336 0036 20B9     		cbnz	r0, .L14
 313:Src/main.c    **** 
 337              		.loc 1 313 1 view .LVU106
 338 0038 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 28


 339              	.L12:
 293:Src/main.c    ****   }
 340              		.loc 1 293 5 is_stmt 1 view .LVU107
 341 003a FFF7FEFF 		bl	Error_Handler
 342              	.LVL8:
 343              	.L13:
 300:Src/main.c    ****   }
 344              		.loc 1 300 5 view .LVU108
 345 003e FFF7FEFF 		bl	Error_Handler
 346              	.LVL9:
 347              	.L14:
 307:Src/main.c    ****   }
 348              		.loc 1 307 5 view .LVU109
 349 0042 FFF7FEFF 		bl	Error_Handler
 350              	.LVL10:
 351              	.L16:
 352 0046 00BF     		.align	2
 353              	.L15:
 354 0048 00000000 		.word	hi2c1
 355 004c 00540040 		.word	1073763328
 356 0050 0E090020 		.word	536873230
 357              		.cfi_endproc
 358              	.LFE132:
 360              		.section	.text.MX_SPI1_Init,"ax",%progbits
 361              		.align	1
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 366              	MX_SPI1_Init:
 367              	.LFB133:
 321:Src/main.c    **** 
 368              		.loc 1 321 1 view -0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372 0000 08B5     		push	{r3, lr}
 373              	.LCFI4:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 3, -8
 376              		.cfi_offset 14, -4
 331:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 377              		.loc 1 331 3 view .LVU111
 331:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 378              		.loc 1 331 18 is_stmt 0 view .LVU112
 379 0002 0F48     		ldr	r0, .L21
 380 0004 0F4B     		ldr	r3, .L21+4
 381 0006 0360     		str	r3, [r0]
 332:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 382              		.loc 1 332 3 is_stmt 1 view .LVU113
 332:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 383              		.loc 1 332 19 is_stmt 0 view .LVU114
 384 0008 4FF48273 		mov	r3, #260
 385 000c 4360     		str	r3, [r0, #4]
 333:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_4BIT;
 386              		.loc 1 333 3 is_stmt 1 view .LVU115
 333:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_4BIT;
 387              		.loc 1 333 24 is_stmt 0 view .LVU116
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 29


 388 000e 0023     		movs	r3, #0
 389 0010 8360     		str	r3, [r0, #8]
 334:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 390              		.loc 1 334 3 is_stmt 1 view .LVU117
 334:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 391              		.loc 1 334 23 is_stmt 0 view .LVU118
 392 0012 4FF44072 		mov	r2, #768
 393 0016 C260     		str	r2, [r0, #12]
 335:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 394              		.loc 1 335 3 is_stmt 1 view .LVU119
 335:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 395              		.loc 1 335 26 is_stmt 0 view .LVU120
 396 0018 0361     		str	r3, [r0, #16]
 336:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 397              		.loc 1 336 3 is_stmt 1 view .LVU121
 336:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 398              		.loc 1 336 23 is_stmt 0 view .LVU122
 399 001a 4361     		str	r3, [r0, #20]
 337:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 400              		.loc 1 337 3 is_stmt 1 view .LVU123
 337:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 401              		.loc 1 337 18 is_stmt 0 view .LVU124
 402 001c 4FF40072 		mov	r2, #512
 403 0020 8261     		str	r2, [r0, #24]
 338:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 404              		.loc 1 338 3 is_stmt 1 view .LVU125
 338:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 405              		.loc 1 338 32 is_stmt 0 view .LVU126
 406 0022 0822     		movs	r2, #8
 407 0024 C261     		str	r2, [r0, #28]
 339:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 408              		.loc 1 339 3 is_stmt 1 view .LVU127
 339:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 409              		.loc 1 339 23 is_stmt 0 view .LVU128
 410 0026 0362     		str	r3, [r0, #32]
 340:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 411              		.loc 1 340 3 is_stmt 1 view .LVU129
 340:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 412              		.loc 1 340 21 is_stmt 0 view .LVU130
 413 0028 4362     		str	r3, [r0, #36]
 341:Src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 414              		.loc 1 341 3 is_stmt 1 view .LVU131
 341:Src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 415              		.loc 1 341 29 is_stmt 0 view .LVU132
 416 002a 8362     		str	r3, [r0, #40]
 342:Src/main.c    ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 417              		.loc 1 342 3 is_stmt 1 view .LVU133
 342:Src/main.c    ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 418              		.loc 1 342 28 is_stmt 0 view .LVU134
 419 002c 0721     		movs	r1, #7
 420 002e C162     		str	r1, [r0, #44]
 343:Src/main.c    ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 421              		.loc 1 343 3 is_stmt 1 view .LVU135
 343:Src/main.c    ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 422              		.loc 1 343 24 is_stmt 0 view .LVU136
 423 0030 0363     		str	r3, [r0, #48]
 344:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 30


 424              		.loc 1 344 3 is_stmt 1 view .LVU137
 344:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 425              		.loc 1 344 23 is_stmt 0 view .LVU138
 426 0032 4263     		str	r2, [r0, #52]
 345:Src/main.c    ****   {
 427              		.loc 1 345 3 is_stmt 1 view .LVU139
 345:Src/main.c    ****   {
 428              		.loc 1 345 7 is_stmt 0 view .LVU140
 429 0034 FFF7FEFF 		bl	HAL_SPI_Init
 430              	.LVL11:
 345:Src/main.c    ****   {
 431              		.loc 1 345 6 discriminator 1 view .LVU141
 432 0038 00B9     		cbnz	r0, .L20
 353:Src/main.c    **** 
 433              		.loc 1 353 1 view .LVU142
 434 003a 08BD     		pop	{r3, pc}
 435              	.L20:
 347:Src/main.c    ****   }
 436              		.loc 1 347 5 is_stmt 1 view .LVU143
 437 003c FFF7FEFF 		bl	Error_Handler
 438              	.LVL12:
 439              	.L22:
 440              		.align	2
 441              	.L21:
 442 0040 00000000 		.word	hspi1
 443 0044 00300140 		.word	1073819648
 444              		.cfi_endproc
 445              	.LFE133:
 447              		.section	.text.MX_TIM2_Init,"ax",%progbits
 448              		.align	1
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 453              	MX_TIM2_Init:
 454              	.LFB135:
 449:Src/main.c    **** 
 455              		.loc 1 449 1 view -0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 56
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459 0000 00B5     		push	{lr}
 460              	.LCFI5:
 461              		.cfi_def_cfa_offset 4
 462              		.cfi_offset 14, -4
 463 0002 8FB0     		sub	sp, sp, #60
 464              	.LCFI6:
 465              		.cfi_def_cfa_offset 64
 455:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 466              		.loc 1 455 3 view .LVU145
 455:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 467              		.loc 1 455 26 is_stmt 0 view .LVU146
 468 0004 0023     		movs	r3, #0
 469 0006 0A93     		str	r3, [sp, #40]
 470 0008 0B93     		str	r3, [sp, #44]
 471 000a 0C93     		str	r3, [sp, #48]
 472 000c 0D93     		str	r3, [sp, #52]
 456:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 31


 473              		.loc 1 456 3 is_stmt 1 view .LVU147
 456:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 474              		.loc 1 456 27 is_stmt 0 view .LVU148
 475 000e 0793     		str	r3, [sp, #28]
 476 0010 0893     		str	r3, [sp, #32]
 477 0012 0993     		str	r3, [sp, #36]
 457:Src/main.c    **** 
 478              		.loc 1 457 3 is_stmt 1 view .LVU149
 457:Src/main.c    **** 
 479              		.loc 1 457 22 is_stmt 0 view .LVU150
 480 0014 0093     		str	r3, [sp]
 481 0016 0193     		str	r3, [sp, #4]
 482 0018 0293     		str	r3, [sp, #8]
 483 001a 0393     		str	r3, [sp, #12]
 484 001c 0493     		str	r3, [sp, #16]
 485 001e 0593     		str	r3, [sp, #20]
 486 0020 0693     		str	r3, [sp, #24]
 462:Src/main.c    ****   htim2.Init.Prescaler = 4;
 487              		.loc 1 462 3 is_stmt 1 view .LVU151
 462:Src/main.c    ****   htim2.Init.Prescaler = 4;
 488              		.loc 1 462 18 is_stmt 0 view .LVU152
 489 0022 1F48     		ldr	r0, .L35
 490 0024 4FF08042 		mov	r2, #1073741824
 491 0028 0260     		str	r2, [r0]
 463:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 492              		.loc 1 463 3 is_stmt 1 view .LVU153
 463:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 493              		.loc 1 463 24 is_stmt 0 view .LVU154
 494 002a 0422     		movs	r2, #4
 495 002c 4260     		str	r2, [r0, #4]
 464:Src/main.c    ****   htim2.Init.Period = 1000;
 496              		.loc 1 464 3 is_stmt 1 view .LVU155
 464:Src/main.c    ****   htim2.Init.Period = 1000;
 497              		.loc 1 464 26 is_stmt 0 view .LVU156
 498 002e 8360     		str	r3, [r0, #8]
 465:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 499              		.loc 1 465 3 is_stmt 1 view .LVU157
 465:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 500              		.loc 1 465 21 is_stmt 0 view .LVU158
 501 0030 4FF47A72 		mov	r2, #1000
 502 0034 C260     		str	r2, [r0, #12]
 466:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 503              		.loc 1 466 3 is_stmt 1 view .LVU159
 466:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 504              		.loc 1 466 28 is_stmt 0 view .LVU160
 505 0036 0361     		str	r3, [r0, #16]
 467:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 506              		.loc 1 467 3 is_stmt 1 view .LVU161
 467:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 507              		.loc 1 467 32 is_stmt 0 view .LVU162
 508 0038 8361     		str	r3, [r0, #24]
 468:Src/main.c    ****   {
 509              		.loc 1 468 3 is_stmt 1 view .LVU163
 468:Src/main.c    ****   {
 510              		.loc 1 468 7 is_stmt 0 view .LVU164
 511 003a FFF7FEFF 		bl	HAL_TIM_Base_Init
 512              	.LVL13:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 32


 468:Src/main.c    ****   {
 513              		.loc 1 468 6 discriminator 1 view .LVU165
 514 003e 28BB     		cbnz	r0, .L30
 472:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 515              		.loc 1 472 3 is_stmt 1 view .LVU166
 472:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 516              		.loc 1 472 34 is_stmt 0 view .LVU167
 517 0040 4FF48053 		mov	r3, #4096
 518 0044 0A93     		str	r3, [sp, #40]
 473:Src/main.c    ****   {
 519              		.loc 1 473 3 is_stmt 1 view .LVU168
 473:Src/main.c    ****   {
 520              		.loc 1 473 7 is_stmt 0 view .LVU169
 521 0046 0AA9     		add	r1, sp, #40
 522 0048 1548     		ldr	r0, .L35
 523 004a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 524              	.LVL14:
 473:Src/main.c    ****   {
 525              		.loc 1 473 6 discriminator 1 view .LVU170
 526 004e F8B9     		cbnz	r0, .L31
 477:Src/main.c    ****   {
 527              		.loc 1 477 3 is_stmt 1 view .LVU171
 477:Src/main.c    ****   {
 528              		.loc 1 477 7 is_stmt 0 view .LVU172
 529 0050 1348     		ldr	r0, .L35
 530 0052 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 531              	.LVL15:
 477:Src/main.c    ****   {
 532              		.loc 1 477 6 discriminator 1 view .LVU173
 533 0056 E8B9     		cbnz	r0, .L32
 481:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 534              		.loc 1 481 3 is_stmt 1 view .LVU174
 481:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 535              		.loc 1 481 37 is_stmt 0 view .LVU175
 536 0058 0023     		movs	r3, #0
 537 005a 0793     		str	r3, [sp, #28]
 482:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 538              		.loc 1 482 3 is_stmt 1 view .LVU176
 482:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 539              		.loc 1 482 33 is_stmt 0 view .LVU177
 540 005c 0993     		str	r3, [sp, #36]
 483:Src/main.c    ****   {
 541              		.loc 1 483 3 is_stmt 1 view .LVU178
 483:Src/main.c    ****   {
 542              		.loc 1 483 7 is_stmt 0 view .LVU179
 543 005e 07A9     		add	r1, sp, #28
 544 0060 0F48     		ldr	r0, .L35
 545 0062 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 546              	.LVL16:
 483:Src/main.c    ****   {
 547              		.loc 1 483 6 discriminator 1 view .LVU180
 548 0066 B8B9     		cbnz	r0, .L33
 487:Src/main.c    ****   sConfigOC.Pulse = 0;
 549              		.loc 1 487 3 is_stmt 1 view .LVU181
 487:Src/main.c    ****   sConfigOC.Pulse = 0;
 550              		.loc 1 487 20 is_stmt 0 view .LVU182
 551 0068 6023     		movs	r3, #96
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 33


 552 006a 0093     		str	r3, [sp]
 488:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 553              		.loc 1 488 3 is_stmt 1 view .LVU183
 488:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 554              		.loc 1 488 19 is_stmt 0 view .LVU184
 555 006c 0023     		movs	r3, #0
 556 006e 0193     		str	r3, [sp, #4]
 489:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 557              		.loc 1 489 3 is_stmt 1 view .LVU185
 489:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 558              		.loc 1 489 24 is_stmt 0 view .LVU186
 559 0070 0293     		str	r3, [sp, #8]
 490:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 560              		.loc 1 490 3 is_stmt 1 view .LVU187
 490:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 561              		.loc 1 490 24 is_stmt 0 view .LVU188
 562 0072 0493     		str	r3, [sp, #16]
 491:Src/main.c    ****   {
 563              		.loc 1 491 3 is_stmt 1 view .LVU189
 491:Src/main.c    ****   {
 564              		.loc 1 491 7 is_stmt 0 view .LVU190
 565 0074 0422     		movs	r2, #4
 566 0076 6946     		mov	r1, sp
 567 0078 0948     		ldr	r0, .L35
 568 007a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 569              	.LVL17:
 491:Src/main.c    ****   {
 570              		.loc 1 491 6 discriminator 1 view .LVU191
 571 007e 68B9     		cbnz	r0, .L34
 498:Src/main.c    **** 
 572              		.loc 1 498 3 is_stmt 1 view .LVU192
 573 0080 0748     		ldr	r0, .L35
 574 0082 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 575              	.LVL18:
 500:Src/main.c    **** 
 576              		.loc 1 500 1 is_stmt 0 view .LVU193
 577 0086 0FB0     		add	sp, sp, #60
 578              	.LCFI7:
 579              		.cfi_remember_state
 580              		.cfi_def_cfa_offset 4
 581              		@ sp needed
 582 0088 5DF804FB 		ldr	pc, [sp], #4
 583              	.L30:
 584              	.LCFI8:
 585              		.cfi_restore_state
 470:Src/main.c    ****   }
 586              		.loc 1 470 5 is_stmt 1 view .LVU194
 587 008c FFF7FEFF 		bl	Error_Handler
 588              	.LVL19:
 589              	.L31:
 475:Src/main.c    ****   }
 590              		.loc 1 475 5 view .LVU195
 591 0090 FFF7FEFF 		bl	Error_Handler
 592              	.LVL20:
 593              	.L32:
 479:Src/main.c    ****   }
 594              		.loc 1 479 5 view .LVU196
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 34


 595 0094 FFF7FEFF 		bl	Error_Handler
 596              	.LVL21:
 597              	.L33:
 485:Src/main.c    ****   }
 598              		.loc 1 485 5 view .LVU197
 599 0098 FFF7FEFF 		bl	Error_Handler
 600              	.LVL22:
 601              	.L34:
 493:Src/main.c    ****   }
 602              		.loc 1 493 5 view .LVU198
 603 009c FFF7FEFF 		bl	Error_Handler
 604              	.LVL23:
 605              	.L36:
 606              		.align	2
 607              	.L35:
 608 00a0 00000000 		.word	htim2
 609              		.cfi_endproc
 610              	.LFE135:
 612              		.section	.text.MX_TIM3_Init,"ax",%progbits
 613              		.align	1
 614              		.syntax unified
 615              		.thumb
 616              		.thumb_func
 618              	MX_TIM3_Init:
 619              	.LFB136:
 508:Src/main.c    **** 
 620              		.loc 1 508 1 view -0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 56
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624 0000 00B5     		push	{lr}
 625              	.LCFI9:
 626              		.cfi_def_cfa_offset 4
 627              		.cfi_offset 14, -4
 628 0002 8FB0     		sub	sp, sp, #60
 629              	.LCFI10:
 630              		.cfi_def_cfa_offset 64
 514:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 631              		.loc 1 514 3 view .LVU200
 514:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 632              		.loc 1 514 26 is_stmt 0 view .LVU201
 633 0004 0023     		movs	r3, #0
 634 0006 0A93     		str	r3, [sp, #40]
 635 0008 0B93     		str	r3, [sp, #44]
 636 000a 0C93     		str	r3, [sp, #48]
 637 000c 0D93     		str	r3, [sp, #52]
 515:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 638              		.loc 1 515 3 is_stmt 1 view .LVU202
 515:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 639              		.loc 1 515 27 is_stmt 0 view .LVU203
 640 000e 0793     		str	r3, [sp, #28]
 641 0010 0893     		str	r3, [sp, #32]
 642 0012 0993     		str	r3, [sp, #36]
 516:Src/main.c    **** 
 643              		.loc 1 516 3 is_stmt 1 view .LVU204
 516:Src/main.c    **** 
 644              		.loc 1 516 22 is_stmt 0 view .LVU205
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 35


 645 0014 0093     		str	r3, [sp]
 646 0016 0193     		str	r3, [sp, #4]
 647 0018 0293     		str	r3, [sp, #8]
 648 001a 0393     		str	r3, [sp, #12]
 649 001c 0493     		str	r3, [sp, #16]
 650 001e 0593     		str	r3, [sp, #20]
 651 0020 0693     		str	r3, [sp, #24]
 521:Src/main.c    ****   htim3.Init.Prescaler = 500;
 652              		.loc 1 521 3 is_stmt 1 view .LVU206
 521:Src/main.c    ****   htim3.Init.Prescaler = 500;
 653              		.loc 1 521 18 is_stmt 0 view .LVU207
 654 0022 2B48     		ldr	r0, .L55
 655 0024 2B4A     		ldr	r2, .L55+4
 656 0026 0260     		str	r2, [r0]
 522:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 657              		.loc 1 522 3 is_stmt 1 view .LVU208
 522:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 658              		.loc 1 522 24 is_stmt 0 view .LVU209
 659 0028 4FF4FA72 		mov	r2, #500
 660 002c 4260     		str	r2, [r0, #4]
 523:Src/main.c    ****   htim3.Init.Period = 800;
 661              		.loc 1 523 3 is_stmt 1 view .LVU210
 523:Src/main.c    ****   htim3.Init.Period = 800;
 662              		.loc 1 523 26 is_stmt 0 view .LVU211
 663 002e 8360     		str	r3, [r0, #8]
 524:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 664              		.loc 1 524 3 is_stmt 1 view .LVU212
 524:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 665              		.loc 1 524 21 is_stmt 0 view .LVU213
 666 0030 4FF44872 		mov	r2, #800
 667 0034 C260     		str	r2, [r0, #12]
 525:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 668              		.loc 1 525 3 is_stmt 1 view .LVU214
 525:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 669              		.loc 1 525 28 is_stmt 0 view .LVU215
 670 0036 0361     		str	r3, [r0, #16]
 526:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 671              		.loc 1 526 3 is_stmt 1 view .LVU216
 526:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 672              		.loc 1 526 32 is_stmt 0 view .LVU217
 673 0038 8361     		str	r3, [r0, #24]
 527:Src/main.c    ****   {
 674              		.loc 1 527 3 is_stmt 1 view .LVU218
 527:Src/main.c    ****   {
 675              		.loc 1 527 7 is_stmt 0 view .LVU219
 676 003a FFF7FEFF 		bl	HAL_TIM_Base_Init
 677              	.LVL24:
 527:Src/main.c    ****   {
 678              		.loc 1 527 6 discriminator 1 view .LVU220
 679 003e 0028     		cmp	r0, #0
 680 0040 36D1     		bne	.L47
 531:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 681              		.loc 1 531 3 is_stmt 1 view .LVU221
 531:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 682              		.loc 1 531 34 is_stmt 0 view .LVU222
 683 0042 4FF48053 		mov	r3, #4096
 684 0046 0A93     		str	r3, [sp, #40]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 36


 532:Src/main.c    ****   {
 685              		.loc 1 532 3 is_stmt 1 view .LVU223
 532:Src/main.c    ****   {
 686              		.loc 1 532 7 is_stmt 0 view .LVU224
 687 0048 0AA9     		add	r1, sp, #40
 688 004a 2148     		ldr	r0, .L55
 689 004c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 690              	.LVL25:
 532:Src/main.c    ****   {
 691              		.loc 1 532 6 discriminator 1 view .LVU225
 692 0050 80BB     		cbnz	r0, .L48
 536:Src/main.c    ****   {
 693              		.loc 1 536 3 is_stmt 1 view .LVU226
 536:Src/main.c    ****   {
 694              		.loc 1 536 7 is_stmt 0 view .LVU227
 695 0052 1F48     		ldr	r0, .L55
 696 0054 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 697              	.LVL26:
 536:Src/main.c    ****   {
 698              		.loc 1 536 6 discriminator 1 view .LVU228
 699 0058 70BB     		cbnz	r0, .L49
 540:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 700              		.loc 1 540 3 is_stmt 1 view .LVU229
 540:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 701              		.loc 1 540 37 is_stmt 0 view .LVU230
 702 005a 0023     		movs	r3, #0
 703 005c 0793     		str	r3, [sp, #28]
 541:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 704              		.loc 1 541 3 is_stmt 1 view .LVU231
 541:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 705              		.loc 1 541 33 is_stmt 0 view .LVU232
 706 005e 0993     		str	r3, [sp, #36]
 542:Src/main.c    ****   {
 707              		.loc 1 542 3 is_stmt 1 view .LVU233
 542:Src/main.c    ****   {
 708              		.loc 1 542 7 is_stmt 0 view .LVU234
 709 0060 07A9     		add	r1, sp, #28
 710 0062 1B48     		ldr	r0, .L55
 711 0064 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 712              	.LVL27:
 542:Src/main.c    ****   {
 713              		.loc 1 542 6 discriminator 1 view .LVU235
 714 0068 40BB     		cbnz	r0, .L50
 546:Src/main.c    ****   sConfigOC.Pulse = 0;
 715              		.loc 1 546 3 is_stmt 1 view .LVU236
 546:Src/main.c    ****   sConfigOC.Pulse = 0;
 716              		.loc 1 546 20 is_stmt 0 view .LVU237
 717 006a 6023     		movs	r3, #96
 718 006c 0093     		str	r3, [sp]
 547:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 719              		.loc 1 547 3 is_stmt 1 view .LVU238
 547:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 720              		.loc 1 547 19 is_stmt 0 view .LVU239
 721 006e 0022     		movs	r2, #0
 722 0070 0192     		str	r2, [sp, #4]
 548:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 723              		.loc 1 548 3 is_stmt 1 view .LVU240
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 37


 548:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 724              		.loc 1 548 24 is_stmt 0 view .LVU241
 725 0072 0292     		str	r2, [sp, #8]
 549:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 726              		.loc 1 549 3 is_stmt 1 view .LVU242
 549:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 727              		.loc 1 549 24 is_stmt 0 view .LVU243
 728 0074 0492     		str	r2, [sp, #16]
 550:Src/main.c    ****   {
 729              		.loc 1 550 3 is_stmt 1 view .LVU244
 550:Src/main.c    ****   {
 730              		.loc 1 550 7 is_stmt 0 view .LVU245
 731 0076 6946     		mov	r1, sp
 732 0078 1548     		ldr	r0, .L55
 733 007a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 734              	.LVL28:
 550:Src/main.c    ****   {
 735              		.loc 1 550 6 discriminator 1 view .LVU246
 736 007e F8B9     		cbnz	r0, .L51
 554:Src/main.c    ****   {
 737              		.loc 1 554 3 is_stmt 1 view .LVU247
 554:Src/main.c    ****   {
 738              		.loc 1 554 7 is_stmt 0 view .LVU248
 739 0080 0422     		movs	r2, #4
 740 0082 6946     		mov	r1, sp
 741 0084 1248     		ldr	r0, .L55
 742 0086 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 743              	.LVL29:
 554:Src/main.c    ****   {
 744              		.loc 1 554 6 discriminator 1 view .LVU249
 745 008a D8B9     		cbnz	r0, .L52
 558:Src/main.c    ****   {
 746              		.loc 1 558 3 is_stmt 1 view .LVU250
 558:Src/main.c    ****   {
 747              		.loc 1 558 7 is_stmt 0 view .LVU251
 748 008c 0822     		movs	r2, #8
 749 008e 6946     		mov	r1, sp
 750 0090 0F48     		ldr	r0, .L55
 751 0092 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 752              	.LVL30:
 558:Src/main.c    ****   {
 753              		.loc 1 558 6 discriminator 1 view .LVU252
 754 0096 B8B9     		cbnz	r0, .L53
 562:Src/main.c    ****   {
 755              		.loc 1 562 3 is_stmt 1 view .LVU253
 562:Src/main.c    ****   {
 756              		.loc 1 562 7 is_stmt 0 view .LVU254
 757 0098 0C22     		movs	r2, #12
 758 009a 6946     		mov	r1, sp
 759 009c 0C48     		ldr	r0, .L55
 760 009e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 761              	.LVL31:
 562:Src/main.c    ****   {
 762              		.loc 1 562 6 discriminator 1 view .LVU255
 763 00a2 98B9     		cbnz	r0, .L54
 569:Src/main.c    **** 
 764              		.loc 1 569 3 is_stmt 1 view .LVU256
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 38


 765 00a4 0A48     		ldr	r0, .L55
 766 00a6 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 767              	.LVL32:
 571:Src/main.c    **** 
 768              		.loc 1 571 1 is_stmt 0 view .LVU257
 769 00aa 0FB0     		add	sp, sp, #60
 770              	.LCFI11:
 771              		.cfi_remember_state
 772              		.cfi_def_cfa_offset 4
 773              		@ sp needed
 774 00ac 5DF804FB 		ldr	pc, [sp], #4
 775              	.L47:
 776              	.LCFI12:
 777              		.cfi_restore_state
 529:Src/main.c    ****   }
 778              		.loc 1 529 5 is_stmt 1 view .LVU258
 779 00b0 FFF7FEFF 		bl	Error_Handler
 780              	.LVL33:
 781              	.L48:
 534:Src/main.c    ****   }
 782              		.loc 1 534 5 view .LVU259
 783 00b4 FFF7FEFF 		bl	Error_Handler
 784              	.LVL34:
 785              	.L49:
 538:Src/main.c    ****   }
 786              		.loc 1 538 5 view .LVU260
 787 00b8 FFF7FEFF 		bl	Error_Handler
 788              	.LVL35:
 789              	.L50:
 544:Src/main.c    ****   }
 790              		.loc 1 544 5 view .LVU261
 791 00bc FFF7FEFF 		bl	Error_Handler
 792              	.LVL36:
 793              	.L51:
 552:Src/main.c    ****   }
 794              		.loc 1 552 5 view .LVU262
 795 00c0 FFF7FEFF 		bl	Error_Handler
 796              	.LVL37:
 797              	.L52:
 556:Src/main.c    ****   }
 798              		.loc 1 556 5 view .LVU263
 799 00c4 FFF7FEFF 		bl	Error_Handler
 800              	.LVL38:
 801              	.L53:
 560:Src/main.c    ****   }
 802              		.loc 1 560 5 view .LVU264
 803 00c8 FFF7FEFF 		bl	Error_Handler
 804              	.LVL39:
 805              	.L54:
 564:Src/main.c    ****   }
 806              		.loc 1 564 5 view .LVU265
 807 00cc FFF7FEFF 		bl	Error_Handler
 808              	.LVL40:
 809              	.L56:
 810              		.align	2
 811              	.L55:
 812 00d0 00000000 		.word	htim3
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 39


 813 00d4 00040040 		.word	1073742848
 814              		.cfi_endproc
 815              	.LFE136:
 817              		.section	.text.MX_TIM4_Init,"ax",%progbits
 818              		.align	1
 819              		.syntax unified
 820              		.thumb
 821              		.thumb_func
 823              	MX_TIM4_Init:
 824              	.LFB137:
 579:Src/main.c    **** 
 825              		.loc 1 579 1 view -0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 40
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 829 0000 00B5     		push	{lr}
 830              	.LCFI13:
 831              		.cfi_def_cfa_offset 4
 832              		.cfi_offset 14, -4
 833 0002 8BB0     		sub	sp, sp, #44
 834              	.LCFI14:
 835              		.cfi_def_cfa_offset 48
 585:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 836              		.loc 1 585 3 view .LVU267
 585:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 837              		.loc 1 585 27 is_stmt 0 view .LVU268
 838 0004 0023     		movs	r3, #0
 839 0006 0793     		str	r3, [sp, #28]
 840 0008 0893     		str	r3, [sp, #32]
 841 000a 0993     		str	r3, [sp, #36]
 586:Src/main.c    **** 
 842              		.loc 1 586 3 is_stmt 1 view .LVU269
 586:Src/main.c    **** 
 843              		.loc 1 586 22 is_stmt 0 view .LVU270
 844 000c 0093     		str	r3, [sp]
 845 000e 0193     		str	r3, [sp, #4]
 846 0010 0293     		str	r3, [sp, #8]
 847 0012 0393     		str	r3, [sp, #12]
 848 0014 0493     		str	r3, [sp, #16]
 849 0016 0593     		str	r3, [sp, #20]
 850 0018 0693     		str	r3, [sp, #24]
 591:Src/main.c    ****   htim4.Init.Prescaler = 0;
 851              		.loc 1 591 3 is_stmt 1 view .LVU271
 591:Src/main.c    ****   htim4.Init.Prescaler = 0;
 852              		.loc 1 591 18 is_stmt 0 view .LVU272
 853 001a 1648     		ldr	r0, .L65
 854 001c 164A     		ldr	r2, .L65+4
 855 001e 0260     		str	r2, [r0]
 592:Src/main.c    ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 856              		.loc 1 592 3 is_stmt 1 view .LVU273
 592:Src/main.c    ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 857              		.loc 1 592 24 is_stmt 0 view .LVU274
 858 0020 4360     		str	r3, [r0, #4]
 593:Src/main.c    ****   htim4.Init.Period = 65535;
 859              		.loc 1 593 3 is_stmt 1 view .LVU275
 593:Src/main.c    ****   htim4.Init.Period = 65535;
 860              		.loc 1 593 26 is_stmt 0 view .LVU276
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 40


 861 0022 8360     		str	r3, [r0, #8]
 594:Src/main.c    ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 862              		.loc 1 594 3 is_stmt 1 view .LVU277
 594:Src/main.c    ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 863              		.loc 1 594 21 is_stmt 0 view .LVU278
 864 0024 4FF6FF72 		movw	r2, #65535
 865 0028 C260     		str	r2, [r0, #12]
 595:Src/main.c    ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 866              		.loc 1 595 3 is_stmt 1 view .LVU279
 595:Src/main.c    ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 867              		.loc 1 595 28 is_stmt 0 view .LVU280
 868 002a 0361     		str	r3, [r0, #16]
 596:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 869              		.loc 1 596 3 is_stmt 1 view .LVU281
 596:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 870              		.loc 1 596 32 is_stmt 0 view .LVU282
 871 002c 8361     		str	r3, [r0, #24]
 597:Src/main.c    ****   {
 872              		.loc 1 597 3 is_stmt 1 view .LVU283
 597:Src/main.c    ****   {
 873              		.loc 1 597 7 is_stmt 0 view .LVU284
 874 002e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 875              	.LVL41:
 597:Src/main.c    ****   {
 876              		.loc 1 597 6 discriminator 1 view .LVU285
 877 0032 C0B9     		cbnz	r0, .L62
 601:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 878              		.loc 1 601 3 is_stmt 1 view .LVU286
 601:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 879              		.loc 1 601 37 is_stmt 0 view .LVU287
 880 0034 0023     		movs	r3, #0
 881 0036 0793     		str	r3, [sp, #28]
 602:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 882              		.loc 1 602 3 is_stmt 1 view .LVU288
 602:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 883              		.loc 1 602 33 is_stmt 0 view .LVU289
 884 0038 0993     		str	r3, [sp, #36]
 603:Src/main.c    ****   {
 885              		.loc 1 603 3 is_stmt 1 view .LVU290
 603:Src/main.c    ****   {
 886              		.loc 1 603 7 is_stmt 0 view .LVU291
 887 003a 07A9     		add	r1, sp, #28
 888 003c 0D48     		ldr	r0, .L65
 889 003e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 890              	.LVL42:
 603:Src/main.c    ****   {
 891              		.loc 1 603 6 discriminator 1 view .LVU292
 892 0042 90B9     		cbnz	r0, .L63
 607:Src/main.c    ****   sConfigOC.Pulse = 0;
 893              		.loc 1 607 3 is_stmt 1 view .LVU293
 607:Src/main.c    ****   sConfigOC.Pulse = 0;
 894              		.loc 1 607 20 is_stmt 0 view .LVU294
 895 0044 6023     		movs	r3, #96
 896 0046 0093     		str	r3, [sp]
 608:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 897              		.loc 1 608 3 is_stmt 1 view .LVU295
 608:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 41


 898              		.loc 1 608 19 is_stmt 0 view .LVU296
 899 0048 0022     		movs	r2, #0
 900 004a 0192     		str	r2, [sp, #4]
 609:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 901              		.loc 1 609 3 is_stmt 1 view .LVU297
 609:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 902              		.loc 1 609 24 is_stmt 0 view .LVU298
 903 004c 0292     		str	r2, [sp, #8]
 610:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 904              		.loc 1 610 3 is_stmt 1 view .LVU299
 610:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 905              		.loc 1 610 24 is_stmt 0 view .LVU300
 906 004e 0492     		str	r2, [sp, #16]
 611:Src/main.c    ****   {
 907              		.loc 1 611 3 is_stmt 1 view .LVU301
 611:Src/main.c    ****   {
 908              		.loc 1 611 7 is_stmt 0 view .LVU302
 909 0050 6946     		mov	r1, sp
 910 0052 0848     		ldr	r0, .L65
 911 0054 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 912              	.LVL43:
 611:Src/main.c    ****   {
 913              		.loc 1 611 6 discriminator 1 view .LVU303
 914 0058 48B9     		cbnz	r0, .L64
 618:Src/main.c    **** 
 915              		.loc 1 618 3 is_stmt 1 view .LVU304
 916 005a 0648     		ldr	r0, .L65
 917 005c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 918              	.LVL44:
 620:Src/main.c    **** 
 919              		.loc 1 620 1 is_stmt 0 view .LVU305
 920 0060 0BB0     		add	sp, sp, #44
 921              	.LCFI15:
 922              		.cfi_remember_state
 923              		.cfi_def_cfa_offset 4
 924              		@ sp needed
 925 0062 5DF804FB 		ldr	pc, [sp], #4
 926              	.L62:
 927              	.LCFI16:
 928              		.cfi_restore_state
 599:Src/main.c    ****   }
 929              		.loc 1 599 5 is_stmt 1 view .LVU306
 930 0066 FFF7FEFF 		bl	Error_Handler
 931              	.LVL45:
 932              	.L63:
 605:Src/main.c    ****   }
 933              		.loc 1 605 5 view .LVU307
 934 006a FFF7FEFF 		bl	Error_Handler
 935              	.LVL46:
 936              	.L64:
 613:Src/main.c    ****   }
 937              		.loc 1 613 5 view .LVU308
 938 006e FFF7FEFF 		bl	Error_Handler
 939              	.LVL47:
 940              	.L66:
 941 0072 00BF     		.align	2
 942              	.L65:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 42


 943 0074 00000000 		.word	htim4
 944 0078 00080040 		.word	1073743872
 945              		.cfi_endproc
 946              	.LFE137:
 948              		.section	.text.MX_TIM8_Init,"ax",%progbits
 949              		.align	1
 950              		.syntax unified
 951              		.thumb
 952              		.thumb_func
 954              	MX_TIM8_Init:
 955              	.LFB139:
 666:Src/main.c    **** 
 956              		.loc 1 666 1 view -0
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 104
 959              		@ frame_needed = 0, uses_anonymous_args = 0
 960 0000 10B5     		push	{r4, lr}
 961              	.LCFI17:
 962              		.cfi_def_cfa_offset 8
 963              		.cfi_offset 4, -8
 964              		.cfi_offset 14, -4
 965 0002 9AB0     		sub	sp, sp, #104
 966              	.LCFI18:
 967              		.cfi_def_cfa_offset 112
 672:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 968              		.loc 1 672 3 view .LVU310
 672:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 969              		.loc 1 672 26 is_stmt 0 view .LVU311
 970 0004 0024     		movs	r4, #0
 971 0006 1694     		str	r4, [sp, #88]
 972 0008 1794     		str	r4, [sp, #92]
 973 000a 1894     		str	r4, [sp, #96]
 974 000c 1994     		str	r4, [sp, #100]
 673:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 975              		.loc 1 673 3 is_stmt 1 view .LVU312
 673:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 976              		.loc 1 673 27 is_stmt 0 view .LVU313
 977 000e 1394     		str	r4, [sp, #76]
 978 0010 1494     		str	r4, [sp, #80]
 979 0012 1594     		str	r4, [sp, #84]
 674:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 980              		.loc 1 674 3 is_stmt 1 view .LVU314
 674:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 981              		.loc 1 674 22 is_stmt 0 view .LVU315
 982 0014 0C94     		str	r4, [sp, #48]
 983 0016 0D94     		str	r4, [sp, #52]
 984 0018 0E94     		str	r4, [sp, #56]
 985 001a 0F94     		str	r4, [sp, #60]
 986 001c 1094     		str	r4, [sp, #64]
 987 001e 1194     		str	r4, [sp, #68]
 988 0020 1294     		str	r4, [sp, #72]
 675:Src/main.c    **** 
 989              		.loc 1 675 3 is_stmt 1 view .LVU316
 675:Src/main.c    **** 
 990              		.loc 1 675 34 is_stmt 0 view .LVU317
 991 0022 2C22     		movs	r2, #44
 992 0024 2146     		mov	r1, r4
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 43


 993 0026 01A8     		add	r0, sp, #4
 994 0028 FFF7FEFF 		bl	memset
 995              	.LVL48:
 680:Src/main.c    ****   htim8.Init.Prescaler = 0;
 996              		.loc 1 680 3 is_stmt 1 view .LVU318
 680:Src/main.c    ****   htim8.Init.Prescaler = 0;
 997              		.loc 1 680 18 is_stmt 0 view .LVU319
 998 002c 2D48     		ldr	r0, .L81
 999 002e 2E4B     		ldr	r3, .L81+4
 1000 0030 0360     		str	r3, [r0]
 681:Src/main.c    ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 1001              		.loc 1 681 3 is_stmt 1 view .LVU320
 681:Src/main.c    ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 1002              		.loc 1 681 24 is_stmt 0 view .LVU321
 1003 0032 4460     		str	r4, [r0, #4]
 682:Src/main.c    ****   htim8.Init.Period = 65535;
 1004              		.loc 1 682 3 is_stmt 1 view .LVU322
 682:Src/main.c    ****   htim8.Init.Period = 65535;
 1005              		.loc 1 682 26 is_stmt 0 view .LVU323
 1006 0034 8460     		str	r4, [r0, #8]
 683:Src/main.c    ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1007              		.loc 1 683 3 is_stmt 1 view .LVU324
 683:Src/main.c    ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1008              		.loc 1 683 21 is_stmt 0 view .LVU325
 1009 0036 4FF6FF73 		movw	r3, #65535
 1010 003a C360     		str	r3, [r0, #12]
 684:Src/main.c    ****   htim8.Init.RepetitionCounter = 0;
 1011              		.loc 1 684 3 is_stmt 1 view .LVU326
 684:Src/main.c    ****   htim8.Init.RepetitionCounter = 0;
 1012              		.loc 1 684 28 is_stmt 0 view .LVU327
 1013 003c 0461     		str	r4, [r0, #16]
 685:Src/main.c    ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1014              		.loc 1 685 3 is_stmt 1 view .LVU328
 685:Src/main.c    ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1015              		.loc 1 685 32 is_stmt 0 view .LVU329
 1016 003e 4461     		str	r4, [r0, #20]
 686:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 1017              		.loc 1 686 3 is_stmt 1 view .LVU330
 686:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 1018              		.loc 1 686 32 is_stmt 0 view .LVU331
 1019 0040 8461     		str	r4, [r0, #24]
 687:Src/main.c    ****   {
 1020              		.loc 1 687 3 is_stmt 1 view .LVU332
 687:Src/main.c    ****   {
 1021              		.loc 1 687 7 is_stmt 0 view .LVU333
 1022 0042 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1023              	.LVL49:
 687:Src/main.c    ****   {
 1024              		.loc 1 687 6 discriminator 1 view .LVU334
 1025 0046 0028     		cmp	r0, #0
 1026 0048 3FD1     		bne	.L75
 691:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 1027              		.loc 1 691 3 is_stmt 1 view .LVU335
 691:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 1028              		.loc 1 691 34 is_stmt 0 view .LVU336
 1029 004a 4FF48053 		mov	r3, #4096
 1030 004e 1693     		str	r3, [sp, #88]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 44


 692:Src/main.c    ****   {
 1031              		.loc 1 692 3 is_stmt 1 view .LVU337
 692:Src/main.c    ****   {
 1032              		.loc 1 692 7 is_stmt 0 view .LVU338
 1033 0050 16A9     		add	r1, sp, #88
 1034 0052 2448     		ldr	r0, .L81
 1035 0054 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1036              	.LVL50:
 692:Src/main.c    ****   {
 1037              		.loc 1 692 6 discriminator 1 view .LVU339
 1038 0058 0028     		cmp	r0, #0
 1039 005a 38D1     		bne	.L76
 696:Src/main.c    ****   {
 1040              		.loc 1 696 3 is_stmt 1 view .LVU340
 696:Src/main.c    ****   {
 1041              		.loc 1 696 7 is_stmt 0 view .LVU341
 1042 005c 2148     		ldr	r0, .L81
 1043 005e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1044              	.LVL51:
 696:Src/main.c    ****   {
 1045              		.loc 1 696 6 discriminator 1 view .LVU342
 1046 0062 0028     		cmp	r0, #0
 1047 0064 35D1     		bne	.L77
 700:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 1048              		.loc 1 700 3 is_stmt 1 view .LVU343
 700:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 1049              		.loc 1 700 37 is_stmt 0 view .LVU344
 1050 0066 0023     		movs	r3, #0
 1051 0068 1393     		str	r3, [sp, #76]
 701:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1052              		.loc 1 701 3 is_stmt 1 view .LVU345
 701:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1053              		.loc 1 701 38 is_stmt 0 view .LVU346
 1054 006a 1493     		str	r3, [sp, #80]
 702:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 1055              		.loc 1 702 3 is_stmt 1 view .LVU347
 702:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 1056              		.loc 1 702 33 is_stmt 0 view .LVU348
 1057 006c 1593     		str	r3, [sp, #84]
 703:Src/main.c    ****   {
 1058              		.loc 1 703 3 is_stmt 1 view .LVU349
 703:Src/main.c    ****   {
 1059              		.loc 1 703 7 is_stmt 0 view .LVU350
 1060 006e 13A9     		add	r1, sp, #76
 1061 0070 1C48     		ldr	r0, .L81
 1062 0072 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1063              	.LVL52:
 703:Src/main.c    ****   {
 1064              		.loc 1 703 6 discriminator 1 view .LVU351
 1065 0076 0028     		cmp	r0, #0
 1066 0078 2DD1     		bne	.L78
 707:Src/main.c    ****   sConfigOC.Pulse = 0;
 1067              		.loc 1 707 3 is_stmt 1 view .LVU352
 707:Src/main.c    ****   sConfigOC.Pulse = 0;
 1068              		.loc 1 707 20 is_stmt 0 view .LVU353
 1069 007a 6023     		movs	r3, #96
 1070 007c 0C93     		str	r3, [sp, #48]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 45


 708:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1071              		.loc 1 708 3 is_stmt 1 view .LVU354
 708:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1072              		.loc 1 708 19 is_stmt 0 view .LVU355
 1073 007e 0022     		movs	r2, #0
 1074 0080 0D92     		str	r2, [sp, #52]
 709:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1075              		.loc 1 709 3 is_stmt 1 view .LVU356
 709:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1076              		.loc 1 709 24 is_stmt 0 view .LVU357
 1077 0082 0E92     		str	r2, [sp, #56]
 710:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1078              		.loc 1 710 3 is_stmt 1 view .LVU358
 710:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1079              		.loc 1 710 25 is_stmt 0 view .LVU359
 1080 0084 0F92     		str	r2, [sp, #60]
 711:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1081              		.loc 1 711 3 is_stmt 1 view .LVU360
 711:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1082              		.loc 1 711 24 is_stmt 0 view .LVU361
 1083 0086 1092     		str	r2, [sp, #64]
 712:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1084              		.loc 1 712 3 is_stmt 1 view .LVU362
 712:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1085              		.loc 1 712 25 is_stmt 0 view .LVU363
 1086 0088 1192     		str	r2, [sp, #68]
 713:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1087              		.loc 1 713 3 is_stmt 1 view .LVU364
 713:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1088              		.loc 1 713 26 is_stmt 0 view .LVU365
 1089 008a 1292     		str	r2, [sp, #72]
 714:Src/main.c    ****   {
 1090              		.loc 1 714 3 is_stmt 1 view .LVU366
 714:Src/main.c    ****   {
 1091              		.loc 1 714 7 is_stmt 0 view .LVU367
 1092 008c 0CA9     		add	r1, sp, #48
 1093 008e 1548     		ldr	r0, .L81
 1094 0090 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1095              	.LVL53:
 714:Src/main.c    ****   {
 1096              		.loc 1 714 6 discriminator 1 view .LVU368
 1097 0094 08BB     		cbnz	r0, .L79
 718:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1098              		.loc 1 718 3 is_stmt 1 view .LVU369
 718:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1099              		.loc 1 718 40 is_stmt 0 view .LVU370
 1100 0096 0023     		movs	r3, #0
 1101 0098 0193     		str	r3, [sp, #4]
 719:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1102              		.loc 1 719 3 is_stmt 1 view .LVU371
 719:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1103              		.loc 1 719 41 is_stmt 0 view .LVU372
 1104 009a 0293     		str	r3, [sp, #8]
 720:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 1105              		.loc 1 720 3 is_stmt 1 view .LVU373
 720:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 1106              		.loc 1 720 34 is_stmt 0 view .LVU374
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 46


 1107 009c 0393     		str	r3, [sp, #12]
 721:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1108              		.loc 1 721 3 is_stmt 1 view .LVU375
 721:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1109              		.loc 1 721 33 is_stmt 0 view .LVU376
 1110 009e 0493     		str	r3, [sp, #16]
 722:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1111              		.loc 1 722 3 is_stmt 1 view .LVU377
 722:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1112              		.loc 1 722 35 is_stmt 0 view .LVU378
 1113 00a0 0593     		str	r3, [sp, #20]
 723:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1114              		.loc 1 723 3 is_stmt 1 view .LVU379
 723:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1115              		.loc 1 723 38 is_stmt 0 view .LVU380
 1116 00a2 4FF40052 		mov	r2, #8192
 1117 00a6 0692     		str	r2, [sp, #24]
 724:Src/main.c    ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 1118              		.loc 1 724 3 is_stmt 1 view .LVU381
 724:Src/main.c    ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 1119              		.loc 1 724 36 is_stmt 0 view .LVU382
 1120 00a8 0793     		str	r3, [sp, #28]
 725:Src/main.c    ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 1121              		.loc 1 725 3 is_stmt 1 view .LVU383
 725:Src/main.c    ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 1122              		.loc 1 725 36 is_stmt 0 view .LVU384
 1123 00aa 0893     		str	r3, [sp, #32]
 726:Src/main.c    ****   sBreakDeadTimeConfig.Break2Filter = 0;
 1124              		.loc 1 726 3 is_stmt 1 view .LVU385
 726:Src/main.c    ****   sBreakDeadTimeConfig.Break2Filter = 0;
 1125              		.loc 1 726 39 is_stmt 0 view .LVU386
 1126 00ac 4FF00072 		mov	r2, #33554432
 1127 00b0 0992     		str	r2, [sp, #36]
 727:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1128              		.loc 1 727 3 is_stmt 1 view .LVU387
 727:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1129              		.loc 1 727 37 is_stmt 0 view .LVU388
 1130 00b2 0A93     		str	r3, [sp, #40]
 728:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 1131              		.loc 1 728 3 is_stmt 1 view .LVU389
 728:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 1132              		.loc 1 728 40 is_stmt 0 view .LVU390
 1133 00b4 0B93     		str	r3, [sp, #44]
 729:Src/main.c    ****   {
 1134              		.loc 1 729 3 is_stmt 1 view .LVU391
 729:Src/main.c    ****   {
 1135              		.loc 1 729 7 is_stmt 0 view .LVU392
 1136 00b6 01A9     		add	r1, sp, #4
 1137 00b8 0A48     		ldr	r0, .L81
 1138 00ba FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1139              	.LVL54:
 729:Src/main.c    ****   {
 1140              		.loc 1 729 6 discriminator 1 view .LVU393
 1141 00be 70B9     		cbnz	r0, .L80
 736:Src/main.c    **** 
 1142              		.loc 1 736 3 is_stmt 1 view .LVU394
 1143 00c0 0848     		ldr	r0, .L81
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 47


 1144 00c2 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1145              	.LVL55:
 738:Src/main.c    **** 
 1146              		.loc 1 738 1 is_stmt 0 view .LVU395
 1147 00c6 1AB0     		add	sp, sp, #104
 1148              	.LCFI19:
 1149              		.cfi_remember_state
 1150              		.cfi_def_cfa_offset 8
 1151              		@ sp needed
 1152 00c8 10BD     		pop	{r4, pc}
 1153              	.L75:
 1154              	.LCFI20:
 1155              		.cfi_restore_state
 689:Src/main.c    ****   }
 1156              		.loc 1 689 5 is_stmt 1 view .LVU396
 1157 00ca FFF7FEFF 		bl	Error_Handler
 1158              	.LVL56:
 1159              	.L76:
 694:Src/main.c    ****   }
 1160              		.loc 1 694 5 view .LVU397
 1161 00ce FFF7FEFF 		bl	Error_Handler
 1162              	.LVL57:
 1163              	.L77:
 698:Src/main.c    ****   }
 1164              		.loc 1 698 5 view .LVU398
 1165 00d2 FFF7FEFF 		bl	Error_Handler
 1166              	.LVL58:
 1167              	.L78:
 705:Src/main.c    ****   }
 1168              		.loc 1 705 5 view .LVU399
 1169 00d6 FFF7FEFF 		bl	Error_Handler
 1170              	.LVL59:
 1171              	.L79:
 716:Src/main.c    ****   }
 1172              		.loc 1 716 5 view .LVU400
 1173 00da FFF7FEFF 		bl	Error_Handler
 1174              	.LVL60:
 1175              	.L80:
 731:Src/main.c    ****   }
 1176              		.loc 1 731 5 view .LVU401
 1177 00de FFF7FEFF 		bl	Error_Handler
 1178              	.LVL61:
 1179              	.L82:
 1180 00e2 00BF     		.align	2
 1181              	.L81:
 1182 00e4 00000000 		.word	htim8
 1183 00e8 00340140 		.word	1073820672
 1184              		.cfi_endproc
 1185              	.LFE139:
 1187              		.section	.text.MX_TIM15_Init,"ax",%progbits
 1188              		.align	1
 1189              		.syntax unified
 1190              		.thumb
 1191              		.thumb_func
 1193              	MX_TIM15_Init:
 1194              	.LFB140:
 746:Src/main.c    **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 48


 1195              		.loc 1 746 1 view -0
 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 88
 1198              		@ frame_needed = 0, uses_anonymous_args = 0
 1199 0000 10B5     		push	{r4, lr}
 1200              	.LCFI21:
 1201              		.cfi_def_cfa_offset 8
 1202              		.cfi_offset 4, -8
 1203              		.cfi_offset 14, -4
 1204 0002 96B0     		sub	sp, sp, #88
 1205              	.LCFI22:
 1206              		.cfi_def_cfa_offset 96
 752:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1207              		.loc 1 752 3 view .LVU403
 752:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1208              		.loc 1 752 27 is_stmt 0 view .LVU404
 1209 0004 0024     		movs	r4, #0
 1210 0006 1394     		str	r4, [sp, #76]
 1211 0008 1494     		str	r4, [sp, #80]
 1212 000a 1594     		str	r4, [sp, #84]
 753:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1213              		.loc 1 753 3 is_stmt 1 view .LVU405
 753:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1214              		.loc 1 753 22 is_stmt 0 view .LVU406
 1215 000c 0C94     		str	r4, [sp, #48]
 1216 000e 0D94     		str	r4, [sp, #52]
 1217 0010 0E94     		str	r4, [sp, #56]
 1218 0012 0F94     		str	r4, [sp, #60]
 1219 0014 1094     		str	r4, [sp, #64]
 1220 0016 1194     		str	r4, [sp, #68]
 1221 0018 1294     		str	r4, [sp, #72]
 754:Src/main.c    **** 
 1222              		.loc 1 754 3 is_stmt 1 view .LVU407
 754:Src/main.c    **** 
 1223              		.loc 1 754 34 is_stmt 0 view .LVU408
 1224 001a 2C22     		movs	r2, #44
 1225 001c 2146     		mov	r1, r4
 1226 001e 01A8     		add	r0, sp, #4
 1227 0020 FFF7FEFF 		bl	memset
 1228              	.LVL62:
 759:Src/main.c    ****   htim15.Init.Prescaler = 0;
 1229              		.loc 1 759 3 is_stmt 1 view .LVU409
 759:Src/main.c    ****   htim15.Init.Prescaler = 0;
 1230              		.loc 1 759 19 is_stmt 0 view .LVU410
 1231 0024 2048     		ldr	r0, .L93
 1232 0026 214B     		ldr	r3, .L93+4
 1233 0028 0360     		str	r3, [r0]
 760:Src/main.c    ****   htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 1234              		.loc 1 760 3 is_stmt 1 view .LVU411
 760:Src/main.c    ****   htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 1235              		.loc 1 760 25 is_stmt 0 view .LVU412
 1236 002a 4460     		str	r4, [r0, #4]
 761:Src/main.c    ****   htim15.Init.Period = 65535;
 1237              		.loc 1 761 3 is_stmt 1 view .LVU413
 761:Src/main.c    ****   htim15.Init.Period = 65535;
 1238              		.loc 1 761 27 is_stmt 0 view .LVU414
 1239 002c 8460     		str	r4, [r0, #8]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 49


 762:Src/main.c    ****   htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1240              		.loc 1 762 3 is_stmt 1 view .LVU415
 762:Src/main.c    ****   htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1241              		.loc 1 762 22 is_stmt 0 view .LVU416
 1242 002e 4FF6FF73 		movw	r3, #65535
 1243 0032 C360     		str	r3, [r0, #12]
 763:Src/main.c    ****   htim15.Init.RepetitionCounter = 0;
 1244              		.loc 1 763 3 is_stmt 1 view .LVU417
 763:Src/main.c    ****   htim15.Init.RepetitionCounter = 0;
 1245              		.loc 1 763 29 is_stmt 0 view .LVU418
 1246 0034 0461     		str	r4, [r0, #16]
 764:Src/main.c    ****   htim15.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1247              		.loc 1 764 3 is_stmt 1 view .LVU419
 764:Src/main.c    ****   htim15.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1248              		.loc 1 764 33 is_stmt 0 view .LVU420
 1249 0036 4461     		str	r4, [r0, #20]
 765:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim15) != HAL_OK)
 1250              		.loc 1 765 3 is_stmt 1 view .LVU421
 765:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim15) != HAL_OK)
 1251              		.loc 1 765 33 is_stmt 0 view .LVU422
 1252 0038 8461     		str	r4, [r0, #24]
 766:Src/main.c    ****   {
 1253              		.loc 1 766 3 is_stmt 1 view .LVU423
 766:Src/main.c    ****   {
 1254              		.loc 1 766 7 is_stmt 0 view .LVU424
 1255 003a FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1256              	.LVL63:
 766:Src/main.c    ****   {
 1257              		.loc 1 766 6 discriminator 1 view .LVU425
 1258 003e 0028     		cmp	r0, #0
 1259 0040 2AD1     		bne	.L89
 770:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1260              		.loc 1 770 3 is_stmt 1 view .LVU426
 770:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1261              		.loc 1 770 37 is_stmt 0 view .LVU427
 1262 0042 0023     		movs	r3, #0
 1263 0044 1393     		str	r3, [sp, #76]
 771:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim15, &sMasterConfig) != HAL_OK)
 1264              		.loc 1 771 3 is_stmt 1 view .LVU428
 771:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim15, &sMasterConfig) != HAL_OK)
 1265              		.loc 1 771 33 is_stmt 0 view .LVU429
 1266 0046 1593     		str	r3, [sp, #84]
 772:Src/main.c    ****   {
 1267              		.loc 1 772 3 is_stmt 1 view .LVU430
 772:Src/main.c    ****   {
 1268              		.loc 1 772 7 is_stmt 0 view .LVU431
 1269 0048 13A9     		add	r1, sp, #76
 1270 004a 1748     		ldr	r0, .L93
 1271 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1272              	.LVL64:
 772:Src/main.c    ****   {
 1273              		.loc 1 772 6 discriminator 1 view .LVU432
 1274 0050 20BB     		cbnz	r0, .L90
 776:Src/main.c    ****   sConfigOC.Pulse = 0;
 1275              		.loc 1 776 3 is_stmt 1 view .LVU433
 776:Src/main.c    ****   sConfigOC.Pulse = 0;
 1276              		.loc 1 776 20 is_stmt 0 view .LVU434
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 50


 1277 0052 6023     		movs	r3, #96
 1278 0054 0C93     		str	r3, [sp, #48]
 777:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1279              		.loc 1 777 3 is_stmt 1 view .LVU435
 777:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1280              		.loc 1 777 19 is_stmt 0 view .LVU436
 1281 0056 0022     		movs	r2, #0
 1282 0058 0D92     		str	r2, [sp, #52]
 778:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1283              		.loc 1 778 3 is_stmt 1 view .LVU437
 778:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1284              		.loc 1 778 24 is_stmt 0 view .LVU438
 1285 005a 0E92     		str	r2, [sp, #56]
 779:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1286              		.loc 1 779 3 is_stmt 1 view .LVU439
 779:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1287              		.loc 1 779 25 is_stmt 0 view .LVU440
 1288 005c 0F92     		str	r2, [sp, #60]
 780:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1289              		.loc 1 780 3 is_stmt 1 view .LVU441
 780:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1290              		.loc 1 780 24 is_stmt 0 view .LVU442
 1291 005e 1092     		str	r2, [sp, #64]
 781:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1292              		.loc 1 781 3 is_stmt 1 view .LVU443
 781:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1293              		.loc 1 781 25 is_stmt 0 view .LVU444
 1294 0060 1192     		str	r2, [sp, #68]
 782:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim15, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1295              		.loc 1 782 3 is_stmt 1 view .LVU445
 782:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim15, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1296              		.loc 1 782 26 is_stmt 0 view .LVU446
 1297 0062 1292     		str	r2, [sp, #72]
 783:Src/main.c    ****   {
 1298              		.loc 1 783 3 is_stmt 1 view .LVU447
 783:Src/main.c    ****   {
 1299              		.loc 1 783 7 is_stmt 0 view .LVU448
 1300 0064 0CA9     		add	r1, sp, #48
 1301 0066 1048     		ldr	r0, .L93
 1302 0068 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1303              	.LVL65:
 783:Src/main.c    ****   {
 1304              		.loc 1 783 6 discriminator 1 view .LVU449
 1305 006c C0B9     		cbnz	r0, .L91
 787:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1306              		.loc 1 787 3 is_stmt 1 view .LVU450
 787:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1307              		.loc 1 787 40 is_stmt 0 view .LVU451
 1308 006e 0023     		movs	r3, #0
 1309 0070 0193     		str	r3, [sp, #4]
 788:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1310              		.loc 1 788 3 is_stmt 1 view .LVU452
 788:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1311              		.loc 1 788 41 is_stmt 0 view .LVU453
 1312 0072 0293     		str	r3, [sp, #8]
 789:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 1313              		.loc 1 789 3 is_stmt 1 view .LVU454
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 51


 789:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 1314              		.loc 1 789 34 is_stmt 0 view .LVU455
 1315 0074 0393     		str	r3, [sp, #12]
 790:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1316              		.loc 1 790 3 is_stmt 1 view .LVU456
 790:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1317              		.loc 1 790 33 is_stmt 0 view .LVU457
 1318 0076 0493     		str	r3, [sp, #16]
 791:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1319              		.loc 1 791 3 is_stmt 1 view .LVU458
 791:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1320              		.loc 1 791 35 is_stmt 0 view .LVU459
 1321 0078 0593     		str	r3, [sp, #20]
 792:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1322              		.loc 1 792 3 is_stmt 1 view .LVU460
 792:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1323              		.loc 1 792 38 is_stmt 0 view .LVU461
 1324 007a 4FF40052 		mov	r2, #8192
 1325 007e 0692     		str	r2, [sp, #24]
 793:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1326              		.loc 1 793 3 is_stmt 1 view .LVU462
 793:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1327              		.loc 1 793 36 is_stmt 0 view .LVU463
 1328 0080 0793     		str	r3, [sp, #28]
 794:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim15, &sBreakDeadTimeConfig) != HAL_OK)
 1329              		.loc 1 794 3 is_stmt 1 view .LVU464
 794:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim15, &sBreakDeadTimeConfig) != HAL_OK)
 1330              		.loc 1 794 40 is_stmt 0 view .LVU465
 1331 0082 0B93     		str	r3, [sp, #44]
 795:Src/main.c    ****   {
 1332              		.loc 1 795 3 is_stmt 1 view .LVU466
 795:Src/main.c    ****   {
 1333              		.loc 1 795 7 is_stmt 0 view .LVU467
 1334 0084 01A9     		add	r1, sp, #4
 1335 0086 0848     		ldr	r0, .L93
 1336 0088 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1337              	.LVL66:
 795:Src/main.c    ****   {
 1338              		.loc 1 795 6 discriminator 1 view .LVU468
 1339 008c 50B9     		cbnz	r0, .L92
 802:Src/main.c    **** 
 1340              		.loc 1 802 3 is_stmt 1 view .LVU469
 1341 008e 0648     		ldr	r0, .L93
 1342 0090 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1343              	.LVL67:
 804:Src/main.c    **** 
 1344              		.loc 1 804 1 is_stmt 0 view .LVU470
 1345 0094 16B0     		add	sp, sp, #88
 1346              	.LCFI23:
 1347              		.cfi_remember_state
 1348              		.cfi_def_cfa_offset 8
 1349              		@ sp needed
 1350 0096 10BD     		pop	{r4, pc}
 1351              	.L89:
 1352              	.LCFI24:
 1353              		.cfi_restore_state
 768:Src/main.c    ****   }
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 52


 1354              		.loc 1 768 5 is_stmt 1 view .LVU471
 1355 0098 FFF7FEFF 		bl	Error_Handler
 1356              	.LVL68:
 1357              	.L90:
 774:Src/main.c    ****   }
 1358              		.loc 1 774 5 view .LVU472
 1359 009c FFF7FEFF 		bl	Error_Handler
 1360              	.LVL69:
 1361              	.L91:
 785:Src/main.c    ****   }
 1362              		.loc 1 785 5 view .LVU473
 1363 00a0 FFF7FEFF 		bl	Error_Handler
 1364              	.LVL70:
 1365              	.L92:
 797:Src/main.c    ****   }
 1366              		.loc 1 797 5 view .LVU474
 1367 00a4 FFF7FEFF 		bl	Error_Handler
 1368              	.LVL71:
 1369              	.L94:
 1370              		.align	2
 1371              	.L93:
 1372 00a8 00000000 		.word	htim15
 1373 00ac 00400140 		.word	1073823744
 1374              		.cfi_endproc
 1375              	.LFE140:
 1377              		.section	.text.MX_TIM16_Init,"ax",%progbits
 1378              		.align	1
 1379              		.syntax unified
 1380              		.thumb
 1381              		.thumb_func
 1383              	MX_TIM16_Init:
 1384              	.LFB141:
 812:Src/main.c    **** 
 1385              		.loc 1 812 1 view -0
 1386              		.cfi_startproc
 1387              		@ args = 0, pretend = 0, frame = 72
 1388              		@ frame_needed = 0, uses_anonymous_args = 0
 1389 0000 10B5     		push	{r4, lr}
 1390              	.LCFI25:
 1391              		.cfi_def_cfa_offset 8
 1392              		.cfi_offset 4, -8
 1393              		.cfi_offset 14, -4
 1394 0002 92B0     		sub	sp, sp, #72
 1395              	.LCFI26:
 1396              		.cfi_def_cfa_offset 80
 818:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1397              		.loc 1 818 3 view .LVU476
 818:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1398              		.loc 1 818 22 is_stmt 0 view .LVU477
 1399 0004 0024     		movs	r4, #0
 1400 0006 0B94     		str	r4, [sp, #44]
 1401 0008 0C94     		str	r4, [sp, #48]
 1402 000a 0D94     		str	r4, [sp, #52]
 1403 000c 0E94     		str	r4, [sp, #56]
 1404 000e 0F94     		str	r4, [sp, #60]
 1405 0010 1094     		str	r4, [sp, #64]
 1406 0012 1194     		str	r4, [sp, #68]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 53


 819:Src/main.c    **** 
 1407              		.loc 1 819 3 is_stmt 1 view .LVU478
 819:Src/main.c    **** 
 1408              		.loc 1 819 34 is_stmt 0 view .LVU479
 1409 0014 2C22     		movs	r2, #44
 1410 0016 2146     		mov	r1, r4
 1411 0018 6846     		mov	r0, sp
 1412 001a FFF7FEFF 		bl	memset
 1413              	.LVL72:
 824:Src/main.c    ****   htim16.Init.Prescaler = 0;
 1414              		.loc 1 824 3 is_stmt 1 view .LVU480
 824:Src/main.c    ****   htim16.Init.Prescaler = 0;
 1415              		.loc 1 824 19 is_stmt 0 view .LVU481
 1416 001e 1E48     		ldr	r0, .L105
 1417 0020 1E4B     		ldr	r3, .L105+4
 1418 0022 0360     		str	r3, [r0]
 825:Src/main.c    ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 1419              		.loc 1 825 3 is_stmt 1 view .LVU482
 825:Src/main.c    ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 1420              		.loc 1 825 25 is_stmt 0 view .LVU483
 1421 0024 4460     		str	r4, [r0, #4]
 826:Src/main.c    ****   htim16.Init.Period = 65535;
 1422              		.loc 1 826 3 is_stmt 1 view .LVU484
 826:Src/main.c    ****   htim16.Init.Period = 65535;
 1423              		.loc 1 826 27 is_stmt 0 view .LVU485
 1424 0026 8460     		str	r4, [r0, #8]
 827:Src/main.c    ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1425              		.loc 1 827 3 is_stmt 1 view .LVU486
 827:Src/main.c    ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1426              		.loc 1 827 22 is_stmt 0 view .LVU487
 1427 0028 4FF6FF73 		movw	r3, #65535
 1428 002c C360     		str	r3, [r0, #12]
 828:Src/main.c    ****   htim16.Init.RepetitionCounter = 0;
 1429              		.loc 1 828 3 is_stmt 1 view .LVU488
 828:Src/main.c    ****   htim16.Init.RepetitionCounter = 0;
 1430              		.loc 1 828 29 is_stmt 0 view .LVU489
 1431 002e 0461     		str	r4, [r0, #16]
 829:Src/main.c    ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1432              		.loc 1 829 3 is_stmt 1 view .LVU490
 829:Src/main.c    ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1433              		.loc 1 829 33 is_stmt 0 view .LVU491
 1434 0030 4461     		str	r4, [r0, #20]
 830:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 1435              		.loc 1 830 3 is_stmt 1 view .LVU492
 830:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 1436              		.loc 1 830 33 is_stmt 0 view .LVU493
 1437 0032 8461     		str	r4, [r0, #24]
 831:Src/main.c    ****   {
 1438              		.loc 1 831 3 is_stmt 1 view .LVU494
 831:Src/main.c    ****   {
 1439              		.loc 1 831 7 is_stmt 0 view .LVU495
 1440 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1441              	.LVL73:
 831:Src/main.c    ****   {
 1442              		.loc 1 831 6 discriminator 1 view .LVU496
 1443 0038 30BB     		cbnz	r0, .L101
 835:Src/main.c    ****   {
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 54


 1444              		.loc 1 835 3 is_stmt 1 view .LVU497
 835:Src/main.c    ****   {
 1445              		.loc 1 835 7 is_stmt 0 view .LVU498
 1446 003a 1748     		ldr	r0, .L105
 1447 003c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1448              	.LVL74:
 835:Src/main.c    ****   {
 1449              		.loc 1 835 6 discriminator 1 view .LVU499
 1450 0040 20BB     		cbnz	r0, .L102
 839:Src/main.c    ****   sConfigOC.Pulse = 0;
 1451              		.loc 1 839 3 is_stmt 1 view .LVU500
 839:Src/main.c    ****   sConfigOC.Pulse = 0;
 1452              		.loc 1 839 20 is_stmt 0 view .LVU501
 1453 0042 6023     		movs	r3, #96
 1454 0044 0B93     		str	r3, [sp, #44]
 840:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1455              		.loc 1 840 3 is_stmt 1 view .LVU502
 840:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1456              		.loc 1 840 19 is_stmt 0 view .LVU503
 1457 0046 0022     		movs	r2, #0
 1458 0048 0C92     		str	r2, [sp, #48]
 841:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1459              		.loc 1 841 3 is_stmt 1 view .LVU504
 841:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1460              		.loc 1 841 24 is_stmt 0 view .LVU505
 1461 004a 0D92     		str	r2, [sp, #52]
 842:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1462              		.loc 1 842 3 is_stmt 1 view .LVU506
 842:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1463              		.loc 1 842 25 is_stmt 0 view .LVU507
 1464 004c 0E92     		str	r2, [sp, #56]
 843:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1465              		.loc 1 843 3 is_stmt 1 view .LVU508
 843:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1466              		.loc 1 843 24 is_stmt 0 view .LVU509
 1467 004e 0F92     		str	r2, [sp, #60]
 844:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1468              		.loc 1 844 3 is_stmt 1 view .LVU510
 844:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1469              		.loc 1 844 25 is_stmt 0 view .LVU511
 1470 0050 1092     		str	r2, [sp, #64]
 845:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim16, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1471              		.loc 1 845 3 is_stmt 1 view .LVU512
 845:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim16, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1472              		.loc 1 845 26 is_stmt 0 view .LVU513
 1473 0052 1192     		str	r2, [sp, #68]
 846:Src/main.c    ****   {
 1474              		.loc 1 846 3 is_stmt 1 view .LVU514
 846:Src/main.c    ****   {
 1475              		.loc 1 846 7 is_stmt 0 view .LVU515
 1476 0054 0BA9     		add	r1, sp, #44
 1477 0056 1048     		ldr	r0, .L105
 1478 0058 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1479              	.LVL75:
 846:Src/main.c    ****   {
 1480              		.loc 1 846 6 discriminator 1 view .LVU516
 1481 005c C0B9     		cbnz	r0, .L103
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 55


 850:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1482              		.loc 1 850 3 is_stmt 1 view .LVU517
 850:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1483              		.loc 1 850 40 is_stmt 0 view .LVU518
 1484 005e 0023     		movs	r3, #0
 1485 0060 0093     		str	r3, [sp]
 851:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1486              		.loc 1 851 3 is_stmt 1 view .LVU519
 851:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1487              		.loc 1 851 41 is_stmt 0 view .LVU520
 1488 0062 0193     		str	r3, [sp, #4]
 852:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 1489              		.loc 1 852 3 is_stmt 1 view .LVU521
 852:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 1490              		.loc 1 852 34 is_stmt 0 view .LVU522
 1491 0064 0293     		str	r3, [sp, #8]
 853:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1492              		.loc 1 853 3 is_stmt 1 view .LVU523
 853:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1493              		.loc 1 853 33 is_stmt 0 view .LVU524
 1494 0066 0393     		str	r3, [sp, #12]
 854:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1495              		.loc 1 854 3 is_stmt 1 view .LVU525
 854:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1496              		.loc 1 854 35 is_stmt 0 view .LVU526
 1497 0068 0493     		str	r3, [sp, #16]
 855:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1498              		.loc 1 855 3 is_stmt 1 view .LVU527
 855:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1499              		.loc 1 855 38 is_stmt 0 view .LVU528
 1500 006a 4FF40052 		mov	r2, #8192
 1501 006e 0592     		str	r2, [sp, #20]
 856:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1502              		.loc 1 856 3 is_stmt 1 view .LVU529
 856:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1503              		.loc 1 856 36 is_stmt 0 view .LVU530
 1504 0070 0693     		str	r3, [sp, #24]
 857:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim16, &sBreakDeadTimeConfig) != HAL_OK)
 1505              		.loc 1 857 3 is_stmt 1 view .LVU531
 857:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim16, &sBreakDeadTimeConfig) != HAL_OK)
 1506              		.loc 1 857 40 is_stmt 0 view .LVU532
 1507 0072 0A93     		str	r3, [sp, #40]
 858:Src/main.c    ****   {
 1508              		.loc 1 858 3 is_stmt 1 view .LVU533
 858:Src/main.c    ****   {
 1509              		.loc 1 858 7 is_stmt 0 view .LVU534
 1510 0074 6946     		mov	r1, sp
 1511 0076 0848     		ldr	r0, .L105
 1512 0078 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1513              	.LVL76:
 858:Src/main.c    ****   {
 1514              		.loc 1 858 6 discriminator 1 view .LVU535
 1515 007c 50B9     		cbnz	r0, .L104
 865:Src/main.c    **** 
 1516              		.loc 1 865 3 is_stmt 1 view .LVU536
 1517 007e 0648     		ldr	r0, .L105
 1518 0080 FFF7FEFF 		bl	HAL_TIM_MspPostInit
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 56


 1519              	.LVL77:
 867:Src/main.c    **** 
 1520              		.loc 1 867 1 is_stmt 0 view .LVU537
 1521 0084 12B0     		add	sp, sp, #72
 1522              	.LCFI27:
 1523              		.cfi_remember_state
 1524              		.cfi_def_cfa_offset 8
 1525              		@ sp needed
 1526 0086 10BD     		pop	{r4, pc}
 1527              	.L101:
 1528              	.LCFI28:
 1529              		.cfi_restore_state
 833:Src/main.c    ****   }
 1530              		.loc 1 833 5 is_stmt 1 view .LVU538
 1531 0088 FFF7FEFF 		bl	Error_Handler
 1532              	.LVL78:
 1533              	.L102:
 837:Src/main.c    ****   }
 1534              		.loc 1 837 5 view .LVU539
 1535 008c FFF7FEFF 		bl	Error_Handler
 1536              	.LVL79:
 1537              	.L103:
 848:Src/main.c    ****   }
 1538              		.loc 1 848 5 view .LVU540
 1539 0090 FFF7FEFF 		bl	Error_Handler
 1540              	.LVL80:
 1541              	.L104:
 860:Src/main.c    ****   }
 1542              		.loc 1 860 5 view .LVU541
 1543 0094 FFF7FEFF 		bl	Error_Handler
 1544              	.LVL81:
 1545              	.L106:
 1546              		.align	2
 1547              	.L105:
 1548 0098 00000000 		.word	htim16
 1549 009c 00440140 		.word	1073824768
 1550              		.cfi_endproc
 1551              	.LFE141:
 1553              		.section	.text.MX_TIM17_Init,"ax",%progbits
 1554              		.align	1
 1555              		.syntax unified
 1556              		.thumb
 1557              		.thumb_func
 1559              	MX_TIM17_Init:
 1560              	.LFB142:
 875:Src/main.c    **** 
 1561              		.loc 1 875 1 view -0
 1562              		.cfi_startproc
 1563              		@ args = 0, pretend = 0, frame = 72
 1564              		@ frame_needed = 0, uses_anonymous_args = 0
 1565 0000 10B5     		push	{r4, lr}
 1566              	.LCFI29:
 1567              		.cfi_def_cfa_offset 8
 1568              		.cfi_offset 4, -8
 1569              		.cfi_offset 14, -4
 1570 0002 92B0     		sub	sp, sp, #72
 1571              	.LCFI30:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 57


 1572              		.cfi_def_cfa_offset 80
 881:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1573              		.loc 1 881 3 view .LVU543
 881:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1574              		.loc 1 881 22 is_stmt 0 view .LVU544
 1575 0004 0024     		movs	r4, #0
 1576 0006 0B94     		str	r4, [sp, #44]
 1577 0008 0C94     		str	r4, [sp, #48]
 1578 000a 0D94     		str	r4, [sp, #52]
 1579 000c 0E94     		str	r4, [sp, #56]
 1580 000e 0F94     		str	r4, [sp, #60]
 1581 0010 1094     		str	r4, [sp, #64]
 1582 0012 1194     		str	r4, [sp, #68]
 882:Src/main.c    **** 
 1583              		.loc 1 882 3 is_stmt 1 view .LVU545
 882:Src/main.c    **** 
 1584              		.loc 1 882 34 is_stmt 0 view .LVU546
 1585 0014 2C22     		movs	r2, #44
 1586 0016 2146     		mov	r1, r4
 1587 0018 6846     		mov	r0, sp
 1588 001a FFF7FEFF 		bl	memset
 1589              	.LVL82:
 887:Src/main.c    ****   htim17.Init.Prescaler = 0;
 1590              		.loc 1 887 3 is_stmt 1 view .LVU547
 887:Src/main.c    ****   htim17.Init.Prescaler = 0;
 1591              		.loc 1 887 19 is_stmt 0 view .LVU548
 1592 001e 1E48     		ldr	r0, .L117
 1593 0020 1E4B     		ldr	r3, .L117+4
 1594 0022 0360     		str	r3, [r0]
 888:Src/main.c    ****   htim17.Init.CounterMode = TIM_COUNTERMODE_UP;
 1595              		.loc 1 888 3 is_stmt 1 view .LVU549
 888:Src/main.c    ****   htim17.Init.CounterMode = TIM_COUNTERMODE_UP;
 1596              		.loc 1 888 25 is_stmt 0 view .LVU550
 1597 0024 4460     		str	r4, [r0, #4]
 889:Src/main.c    ****   htim17.Init.Period = 65535;
 1598              		.loc 1 889 3 is_stmt 1 view .LVU551
 889:Src/main.c    ****   htim17.Init.Period = 65535;
 1599              		.loc 1 889 27 is_stmt 0 view .LVU552
 1600 0026 8460     		str	r4, [r0, #8]
 890:Src/main.c    ****   htim17.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1601              		.loc 1 890 3 is_stmt 1 view .LVU553
 890:Src/main.c    ****   htim17.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1602              		.loc 1 890 22 is_stmt 0 view .LVU554
 1603 0028 4FF6FF73 		movw	r3, #65535
 1604 002c C360     		str	r3, [r0, #12]
 891:Src/main.c    ****   htim17.Init.RepetitionCounter = 0;
 1605              		.loc 1 891 3 is_stmt 1 view .LVU555
 891:Src/main.c    ****   htim17.Init.RepetitionCounter = 0;
 1606              		.loc 1 891 29 is_stmt 0 view .LVU556
 1607 002e 0461     		str	r4, [r0, #16]
 892:Src/main.c    ****   htim17.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1608              		.loc 1 892 3 is_stmt 1 view .LVU557
 892:Src/main.c    ****   htim17.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1609              		.loc 1 892 33 is_stmt 0 view .LVU558
 1610 0030 4461     		str	r4, [r0, #20]
 893:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim17) != HAL_OK)
 1611              		.loc 1 893 3 is_stmt 1 view .LVU559
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 58


 893:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim17) != HAL_OK)
 1612              		.loc 1 893 33 is_stmt 0 view .LVU560
 1613 0032 8461     		str	r4, [r0, #24]
 894:Src/main.c    ****   {
 1614              		.loc 1 894 3 is_stmt 1 view .LVU561
 894:Src/main.c    ****   {
 1615              		.loc 1 894 7 is_stmt 0 view .LVU562
 1616 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1617              	.LVL83:
 894:Src/main.c    ****   {
 1618              		.loc 1 894 6 discriminator 1 view .LVU563
 1619 0038 30BB     		cbnz	r0, .L113
 898:Src/main.c    ****   {
 1620              		.loc 1 898 3 is_stmt 1 view .LVU564
 898:Src/main.c    ****   {
 1621              		.loc 1 898 7 is_stmt 0 view .LVU565
 1622 003a 1748     		ldr	r0, .L117
 1623 003c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1624              	.LVL84:
 898:Src/main.c    ****   {
 1625              		.loc 1 898 6 discriminator 1 view .LVU566
 1626 0040 20BB     		cbnz	r0, .L114
 902:Src/main.c    ****   sConfigOC.Pulse = 0;
 1627              		.loc 1 902 3 is_stmt 1 view .LVU567
 902:Src/main.c    ****   sConfigOC.Pulse = 0;
 1628              		.loc 1 902 20 is_stmt 0 view .LVU568
 1629 0042 6023     		movs	r3, #96
 1630 0044 0B93     		str	r3, [sp, #44]
 903:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1631              		.loc 1 903 3 is_stmt 1 view .LVU569
 903:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1632              		.loc 1 903 19 is_stmt 0 view .LVU570
 1633 0046 0022     		movs	r2, #0
 1634 0048 0C92     		str	r2, [sp, #48]
 904:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1635              		.loc 1 904 3 is_stmt 1 view .LVU571
 904:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1636              		.loc 1 904 24 is_stmt 0 view .LVU572
 1637 004a 0D92     		str	r2, [sp, #52]
 905:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1638              		.loc 1 905 3 is_stmt 1 view .LVU573
 905:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1639              		.loc 1 905 25 is_stmt 0 view .LVU574
 1640 004c 0E92     		str	r2, [sp, #56]
 906:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1641              		.loc 1 906 3 is_stmt 1 view .LVU575
 906:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1642              		.loc 1 906 24 is_stmt 0 view .LVU576
 1643 004e 0F92     		str	r2, [sp, #60]
 907:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1644              		.loc 1 907 3 is_stmt 1 view .LVU577
 907:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1645              		.loc 1 907 25 is_stmt 0 view .LVU578
 1646 0050 1092     		str	r2, [sp, #64]
 908:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim17, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1647              		.loc 1 908 3 is_stmt 1 view .LVU579
 908:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim17, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 59


 1648              		.loc 1 908 26 is_stmt 0 view .LVU580
 1649 0052 1192     		str	r2, [sp, #68]
 909:Src/main.c    ****   {
 1650              		.loc 1 909 3 is_stmt 1 view .LVU581
 909:Src/main.c    ****   {
 1651              		.loc 1 909 7 is_stmt 0 view .LVU582
 1652 0054 0BA9     		add	r1, sp, #44
 1653 0056 1048     		ldr	r0, .L117
 1654 0058 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1655              	.LVL85:
 909:Src/main.c    ****   {
 1656              		.loc 1 909 6 discriminator 1 view .LVU583
 1657 005c C0B9     		cbnz	r0, .L115
 913:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1658              		.loc 1 913 3 is_stmt 1 view .LVU584
 913:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1659              		.loc 1 913 40 is_stmt 0 view .LVU585
 1660 005e 0023     		movs	r3, #0
 1661 0060 0093     		str	r3, [sp]
 914:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1662              		.loc 1 914 3 is_stmt 1 view .LVU586
 914:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1663              		.loc 1 914 41 is_stmt 0 view .LVU587
 1664 0062 0193     		str	r3, [sp, #4]
 915:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 1665              		.loc 1 915 3 is_stmt 1 view .LVU588
 915:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 1666              		.loc 1 915 34 is_stmt 0 view .LVU589
 1667 0064 0293     		str	r3, [sp, #8]
 916:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1668              		.loc 1 916 3 is_stmt 1 view .LVU590
 916:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1669              		.loc 1 916 33 is_stmt 0 view .LVU591
 1670 0066 0393     		str	r3, [sp, #12]
 917:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1671              		.loc 1 917 3 is_stmt 1 view .LVU592
 917:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1672              		.loc 1 917 35 is_stmt 0 view .LVU593
 1673 0068 0493     		str	r3, [sp, #16]
 918:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1674              		.loc 1 918 3 is_stmt 1 view .LVU594
 918:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1675              		.loc 1 918 38 is_stmt 0 view .LVU595
 1676 006a 4FF40052 		mov	r2, #8192
 1677 006e 0592     		str	r2, [sp, #20]
 919:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1678              		.loc 1 919 3 is_stmt 1 view .LVU596
 919:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1679              		.loc 1 919 36 is_stmt 0 view .LVU597
 1680 0070 0693     		str	r3, [sp, #24]
 920:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim17, &sBreakDeadTimeConfig) != HAL_OK)
 1681              		.loc 1 920 3 is_stmt 1 view .LVU598
 920:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim17, &sBreakDeadTimeConfig) != HAL_OK)
 1682              		.loc 1 920 40 is_stmt 0 view .LVU599
 1683 0072 0A93     		str	r3, [sp, #40]
 921:Src/main.c    ****   {
 1684              		.loc 1 921 3 is_stmt 1 view .LVU600
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 60


 921:Src/main.c    ****   {
 1685              		.loc 1 921 7 is_stmt 0 view .LVU601
 1686 0074 6946     		mov	r1, sp
 1687 0076 0848     		ldr	r0, .L117
 1688 0078 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1689              	.LVL86:
 921:Src/main.c    ****   {
 1690              		.loc 1 921 6 discriminator 1 view .LVU602
 1691 007c 50B9     		cbnz	r0, .L116
 928:Src/main.c    **** 
 1692              		.loc 1 928 3 is_stmt 1 view .LVU603
 1693 007e 0648     		ldr	r0, .L117
 1694 0080 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1695              	.LVL87:
 930:Src/main.c    **** 
 1696              		.loc 1 930 1 is_stmt 0 view .LVU604
 1697 0084 12B0     		add	sp, sp, #72
 1698              	.LCFI31:
 1699              		.cfi_remember_state
 1700              		.cfi_def_cfa_offset 8
 1701              		@ sp needed
 1702 0086 10BD     		pop	{r4, pc}
 1703              	.L113:
 1704              	.LCFI32:
 1705              		.cfi_restore_state
 896:Src/main.c    ****   }
 1706              		.loc 1 896 5 is_stmt 1 view .LVU605
 1707 0088 FFF7FEFF 		bl	Error_Handler
 1708              	.LVL88:
 1709              	.L114:
 900:Src/main.c    ****   }
 1710              		.loc 1 900 5 view .LVU606
 1711 008c FFF7FEFF 		bl	Error_Handler
 1712              	.LVL89:
 1713              	.L115:
 911:Src/main.c    ****   }
 1714              		.loc 1 911 5 view .LVU607
 1715 0090 FFF7FEFF 		bl	Error_Handler
 1716              	.LVL90:
 1717              	.L116:
 923:Src/main.c    ****   }
 1718              		.loc 1 923 5 view .LVU608
 1719 0094 FFF7FEFF 		bl	Error_Handler
 1720              	.LVL91:
 1721              	.L118:
 1722              		.align	2
 1723              	.L117:
 1724 0098 00000000 		.word	htim17
 1725 009c 00480140 		.word	1073825792
 1726              		.cfi_endproc
 1727              	.LFE142:
 1729              		.section	.text.MX_USB_PCD_Init,"ax",%progbits
 1730              		.align	1
 1731              		.syntax unified
 1732              		.thumb
 1733              		.thumb_func
 1735              	MX_USB_PCD_Init:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 61


 1736              	.LFB143:
 938:Src/main.c    **** 
 1737              		.loc 1 938 1 view -0
 1738              		.cfi_startproc
 1739              		@ args = 0, pretend = 0, frame = 0
 1740              		@ frame_needed = 0, uses_anonymous_args = 0
 1741 0000 08B5     		push	{r3, lr}
 1742              	.LCFI33:
 1743              		.cfi_def_cfa_offset 8
 1744              		.cfi_offset 3, -8
 1745              		.cfi_offset 14, -4
 947:Src/main.c    ****   hpcd_USB_FS.Init.dev_endpoints = 8;
 1746              		.loc 1 947 3 view .LVU610
 947:Src/main.c    ****   hpcd_USB_FS.Init.dev_endpoints = 8;
 1747              		.loc 1 947 24 is_stmt 0 view .LVU611
 1748 0002 0848     		ldr	r0, .L123
 1749 0004 084B     		ldr	r3, .L123+4
 1750 0006 0360     		str	r3, [r0]
 948:Src/main.c    ****   hpcd_USB_FS.Init.speed = PCD_SPEED_FULL;
 1751              		.loc 1 948 3 is_stmt 1 view .LVU612
 948:Src/main.c    ****   hpcd_USB_FS.Init.speed = PCD_SPEED_FULL;
 1752              		.loc 1 948 34 is_stmt 0 view .LVU613
 1753 0008 0823     		movs	r3, #8
 1754 000a 4360     		str	r3, [r0, #4]
 949:Src/main.c    ****   hpcd_USB_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 1755              		.loc 1 949 3 is_stmt 1 view .LVU614
 949:Src/main.c    ****   hpcd_USB_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 1756              		.loc 1 949 26 is_stmt 0 view .LVU615
 1757 000c 0223     		movs	r3, #2
 1758 000e 8360     		str	r3, [r0, #8]
 950:Src/main.c    ****   hpcd_USB_FS.Init.low_power_enable = DISABLE;
 1759              		.loc 1 950 3 is_stmt 1 view .LVU616
 950:Src/main.c    ****   hpcd_USB_FS.Init.low_power_enable = DISABLE;
 1760              		.loc 1 950 31 is_stmt 0 view .LVU617
 1761 0010 0361     		str	r3, [r0, #16]
 951:Src/main.c    ****   hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 1762              		.loc 1 951 3 is_stmt 1 view .LVU618
 951:Src/main.c    ****   hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 1763              		.loc 1 951 37 is_stmt 0 view .LVU619
 1764 0012 0023     		movs	r3, #0
 1765 0014 8361     		str	r3, [r0, #24]
 952:Src/main.c    ****   if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)
 1766              		.loc 1 952 3 is_stmt 1 view .LVU620
 952:Src/main.c    ****   if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)
 1767              		.loc 1 952 44 is_stmt 0 view .LVU621
 1768 0016 0362     		str	r3, [r0, #32]
 953:Src/main.c    ****   {
 1769              		.loc 1 953 3 is_stmt 1 view .LVU622
 953:Src/main.c    ****   {
 1770              		.loc 1 953 7 is_stmt 0 view .LVU623
 1771 0018 FFF7FEFF 		bl	HAL_PCD_Init
 1772              	.LVL92:
 953:Src/main.c    ****   {
 1773              		.loc 1 953 6 discriminator 1 view .LVU624
 1774 001c 00B9     		cbnz	r0, .L122
 961:Src/main.c    **** 
 1775              		.loc 1 961 1 view .LVU625
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 62


 1776 001e 08BD     		pop	{r3, pc}
 1777              	.L122:
 955:Src/main.c    ****   }
 1778              		.loc 1 955 5 is_stmt 1 view .LVU626
 1779 0020 FFF7FEFF 		bl	Error_Handler
 1780              	.LVL93:
 1781              	.L124:
 1782              		.align	2
 1783              	.L123:
 1784 0024 00000000 		.word	hpcd_USB_FS
 1785 0028 005C0040 		.word	1073765376
 1786              		.cfi_endproc
 1787              	.LFE143:
 1789              		.section	.text.MX_TIM1_Init,"ax",%progbits
 1790              		.align	1
 1791              		.syntax unified
 1792              		.thumb
 1793              		.thumb_func
 1795              	MX_TIM1_Init:
 1796              	.LFB134:
 361:Src/main.c    **** 
 1797              		.loc 1 361 1 view -0
 1798              		.cfi_startproc
 1799              		@ args = 0, pretend = 0, frame = 104
 1800              		@ frame_needed = 0, uses_anonymous_args = 0
 1801 0000 10B5     		push	{r4, lr}
 1802              	.LCFI34:
 1803              		.cfi_def_cfa_offset 8
 1804              		.cfi_offset 4, -8
 1805              		.cfi_offset 14, -4
 1806 0002 9AB0     		sub	sp, sp, #104
 1807              	.LCFI35:
 1808              		.cfi_def_cfa_offset 112
 367:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1809              		.loc 1 367 3 view .LVU628
 367:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1810              		.loc 1 367 26 is_stmt 0 view .LVU629
 1811 0004 0024     		movs	r4, #0
 1812 0006 1694     		str	r4, [sp, #88]
 1813 0008 1794     		str	r4, [sp, #92]
 1814 000a 1894     		str	r4, [sp, #96]
 1815 000c 1994     		str	r4, [sp, #100]
 368:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1816              		.loc 1 368 3 is_stmt 1 view .LVU630
 368:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1817              		.loc 1 368 27 is_stmt 0 view .LVU631
 1818 000e 1394     		str	r4, [sp, #76]
 1819 0010 1494     		str	r4, [sp, #80]
 1820 0012 1594     		str	r4, [sp, #84]
 369:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1821              		.loc 1 369 3 is_stmt 1 view .LVU632
 369:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1822              		.loc 1 369 22 is_stmt 0 view .LVU633
 1823 0014 0C94     		str	r4, [sp, #48]
 1824 0016 0D94     		str	r4, [sp, #52]
 1825 0018 0E94     		str	r4, [sp, #56]
 1826 001a 0F94     		str	r4, [sp, #60]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 63


 1827 001c 1094     		str	r4, [sp, #64]
 1828 001e 1194     		str	r4, [sp, #68]
 1829 0020 1294     		str	r4, [sp, #72]
 370:Src/main.c    **** 
 1830              		.loc 1 370 3 is_stmt 1 view .LVU634
 370:Src/main.c    **** 
 1831              		.loc 1 370 34 is_stmt 0 view .LVU635
 1832 0022 2C22     		movs	r2, #44
 1833 0024 2146     		mov	r1, r4
 1834 0026 01A8     		add	r0, sp, #4
 1835 0028 FFF7FEFF 		bl	memset
 1836              	.LVL94:
 375:Src/main.c    ****   htim1.Init.Prescaler = 384-1;
 1837              		.loc 1 375 3 is_stmt 1 view .LVU636
 375:Src/main.c    ****   htim1.Init.Prescaler = 384-1;
 1838              		.loc 1 375 18 is_stmt 0 view .LVU637
 1839 002c 3748     		ldr	r0, .L143
 1840 002e 384B     		ldr	r3, .L143+4
 1841 0030 0360     		str	r3, [r0]
 376:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1842              		.loc 1 376 3 is_stmt 1 view .LVU638
 376:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1843              		.loc 1 376 24 is_stmt 0 view .LVU639
 1844 0032 40F27F13 		movw	r3, #383
 1845 0036 4360     		str	r3, [r0, #4]
 377:Src/main.c    ****   htim1.Init.Period = 500-1;
 1846              		.loc 1 377 3 is_stmt 1 view .LVU640
 377:Src/main.c    ****   htim1.Init.Period = 500-1;
 1847              		.loc 1 377 26 is_stmt 0 view .LVU641
 1848 0038 8460     		str	r4, [r0, #8]
 378:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1849              		.loc 1 378 3 is_stmt 1 view .LVU642
 378:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1850              		.loc 1 378 21 is_stmt 0 view .LVU643
 1851 003a 40F2F313 		movw	r3, #499
 1852 003e C360     		str	r3, [r0, #12]
 379:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 1853              		.loc 1 379 3 is_stmt 1 view .LVU644
 379:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 1854              		.loc 1 379 28 is_stmt 0 view .LVU645
 1855 0040 0461     		str	r4, [r0, #16]
 380:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1856              		.loc 1 380 3 is_stmt 1 view .LVU646
 380:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1857              		.loc 1 380 32 is_stmt 0 view .LVU647
 1858 0042 4461     		str	r4, [r0, #20]
 381:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1859              		.loc 1 381 3 is_stmt 1 view .LVU648
 381:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1860              		.loc 1 381 32 is_stmt 0 view .LVU649
 1861 0044 8461     		str	r4, [r0, #24]
 382:Src/main.c    ****   {
 1862              		.loc 1 382 3 is_stmt 1 view .LVU650
 382:Src/main.c    ****   {
 1863              		.loc 1 382 7 is_stmt 0 view .LVU651
 1864 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1865              	.LVL95:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 64


 382:Src/main.c    ****   {
 1866              		.loc 1 382 6 discriminator 1 view .LVU652
 1867 004a 0028     		cmp	r0, #0
 1868 004c 4DD1     		bne	.L135
 386:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1869              		.loc 1 386 3 is_stmt 1 view .LVU653
 386:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1870              		.loc 1 386 34 is_stmt 0 view .LVU654
 1871 004e 4FF48053 		mov	r3, #4096
 1872 0052 1693     		str	r3, [sp, #88]
 387:Src/main.c    ****   {
 1873              		.loc 1 387 3 is_stmt 1 view .LVU655
 387:Src/main.c    ****   {
 1874              		.loc 1 387 7 is_stmt 0 view .LVU656
 1875 0054 16A9     		add	r1, sp, #88
 1876 0056 2D48     		ldr	r0, .L143
 1877 0058 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1878              	.LVL96:
 387:Src/main.c    ****   {
 1879              		.loc 1 387 6 discriminator 1 view .LVU657
 1880 005c 0028     		cmp	r0, #0
 1881 005e 46D1     		bne	.L136
 391:Src/main.c    ****   {
 1882              		.loc 1 391 3 is_stmt 1 view .LVU658
 391:Src/main.c    ****   {
 1883              		.loc 1 391 7 is_stmt 0 view .LVU659
 1884 0060 2A48     		ldr	r0, .L143
 1885 0062 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1886              	.LVL97:
 391:Src/main.c    ****   {
 1887              		.loc 1 391 6 discriminator 1 view .LVU660
 1888 0066 0028     		cmp	r0, #0
 1889 0068 43D1     		bne	.L137
 395:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 1890              		.loc 1 395 3 is_stmt 1 view .LVU661
 395:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 1891              		.loc 1 395 37 is_stmt 0 view .LVU662
 1892 006a 0023     		movs	r3, #0
 1893 006c 1393     		str	r3, [sp, #76]
 396:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1894              		.loc 1 396 3 is_stmt 1 view .LVU663
 396:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1895              		.loc 1 396 38 is_stmt 0 view .LVU664
 1896 006e 1493     		str	r3, [sp, #80]
 397:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1897              		.loc 1 397 3 is_stmt 1 view .LVU665
 397:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1898              		.loc 1 397 33 is_stmt 0 view .LVU666
 1899 0070 1593     		str	r3, [sp, #84]
 398:Src/main.c    ****   {
 1900              		.loc 1 398 3 is_stmt 1 view .LVU667
 398:Src/main.c    ****   {
 1901              		.loc 1 398 7 is_stmt 0 view .LVU668
 1902 0072 13A9     		add	r1, sp, #76
 1903 0074 2548     		ldr	r0, .L143
 1904 0076 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1905              	.LVL98:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 65


 398:Src/main.c    ****   {
 1906              		.loc 1 398 6 discriminator 1 view .LVU669
 1907 007a 0028     		cmp	r0, #0
 1908 007c 3BD1     		bne	.L138
 402:Src/main.c    ****   sConfigOC.Pulse = 50;
 1909              		.loc 1 402 3 is_stmt 1 view .LVU670
 402:Src/main.c    ****   sConfigOC.Pulse = 50;
 1910              		.loc 1 402 20 is_stmt 0 view .LVU671
 1911 007e 6023     		movs	r3, #96
 1912 0080 0C93     		str	r3, [sp, #48]
 403:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1913              		.loc 1 403 3 is_stmt 1 view .LVU672
 403:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1914              		.loc 1 403 19 is_stmt 0 view .LVU673
 1915 0082 3223     		movs	r3, #50
 1916 0084 0D93     		str	r3, [sp, #52]
 404:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1917              		.loc 1 404 3 is_stmt 1 view .LVU674
 404:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1918              		.loc 1 404 24 is_stmt 0 view .LVU675
 1919 0086 0022     		movs	r2, #0
 1920 0088 0E92     		str	r2, [sp, #56]
 405:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1921              		.loc 1 405 3 is_stmt 1 view .LVU676
 405:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1922              		.loc 1 405 25 is_stmt 0 view .LVU677
 1923 008a 0F92     		str	r2, [sp, #60]
 406:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1924              		.loc 1 406 3 is_stmt 1 view .LVU678
 406:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1925              		.loc 1 406 24 is_stmt 0 view .LVU679
 1926 008c 1092     		str	r2, [sp, #64]
 407:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1927              		.loc 1 407 3 is_stmt 1 view .LVU680
 407:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1928              		.loc 1 407 25 is_stmt 0 view .LVU681
 1929 008e 1192     		str	r2, [sp, #68]
 408:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1930              		.loc 1 408 3 is_stmt 1 view .LVU682
 408:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1931              		.loc 1 408 26 is_stmt 0 view .LVU683
 1932 0090 1292     		str	r2, [sp, #72]
 409:Src/main.c    ****   {
 1933              		.loc 1 409 3 is_stmt 1 view .LVU684
 409:Src/main.c    ****   {
 1934              		.loc 1 409 7 is_stmt 0 view .LVU685
 1935 0092 0CA9     		add	r1, sp, #48
 1936 0094 1D48     		ldr	r0, .L143
 1937 0096 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1938              	.LVL99:
 409:Src/main.c    ****   {
 1939              		.loc 1 409 6 discriminator 1 view .LVU686
 1940 009a 0028     		cmp	r0, #0
 1941 009c 2DD1     		bne	.L139
 413:Src/main.c    ****   {
 1942              		.loc 1 413 3 is_stmt 1 view .LVU687
 413:Src/main.c    ****   {
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 66


 1943              		.loc 1 413 7 is_stmt 0 view .LVU688
 1944 009e 0422     		movs	r2, #4
 1945 00a0 0CA9     		add	r1, sp, #48
 1946 00a2 1A48     		ldr	r0, .L143
 1947 00a4 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1948              	.LVL100:
 413:Src/main.c    ****   {
 1949              		.loc 1 413 6 discriminator 1 view .LVU689
 1950 00a8 48BB     		cbnz	r0, .L140
 417:Src/main.c    ****   {
 1951              		.loc 1 417 3 is_stmt 1 view .LVU690
 417:Src/main.c    ****   {
 1952              		.loc 1 417 7 is_stmt 0 view .LVU691
 1953 00aa 0822     		movs	r2, #8
 1954 00ac 0CA9     		add	r1, sp, #48
 1955 00ae 1748     		ldr	r0, .L143
 1956 00b0 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1957              	.LVL101:
 417:Src/main.c    ****   {
 1958              		.loc 1 417 6 discriminator 1 view .LVU692
 1959 00b4 28BB     		cbnz	r0, .L141
 421:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1960              		.loc 1 421 3 is_stmt 1 view .LVU693
 421:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1961              		.loc 1 421 40 is_stmt 0 view .LVU694
 1962 00b6 0023     		movs	r3, #0
 1963 00b8 0193     		str	r3, [sp, #4]
 422:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1964              		.loc 1 422 3 is_stmt 1 view .LVU695
 422:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1965              		.loc 1 422 41 is_stmt 0 view .LVU696
 1966 00ba 0293     		str	r3, [sp, #8]
 423:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 1967              		.loc 1 423 3 is_stmt 1 view .LVU697
 423:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 1968              		.loc 1 423 34 is_stmt 0 view .LVU698
 1969 00bc 0393     		str	r3, [sp, #12]
 424:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1970              		.loc 1 424 3 is_stmt 1 view .LVU699
 424:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1971              		.loc 1 424 33 is_stmt 0 view .LVU700
 1972 00be 0493     		str	r3, [sp, #16]
 425:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1973              		.loc 1 425 3 is_stmt 1 view .LVU701
 425:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1974              		.loc 1 425 35 is_stmt 0 view .LVU702
 1975 00c0 0593     		str	r3, [sp, #20]
 426:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1976              		.loc 1 426 3 is_stmt 1 view .LVU703
 426:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1977              		.loc 1 426 38 is_stmt 0 view .LVU704
 1978 00c2 4FF40052 		mov	r2, #8192
 1979 00c6 0692     		str	r2, [sp, #24]
 427:Src/main.c    ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 1980              		.loc 1 427 3 is_stmt 1 view .LVU705
 427:Src/main.c    ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 1981              		.loc 1 427 36 is_stmt 0 view .LVU706
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 67


 1982 00c8 0793     		str	r3, [sp, #28]
 428:Src/main.c    ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 1983              		.loc 1 428 3 is_stmt 1 view .LVU707
 428:Src/main.c    ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 1984              		.loc 1 428 36 is_stmt 0 view .LVU708
 1985 00ca 0893     		str	r3, [sp, #32]
 429:Src/main.c    ****   sBreakDeadTimeConfig.Break2Filter = 0;
 1986              		.loc 1 429 3 is_stmt 1 view .LVU709
 429:Src/main.c    ****   sBreakDeadTimeConfig.Break2Filter = 0;
 1987              		.loc 1 429 39 is_stmt 0 view .LVU710
 1988 00cc 4FF00072 		mov	r2, #33554432
 1989 00d0 0992     		str	r2, [sp, #36]
 430:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1990              		.loc 1 430 3 is_stmt 1 view .LVU711
 430:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1991              		.loc 1 430 37 is_stmt 0 view .LVU712
 1992 00d2 0A93     		str	r3, [sp, #40]
 431:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1993              		.loc 1 431 3 is_stmt 1 view .LVU713
 431:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1994              		.loc 1 431 40 is_stmt 0 view .LVU714
 1995 00d4 0B93     		str	r3, [sp, #44]
 432:Src/main.c    ****   {
 1996              		.loc 1 432 3 is_stmt 1 view .LVU715
 432:Src/main.c    ****   {
 1997              		.loc 1 432 7 is_stmt 0 view .LVU716
 1998 00d6 01A9     		add	r1, sp, #4
 1999 00d8 0C48     		ldr	r0, .L143
 2000 00da FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 2001              	.LVL102:
 432:Src/main.c    ****   {
 2002              		.loc 1 432 6 discriminator 1 view .LVU717
 2003 00de 90B9     		cbnz	r0, .L142
 439:Src/main.c    **** 
 2004              		.loc 1 439 3 is_stmt 1 view .LVU718
 2005 00e0 0A48     		ldr	r0, .L143
 2006 00e2 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2007              	.LVL103:
 441:Src/main.c    **** 
 2008              		.loc 1 441 1 is_stmt 0 view .LVU719
 2009 00e6 1AB0     		add	sp, sp, #104
 2010              	.LCFI36:
 2011              		.cfi_remember_state
 2012              		.cfi_def_cfa_offset 8
 2013              		@ sp needed
 2014 00e8 10BD     		pop	{r4, pc}
 2015              	.L135:
 2016              	.LCFI37:
 2017              		.cfi_restore_state
 384:Src/main.c    ****   }
 2018              		.loc 1 384 5 is_stmt 1 view .LVU720
 2019 00ea FFF7FEFF 		bl	Error_Handler
 2020              	.LVL104:
 2021              	.L136:
 389:Src/main.c    ****   }
 2022              		.loc 1 389 5 view .LVU721
 2023 00ee FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 68


 2024              	.LVL105:
 2025              	.L137:
 393:Src/main.c    ****   }
 2026              		.loc 1 393 5 view .LVU722
 2027 00f2 FFF7FEFF 		bl	Error_Handler
 2028              	.LVL106:
 2029              	.L138:
 400:Src/main.c    ****   }
 2030              		.loc 1 400 5 view .LVU723
 2031 00f6 FFF7FEFF 		bl	Error_Handler
 2032              	.LVL107:
 2033              	.L139:
 411:Src/main.c    ****   }
 2034              		.loc 1 411 5 view .LVU724
 2035 00fa FFF7FEFF 		bl	Error_Handler
 2036              	.LVL108:
 2037              	.L140:
 415:Src/main.c    ****   }
 2038              		.loc 1 415 5 view .LVU725
 2039 00fe FFF7FEFF 		bl	Error_Handler
 2040              	.LVL109:
 2041              	.L141:
 419:Src/main.c    ****   }
 2042              		.loc 1 419 5 view .LVU726
 2043 0102 FFF7FEFF 		bl	Error_Handler
 2044              	.LVL110:
 2045              	.L142:
 434:Src/main.c    ****   }
 2046              		.loc 1 434 5 view .LVU727
 2047 0106 FFF7FEFF 		bl	Error_Handler
 2048              	.LVL111:
 2049              	.L144:
 2050 010a 00BF     		.align	2
 2051              	.L143:
 2052 010c 00000000 		.word	htim1
 2053 0110 002C0140 		.word	1073818624
 2054              		.cfi_endproc
 2055              	.LFE134:
 2057              		.section	.text.MX_TIM7_Init,"ax",%progbits
 2058              		.align	1
 2059              		.syntax unified
 2060              		.thumb
 2061              		.thumb_func
 2063              	MX_TIM7_Init:
 2064              	.LFB138:
 628:Src/main.c    **** 
 2065              		.loc 1 628 1 view -0
 2066              		.cfi_startproc
 2067              		@ args = 0, pretend = 0, frame = 16
 2068              		@ frame_needed = 0, uses_anonymous_args = 0
 2069 0000 00B5     		push	{lr}
 2070              	.LCFI38:
 2071              		.cfi_def_cfa_offset 4
 2072              		.cfi_offset 14, -4
 2073 0002 85B0     		sub	sp, sp, #20
 2074              	.LCFI39:
 2075              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 69


 634:Src/main.c    **** 
 2076              		.loc 1 634 3 view .LVU729
 634:Src/main.c    **** 
 2077              		.loc 1 634 27 is_stmt 0 view .LVU730
 2078 0004 0023     		movs	r3, #0
 2079 0006 0193     		str	r3, [sp, #4]
 2080 0008 0293     		str	r3, [sp, #8]
 2081 000a 0393     		str	r3, [sp, #12]
 639:Src/main.c    ****   htim7.Init.Prescaler = 4;
 2082              		.loc 1 639 3 is_stmt 1 view .LVU731
 639:Src/main.c    ****   htim7.Init.Prescaler = 4;
 2083              		.loc 1 639 18 is_stmt 0 view .LVU732
 2084 000c 0D48     		ldr	r0, .L151
 2085 000e 0E4A     		ldr	r2, .L151+4
 2086 0010 0260     		str	r2, [r0]
 640:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 2087              		.loc 1 640 3 is_stmt 1 view .LVU733
 640:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 2088              		.loc 1 640 24 is_stmt 0 view .LVU734
 2089 0012 0422     		movs	r2, #4
 2090 0014 4260     		str	r2, [r0, #4]
 641:Src/main.c    ****   htim7.Init.Period = 100;
 2091              		.loc 1 641 3 is_stmt 1 view .LVU735
 641:Src/main.c    ****   htim7.Init.Period = 100;
 2092              		.loc 1 641 26 is_stmt 0 view .LVU736
 2093 0016 8360     		str	r3, [r0, #8]
 642:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2094              		.loc 1 642 3 is_stmt 1 view .LVU737
 642:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2095              		.loc 1 642 21 is_stmt 0 view .LVU738
 2096 0018 6422     		movs	r2, #100
 2097 001a C260     		str	r2, [r0, #12]
 643:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 2098              		.loc 1 643 3 is_stmt 1 view .LVU739
 643:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 2099              		.loc 1 643 32 is_stmt 0 view .LVU740
 2100 001c 8361     		str	r3, [r0, #24]
 644:Src/main.c    ****   {
 2101              		.loc 1 644 3 is_stmt 1 view .LVU741
 644:Src/main.c    ****   {
 2102              		.loc 1 644 7 is_stmt 0 view .LVU742
 2103 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 2104              	.LVL112:
 644:Src/main.c    ****   {
 2105              		.loc 1 644 6 discriminator 1 view .LVU743
 2106 0022 50B9     		cbnz	r0, .L149
 648:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2107              		.loc 1 648 3 is_stmt 1 view .LVU744
 648:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2108              		.loc 1 648 37 is_stmt 0 view .LVU745
 2109 0024 0023     		movs	r3, #0
 2110 0026 0193     		str	r3, [sp, #4]
 649:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 2111              		.loc 1 649 3 is_stmt 1 view .LVU746
 649:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 2112              		.loc 1 649 33 is_stmt 0 view .LVU747
 2113 0028 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 70


 650:Src/main.c    ****   {
 2114              		.loc 1 650 3 is_stmt 1 view .LVU748
 650:Src/main.c    ****   {
 2115              		.loc 1 650 7 is_stmt 0 view .LVU749
 2116 002a 01A9     		add	r1, sp, #4
 2117 002c 0548     		ldr	r0, .L151
 2118 002e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2119              	.LVL113:
 650:Src/main.c    ****   {
 2120              		.loc 1 650 6 discriminator 1 view .LVU750
 2121 0032 20B9     		cbnz	r0, .L150
 658:Src/main.c    **** 
 2122              		.loc 1 658 1 view .LVU751
 2123 0034 05B0     		add	sp, sp, #20
 2124              	.LCFI40:
 2125              		.cfi_remember_state
 2126              		.cfi_def_cfa_offset 4
 2127              		@ sp needed
 2128 0036 5DF804FB 		ldr	pc, [sp], #4
 2129              	.L149:
 2130              	.LCFI41:
 2131              		.cfi_restore_state
 646:Src/main.c    ****   }
 2132              		.loc 1 646 5 is_stmt 1 view .LVU752
 2133 003a FFF7FEFF 		bl	Error_Handler
 2134              	.LVL114:
 2135              	.L150:
 652:Src/main.c    ****   }
 2136              		.loc 1 652 5 view .LVU753
 2137 003e FFF7FEFF 		bl	Error_Handler
 2138              	.LVL115:
 2139              	.L152:
 2140 0042 00BF     		.align	2
 2141              	.L151:
 2142 0044 00000000 		.word	htim7
 2143 0048 00140040 		.word	1073746944
 2144              		.cfi_endproc
 2145              	.LFE138:
 2147              		.section	.text.SystemClock_Config,"ax",%progbits
 2148              		.align	1
 2149              		.global	SystemClock_Config
 2150              		.syntax unified
 2151              		.thumb
 2152              		.thumb_func
 2154              	SystemClock_Config:
 2155              	.LFB131:
 221:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2156              		.loc 1 221 1 view -0
 2157              		.cfi_startproc
 2158              		@ args = 0, pretend = 0, frame = 120
 2159              		@ frame_needed = 0, uses_anonymous_args = 0
 2160 0000 00B5     		push	{lr}
 2161              	.LCFI42:
 2162              		.cfi_def_cfa_offset 4
 2163              		.cfi_offset 14, -4
 2164 0002 9FB0     		sub	sp, sp, #124
 2165              	.LCFI43:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 71


 2166              		.cfi_def_cfa_offset 128
 222:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2167              		.loc 1 222 3 view .LVU755
 222:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2168              		.loc 1 222 22 is_stmt 0 view .LVU756
 2169 0004 2822     		movs	r2, #40
 2170 0006 0021     		movs	r1, #0
 2171 0008 14A8     		add	r0, sp, #80
 2172 000a FFF7FEFF 		bl	memset
 2173              	.LVL116:
 223:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 2174              		.loc 1 223 3 is_stmt 1 view .LVU757
 223:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 2175              		.loc 1 223 22 is_stmt 0 view .LVU758
 2176 000e 0021     		movs	r1, #0
 2177 0010 0F91     		str	r1, [sp, #60]
 2178 0012 1091     		str	r1, [sp, #64]
 2179 0014 1191     		str	r1, [sp, #68]
 2180 0016 1291     		str	r1, [sp, #72]
 2181 0018 1391     		str	r1, [sp, #76]
 224:Src/main.c    **** 
 2182              		.loc 1 224 3 is_stmt 1 view .LVU759
 224:Src/main.c    **** 
 2183              		.loc 1 224 28 is_stmt 0 view .LVU760
 2184 001a 3C22     		movs	r2, #60
 2185 001c 6846     		mov	r0, sp
 2186 001e FFF7FEFF 		bl	memset
 2187              	.LVL117:
 229:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 2188              		.loc 1 229 3 is_stmt 1 view .LVU761
 229:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 2189              		.loc 1 229 36 is_stmt 0 view .LVU762
 2190 0022 0323     		movs	r3, #3
 2191 0024 1493     		str	r3, [sp, #80]
 230:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 2192              		.loc 1 230 3 is_stmt 1 view .LVU763
 230:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 2193              		.loc 1 230 30 is_stmt 0 view .LVU764
 2194 0026 4FF4A023 		mov	r3, #327680
 2195 002a 1593     		str	r3, [sp, #84]
 231:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2196              		.loc 1 231 3 is_stmt 1 view .LVU765
 232:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2197              		.loc 1 232 3 view .LVU766
 232:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2198              		.loc 1 232 30 is_stmt 0 view .LVU767
 2199 002c 0123     		movs	r3, #1
 2200 002e 1893     		str	r3, [sp, #96]
 233:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2201              		.loc 1 233 3 is_stmt 1 view .LVU768
 233:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2202              		.loc 1 233 41 is_stmt 0 view .LVU769
 2203 0030 1023     		movs	r3, #16
 2204 0032 1993     		str	r3, [sp, #100]
 234:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 2205              		.loc 1 234 3 is_stmt 1 view .LVU770
 234:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 72


 2206              		.loc 1 234 34 is_stmt 0 view .LVU771
 2207 0034 0223     		movs	r3, #2
 2208 0036 1B93     		str	r3, [sp, #108]
 235:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 2209              		.loc 1 235 3 is_stmt 1 view .LVU772
 235:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 2210              		.loc 1 235 35 is_stmt 0 view .LVU773
 2211 0038 4FF48033 		mov	r3, #65536
 2212 003c 1C93     		str	r3, [sp, #112]
 236:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2213              		.loc 1 236 3 is_stmt 1 view .LVU774
 236:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2214              		.loc 1 236 32 is_stmt 0 view .LVU775
 2215 003e 4FF48013 		mov	r3, #1048576
 2216 0042 1D93     		str	r3, [sp, #116]
 237:Src/main.c    ****   {
 2217              		.loc 1 237 3 is_stmt 1 view .LVU776
 237:Src/main.c    ****   {
 2218              		.loc 1 237 7 is_stmt 0 view .LVU777
 2219 0044 14A8     		add	r0, sp, #80
 2220 0046 FFF7FEFF 		bl	HAL_RCC_OscConfig
 2221              	.LVL118:
 237:Src/main.c    ****   {
 2222              		.loc 1 237 6 discriminator 1 view .LVU778
 2223 004a F0B9     		cbnz	r0, .L158
 244:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 2224              		.loc 1 244 3 is_stmt 1 view .LVU779
 244:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 2225              		.loc 1 244 31 is_stmt 0 view .LVU780
 2226 004c 0F23     		movs	r3, #15
 2227 004e 0F93     		str	r3, [sp, #60]
 246:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2228              		.loc 1 246 3 is_stmt 1 view .LVU781
 246:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2229              		.loc 1 246 34 is_stmt 0 view .LVU782
 2230 0050 0223     		movs	r3, #2
 2231 0052 1093     		str	r3, [sp, #64]
 247:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 2232              		.loc 1 247 3 is_stmt 1 view .LVU783
 247:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 2233              		.loc 1 247 35 is_stmt 0 view .LVU784
 2234 0054 0023     		movs	r3, #0
 2235 0056 1193     		str	r3, [sp, #68]
 248:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 2236              		.loc 1 248 3 is_stmt 1 view .LVU785
 248:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 2237              		.loc 1 248 36 is_stmt 0 view .LVU786
 2238 0058 4FF48062 		mov	r2, #1024
 2239 005c 1292     		str	r2, [sp, #72]
 249:Src/main.c    **** 
 2240              		.loc 1 249 3 is_stmt 1 view .LVU787
 249:Src/main.c    **** 
 2241              		.loc 1 249 36 is_stmt 0 view .LVU788
 2242 005e 1393     		str	r3, [sp, #76]
 251:Src/main.c    ****   {
 2243              		.loc 1 251 3 is_stmt 1 view .LVU789
 251:Src/main.c    ****   {
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 73


 2244              		.loc 1 251 7 is_stmt 0 view .LVU790
 2245 0060 0121     		movs	r1, #1
 2246 0062 0FA8     		add	r0, sp, #60
 2247 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2248              	.LVL119:
 251:Src/main.c    ****   {
 2249              		.loc 1 251 6 discriminator 1 view .LVU791
 2250 0068 88B9     		cbnz	r0, .L159
 255:Src/main.c    ****                               |RCC_PERIPHCLK_TIM1|RCC_PERIPHCLK_TIM8;
 2251              		.loc 1 255 3 is_stmt 1 view .LVU792
 255:Src/main.c    ****                               |RCC_PERIPHCLK_TIM1|RCC_PERIPHCLK_TIM8;
 2252              		.loc 1 255 38 is_stmt 0 view .LVU793
 2253 006a 0B4B     		ldr	r3, .L161
 2254 006c 0093     		str	r3, [sp]
 257:Src/main.c    ****   PeriphClkInit.USBClockSelection = RCC_USBCLKSOURCE_PLL;
 2255              		.loc 1 257 3 is_stmt 1 view .LVU794
 257:Src/main.c    ****   PeriphClkInit.USBClockSelection = RCC_USBCLKSOURCE_PLL;
 2256              		.loc 1 257 36 is_stmt 0 view .LVU795
 2257 006e 0023     		movs	r3, #0
 2258 0070 0793     		str	r3, [sp, #28]
 258:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 2259              		.loc 1 258 3 is_stmt 1 view .LVU796
 258:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 2260              		.loc 1 258 35 is_stmt 0 view .LVU797
 2261 0072 4FF48002 		mov	r2, #4194304
 2262 0076 0E92     		str	r2, [sp, #56]
 259:Src/main.c    ****   PeriphClkInit.Tim8ClockSelection = RCC_TIM8CLK_HCLK;
 2263              		.loc 1 259 3 is_stmt 1 view .LVU798
 259:Src/main.c    ****   PeriphClkInit.Tim8ClockSelection = RCC_TIM8CLK_HCLK;
 2264              		.loc 1 259 36 is_stmt 0 view .LVU799
 2265 0078 0C93     		str	r3, [sp, #48]
 260:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 2266              		.loc 1 260 3 is_stmt 1 view .LVU800
 260:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 2267              		.loc 1 260 36 is_stmt 0 view .LVU801
 2268 007a 0D93     		str	r3, [sp, #52]
 261:Src/main.c    ****   {
 2269              		.loc 1 261 3 is_stmt 1 view .LVU802
 261:Src/main.c    ****   {
 2270              		.loc 1 261 7 is_stmt 0 view .LVU803
 2271 007c 6846     		mov	r0, sp
 2272 007e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 2273              	.LVL120:
 261:Src/main.c    ****   {
 2274              		.loc 1 261 6 discriminator 1 view .LVU804
 2275 0082 30B9     		cbnz	r0, .L160
 265:Src/main.c    **** 
 2276              		.loc 1 265 1 view .LVU805
 2277 0084 1FB0     		add	sp, sp, #124
 2278              	.LCFI44:
 2279              		.cfi_remember_state
 2280              		.cfi_def_cfa_offset 4
 2281              		@ sp needed
 2282 0086 5DF804FB 		ldr	pc, [sp], #4
 2283              	.L158:
 2284              	.LCFI45:
 2285              		.cfi_restore_state
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 74


 239:Src/main.c    ****   }
 2286              		.loc 1 239 5 is_stmt 1 view .LVU806
 2287 008a FFF7FEFF 		bl	Error_Handler
 2288              	.LVL121:
 2289              	.L159:
 253:Src/main.c    ****   }
 2290              		.loc 1 253 5 view .LVU807
 2291 008e FFF7FEFF 		bl	Error_Handler
 2292              	.LVL122:
 2293              	.L160:
 263:Src/main.c    ****   }
 2294              		.loc 1 263 5 view .LVU808
 2295 0092 FFF7FEFF 		bl	Error_Handler
 2296              	.LVL123:
 2297              	.L162:
 2298 0096 00BF     		.align	2
 2299              	.L161:
 2300 0098 20300200 		.word	143392
 2301              		.cfi_endproc
 2302              	.LFE131:
 2304              		.section	.text.main,"ax",%progbits
 2305              		.align	1
 2306              		.global	main
 2307              		.syntax unified
 2308              		.thumb
 2309              		.thumb_func
 2311              	main:
 2312              	.LFB130:
 111:Src/main.c    ****   /* USER CODE BEGIN 1 */
 2313              		.loc 1 111 1 view -0
 2314              		.cfi_startproc
 2315              		@ Volatile: function does not return.
 2316              		@ args = 0, pretend = 0, frame = 0
 2317              		@ frame_needed = 0, uses_anonymous_args = 0
 2318 0000 08B5     		push	{r3, lr}
 2319              	.LCFI46:
 2320              		.cfi_def_cfa_offset 8
 2321              		.cfi_offset 3, -8
 2322              		.cfi_offset 14, -4
 119:Src/main.c    **** 
 2323              		.loc 1 119 3 view .LVU810
 2324 0002 FFF7FEFF 		bl	HAL_Init
 2325              	.LVL124:
 126:Src/main.c    **** 
 2326              		.loc 1 126 3 view .LVU811
 2327 0006 FFF7FEFF 		bl	SystemClock_Config
 2328              	.LVL125:
 133:Src/main.c    ****   MX_I2C1_Init();
 2329              		.loc 1 133 3 view .LVU812
 2330 000a FFF7FEFF 		bl	MX_GPIO_Init
 2331              	.LVL126:
 134:Src/main.c    ****   MX_SPI1_Init();
 2332              		.loc 1 134 3 view .LVU813
 2333 000e FFF7FEFF 		bl	MX_I2C1_Init
 2334              	.LVL127:
 135:Src/main.c    ****   MX_TIM2_Init();
 2335              		.loc 1 135 3 view .LVU814
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 75


 2336 0012 FFF7FEFF 		bl	MX_SPI1_Init
 2337              	.LVL128:
 136:Src/main.c    ****   MX_TIM3_Init();
 2338              		.loc 1 136 3 view .LVU815
 2339 0016 FFF7FEFF 		bl	MX_TIM2_Init
 2340              	.LVL129:
 137:Src/main.c    ****   MX_TIM4_Init();
 2341              		.loc 1 137 3 view .LVU816
 2342 001a FFF7FEFF 		bl	MX_TIM3_Init
 2343              	.LVL130:
 138:Src/main.c    ****   MX_TIM8_Init();
 2344              		.loc 1 138 3 view .LVU817
 2345 001e FFF7FEFF 		bl	MX_TIM4_Init
 2346              	.LVL131:
 139:Src/main.c    ****   MX_TIM15_Init();
 2347              		.loc 1 139 3 view .LVU818
 2348 0022 FFF7FEFF 		bl	MX_TIM8_Init
 2349              	.LVL132:
 140:Src/main.c    ****   MX_TIM16_Init();
 2350              		.loc 1 140 3 view .LVU819
 2351 0026 FFF7FEFF 		bl	MX_TIM15_Init
 2352              	.LVL133:
 141:Src/main.c    ****   MX_TIM17_Init();
 2353              		.loc 1 141 3 view .LVU820
 2354 002a FFF7FEFF 		bl	MX_TIM16_Init
 2355              	.LVL134:
 142:Src/main.c    ****   MX_USB_PCD_Init();
 2356              		.loc 1 142 3 view .LVU821
 2357 002e FFF7FEFF 		bl	MX_TIM17_Init
 2358              	.LVL135:
 143:Src/main.c    ****   MX_TIM1_Init();
 2359              		.loc 1 143 3 view .LVU822
 2360 0032 FFF7FEFF 		bl	MX_USB_PCD_Init
 2361              	.LVL136:
 144:Src/main.c    ****   MX_TIM7_Init();
 2362              		.loc 1 144 3 view .LVU823
 2363 0036 FFF7FEFF 		bl	MX_TIM1_Init
 2364              	.LVL137:
 145:Src/main.c    ****   /* USER CODE BEGIN 2 */
 2365              		.loc 1 145 3 view .LVU824
 2366 003a FFF7FEFF 		bl	MX_TIM7_Init
 2367              	.LVL138:
 148:Src/main.c    ****   // HAL_TIM_Base_Start_IT(&htim7);
 2368              		.loc 1 148 3 view .LVU825
 2369 003e 414C     		ldr	r4, .L178
 2370 0040 2046     		mov	r0, r4
 2371 0042 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 2372              	.LVL139:
 152:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 2373              		.loc 1 152 3 view .LVU826
 2374 0046 0021     		movs	r1, #0
 2375 0048 2046     		mov	r0, r4
 2376 004a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 2377              	.LVL140:
 153:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 2378              		.loc 1 153 3 view .LVU827
 2379 004e 0421     		movs	r1, #4
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 76


 2380 0050 2046     		mov	r0, r4
 2381 0052 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 2382              	.LVL141:
 154:Src/main.c    ****   /* USER CODE END 2 */
 2383              		.loc 1 154 3 view .LVU828
 2384 0056 0821     		movs	r1, #8
 2385 0058 2046     		mov	r0, r4
 2386 005a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 2387              	.LVL142:
 2388 005e 51E0     		b	.L174
 2389              	.L166:
 172:Src/main.c    ****         } else {
 2390              		.loc 1 172 17 view .LVU829
 172:Src/main.c    ****         } else {
 2391              		.loc 1 172 27 is_stmt 0 view .LVU830
 2392 0060 0533     		adds	r3, r3, #5
 2393 0062 394A     		ldr	r2, .L178+4
 2394 0064 1370     		strb	r3, [r2]
 2395 0066 11E0     		b	.L167
 2396              	.L165:
 174:Src/main.c    ****                 tPulse = UP;
 2397              		.loc 1 174 13 is_stmt 1 view .LVU831
 174:Src/main.c    ****                 tPulse = UP;
 2398              		.loc 1 174 28 is_stmt 0 view .LVU832
 2399 0068 374B     		ldr	r3, .L178+4
 2400 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 174:Src/main.c    ****                 tPulse = UP;
 2401              		.loc 1 174 16 view .LVU833
 2402 006c 042B     		cmp	r3, #4
 2403 006e 03D8     		bhi	.L168
 175:Src/main.c    ****             else
 2404              		.loc 1 175 17 is_stmt 1 view .LVU834
 175:Src/main.c    ****             else
 2405              		.loc 1 175 24 is_stmt 0 view .LVU835
 2406 0070 364B     		ldr	r3, .L178+8
 2407 0072 0022     		movs	r2, #0
 2408 0074 1A70     		strb	r2, [r3]
 2409 0076 09E0     		b	.L167
 2410              	.L168:
 177:Src/main.c    ****         }
 2411              		.loc 1 177 17 is_stmt 1 view .LVU836
 177:Src/main.c    ****         }
 2412              		.loc 1 177 27 is_stmt 0 view .LVU837
 2413 0078 053B     		subs	r3, r3, #5
 2414 007a 334A     		ldr	r2, .L178+4
 2415 007c 1370     		strb	r3, [r2]
 2416 007e 05E0     		b	.L167
 2417              	.L164:
 179:Src/main.c    ****         HAL_GPIO_WritePin( GPIOE, GPIO_PIN_10, GPIO_PIN_RESET );
 2418              		.loc 1 179 12 is_stmt 1 view .LVU838
 179:Src/main.c    ****         HAL_GPIO_WritePin( GPIOE, GPIO_PIN_10, GPIO_PIN_RESET );
 2419              		.loc 1 179 18 is_stmt 0 view .LVU839
 2420 0080 0121     		movs	r1, #1
 2421 0082 4FF09040 		mov	r0, #1207959552
 2422 0086 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 2423              	.LVL143:
 179:Src/main.c    ****         HAL_GPIO_WritePin( GPIOE, GPIO_PIN_10, GPIO_PIN_RESET );
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 77


 2424              		.loc 1 179 14 discriminator 1 view .LVU840
 2425 008a A8B1     		cbz	r0, .L176
 2426              	.L167:
 183:Src/main.c    ****     {
 2427              		.loc 1 183 5 is_stmt 1 view .LVU841
 183:Src/main.c    ****     {
 2428              		.loc 1 183 9 is_stmt 0 view .LVU842
 2429 008c 1021     		movs	r1, #16
 2430 008e 3048     		ldr	r0, .L178+12
 2431 0090 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 2432              	.LVL144:
 183:Src/main.c    ****     {
 2433              		.loc 1 183 7 discriminator 1 view .LVU843
 2434 0094 40B3     		cbz	r0, .L169
 185:Src/main.c    **** 
 2435              		.loc 1 185 9 is_stmt 1 view .LVU844
 2436 0096 0122     		movs	r2, #1
 2437 0098 4FF48041 		mov	r1, #16384
 2438 009c 2D48     		ldr	r0, .L178+16
 2439 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 2440              	.LVL145:
 187:Src/main.c    ****         {
 2441              		.loc 1 187 9 view .LVU845
 187:Src/main.c    ****         {
 2442              		.loc 1 187 21 is_stmt 0 view .LVU846
 2443 00a2 2D4B     		ldr	r3, .L178+20
 2444 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 187:Src/main.c    ****         {
 2445              		.loc 1 187 11 view .LVU847
 2446 00a6 93B9     		cbnz	r3, .L170
 189:Src/main.c    ****                 tDivide = DOWN;
 2447              		.loc 1 189 13 is_stmt 1 view .LVU848
 189:Src/main.c    ****                 tDivide = DOWN;
 2448              		.loc 1 189 34 is_stmt 0 view .LVU849
 2449 00a8 2C4B     		ldr	r3, .L178+24
 2450 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 189:Src/main.c    ****                 tDivide = DOWN;
 2451              		.loc 1 189 15 view .LVU850
 2452 00ac 632B     		cmp	r3, #99
 2453 00ae 0AD9     		bls	.L171
 190:Src/main.c    ****             else
 2454              		.loc 1 190 17 is_stmt 1 view .LVU851
 190:Src/main.c    ****             else
 2455              		.loc 1 190 25 is_stmt 0 view .LVU852
 2456 00b0 294B     		ldr	r3, .L178+20
 2457 00b2 0122     		movs	r2, #1
 2458 00b4 1A70     		strb	r2, [r3]
 2459 00b6 1CE0     		b	.L172
 2460              	.L176:
 180:Src/main.c    ****     }
 2461              		.loc 1 180 9 is_stmt 1 view .LVU853
 2462 00b8 0022     		movs	r2, #0
 2463 00ba 4FF48061 		mov	r1, #1024
 2464 00be 2548     		ldr	r0, .L178+16
 2465 00c0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2466              	.LVL146:
 2467 00c4 E2E7     		b	.L167
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 78


 2468              	.L171:
 192:Src/main.c    ****         } else {
 2469              		.loc 1 192 17 view .LVU854
 192:Src/main.c    ****         } else {
 2470              		.loc 1 192 34 is_stmt 0 view .LVU855
 2471 00c6 0533     		adds	r3, r3, #5
 2472 00c8 244A     		ldr	r2, .L178+24
 2473 00ca 1370     		strb	r3, [r2]
 2474 00cc 11E0     		b	.L172
 2475              	.L170:
 194:Src/main.c    ****                 tDivide = UP;
 2476              		.loc 1 194 13 is_stmt 1 view .LVU856
 194:Src/main.c    ****                 tDivide = UP;
 2477              		.loc 1 194 28 is_stmt 0 view .LVU857
 2478 00ce 1E4B     		ldr	r3, .L178+4
 2479 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 194:Src/main.c    ****                 tDivide = UP;
 2480              		.loc 1 194 16 view .LVU858
 2481 00d2 042B     		cmp	r3, #4
 2482 00d4 03D8     		bhi	.L173
 195:Src/main.c    ****             else
 2483              		.loc 1 195 17 is_stmt 1 view .LVU859
 195:Src/main.c    ****             else
 2484              		.loc 1 195 25 is_stmt 0 view .LVU860
 2485 00d6 204B     		ldr	r3, .L178+20
 2486 00d8 0022     		movs	r2, #0
 2487 00da 1A70     		strb	r2, [r3]
 2488 00dc 09E0     		b	.L172
 2489              	.L173:
 197:Src/main.c    ****         }
 2490              		.loc 1 197 17 is_stmt 1 view .LVU861
 197:Src/main.c    ****         }
 2491              		.loc 1 197 34 is_stmt 0 view .LVU862
 2492 00de 1F4A     		ldr	r2, .L178+24
 2493 00e0 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2494 00e2 053B     		subs	r3, r3, #5
 2495 00e4 1370     		strb	r3, [r2]
 2496 00e6 04E0     		b	.L172
 2497              	.L169:
 200:Src/main.c    **** 
 2498              		.loc 1 200 12 is_stmt 1 view .LVU863
 200:Src/main.c    **** 
 2499              		.loc 1 200 18 is_stmt 0 view .LVU864
 2500 00e8 1021     		movs	r1, #16
 2501 00ea 1948     		ldr	r0, .L178+12
 2502 00ec FFF7FEFF 		bl	HAL_GPIO_ReadPin
 2503              	.LVL147:
 200:Src/main.c    **** 
 2504              		.loc 1 200 14 discriminator 1 view .LVU865
 2505 00f0 08B3     		cbz	r0, .L177
 2506              	.L172:
 210:Src/main.c    ****     HAL_GPIO_TogglePin (GPIOE, GPIO_PIN_15);
 2507              		.loc 1 210 5 is_stmt 1 view .LVU866
 2508 00f2 4FF49670 		mov	r0, #300
 2509 00f6 FFF7FEFF 		bl	HAL_Delay
 2510              	.LVL148:
 211:Src/main.c    ****  }
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 79


 2511              		.loc 1 211 5 view .LVU867
 2512 00fa 4FF40041 		mov	r1, #32768
 2513 00fe 1548     		ldr	r0, .L178+16
 2514 0100 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 2515              	.LVL149:
 159:Src/main.c    ****   {
 2516              		.loc 1 159 9 view .LVU868
 2517              	.L174:
 159:Src/main.c    ****   {
 2518              		.loc 1 159 3 view .LVU869
 162:Src/main.c    ****     {
 2519              		.loc 1 162 5 view .LVU870
 162:Src/main.c    ****     {
 2520              		.loc 1 162 9 is_stmt 0 view .LVU871
 2521 0104 0121     		movs	r1, #1
 2522 0106 4FF09040 		mov	r0, #1207959552
 2523 010a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 2524              	.LVL150:
 162:Src/main.c    ****     {
 2525              		.loc 1 162 7 discriminator 1 view .LVU872
 2526 010e 0028     		cmp	r0, #0
 2527 0110 B6D0     		beq	.L164
 165:Src/main.c    **** 
 2528              		.loc 1 165 9 is_stmt 1 view .LVU873
 2529 0112 0122     		movs	r2, #1
 2530 0114 4FF48061 		mov	r1, #1024
 2531 0118 0E48     		ldr	r0, .L178+16
 2532 011a FFF7FEFF 		bl	HAL_GPIO_WritePin
 2533              	.LVL151:
 167:Src/main.c    ****         {
 2534              		.loc 1 167 9 view .LVU874
 167:Src/main.c    ****         {
 2535              		.loc 1 167 20 is_stmt 0 view .LVU875
 2536 011e 0B4B     		ldr	r3, .L178+8
 2537 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 167:Src/main.c    ****         {
 2538              		.loc 1 167 11 view .LVU876
 2539 0122 002B     		cmp	r3, #0
 2540 0124 A0D1     		bne	.L165
 169:Src/main.c    ****                 tPulse = DOWN;
 2541              		.loc 1 169 13 is_stmt 1 view .LVU877
 169:Src/main.c    ****                 tPulse = DOWN;
 2542              		.loc 1 169 27 is_stmt 0 view .LVU878
 2543 0126 084B     		ldr	r3, .L178+4
 2544 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 169:Src/main.c    ****                 tPulse = DOWN;
 2545              		.loc 1 169 15 view .LVU879
 2546 012a 632B     		cmp	r3, #99
 2547 012c 98D9     		bls	.L166
 170:Src/main.c    ****             else
 2548              		.loc 1 170 17 is_stmt 1 view .LVU880
 170:Src/main.c    ****             else
 2549              		.loc 1 170 24 is_stmt 0 view .LVU881
 2550 012e 074B     		ldr	r3, .L178+8
 2551 0130 0122     		movs	r2, #1
 2552 0132 1A70     		strb	r2, [r3]
 2553 0134 AAE7     		b	.L167
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 80


 2554              	.L177:
 202:Src/main.c    ****     }
 2555              		.loc 1 202 9 is_stmt 1 view .LVU882
 2556 0136 0022     		movs	r2, #0
 2557 0138 4FF48041 		mov	r1, #16384
 2558 013c 0548     		ldr	r0, .L178+16
 2559 013e FFF7FEFF 		bl	HAL_GPIO_WritePin
 2560              	.LVL152:
 2561 0142 D6E7     		b	.L172
 2562              	.L179:
 2563              		.align	2
 2564              	.L178:
 2565 0144 00000000 		.word	htim1
 2566 0148 00000000 		.word	timePulse
 2567 014c 00000000 		.word	tPulse
 2568 0150 000C0048 		.word	1207962624
 2569 0154 00100048 		.word	1207963648
 2570 0158 00000000 		.word	tDivide
 2571 015c 00000000 		.word	timePulseDivider
 2572              		.cfi_endproc
 2573              	.LFE130:
 2575              		.global	hpcd_USB_FS
 2576              		.section	.bss.hpcd_USB_FS,"aw",%nobits
 2577              		.align	2
 2580              	hpcd_USB_FS:
 2581 0000 00000000 		.space	748
 2581      00000000 
 2581      00000000 
 2581      00000000 
 2581      00000000 
 2582              		.global	htim17
 2583              		.section	.bss.htim17,"aw",%nobits
 2584              		.align	2
 2587              	htim17:
 2588 0000 00000000 		.space	76
 2588      00000000 
 2588      00000000 
 2588      00000000 
 2588      00000000 
 2589              		.global	htim16
 2590              		.section	.bss.htim16,"aw",%nobits
 2591              		.align	2
 2594              	htim16:
 2595 0000 00000000 		.space	76
 2595      00000000 
 2595      00000000 
 2595      00000000 
 2595      00000000 
 2596              		.global	htim15
 2597              		.section	.bss.htim15,"aw",%nobits
 2598              		.align	2
 2601              	htim15:
 2602 0000 00000000 		.space	76
 2602      00000000 
 2602      00000000 
 2602      00000000 
 2602      00000000 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 81


 2603              		.global	htim8
 2604              		.section	.bss.htim8,"aw",%nobits
 2605              		.align	2
 2608              	htim8:
 2609 0000 00000000 		.space	76
 2609      00000000 
 2609      00000000 
 2609      00000000 
 2609      00000000 
 2610              		.global	htim7
 2611              		.section	.bss.htim7,"aw",%nobits
 2612              		.align	2
 2615              	htim7:
 2616 0000 00000000 		.space	76
 2616      00000000 
 2616      00000000 
 2616      00000000 
 2616      00000000 
 2617              		.global	htim4
 2618              		.section	.bss.htim4,"aw",%nobits
 2619              		.align	2
 2622              	htim4:
 2623 0000 00000000 		.space	76
 2623      00000000 
 2623      00000000 
 2623      00000000 
 2623      00000000 
 2624              		.global	htim3
 2625              		.section	.bss.htim3,"aw",%nobits
 2626              		.align	2
 2629              	htim3:
 2630 0000 00000000 		.space	76
 2630      00000000 
 2630      00000000 
 2630      00000000 
 2630      00000000 
 2631              		.global	htim2
 2632              		.section	.bss.htim2,"aw",%nobits
 2633              		.align	2
 2636              	htim2:
 2637 0000 00000000 		.space	76
 2637      00000000 
 2637      00000000 
 2637      00000000 
 2637      00000000 
 2638              		.global	htim1
 2639              		.section	.bss.htim1,"aw",%nobits
 2640              		.align	2
 2643              	htim1:
 2644 0000 00000000 		.space	76
 2644      00000000 
 2644      00000000 
 2644      00000000 
 2644      00000000 
 2645              		.global	hspi1
 2646              		.section	.bss.hspi1,"aw",%nobits
 2647              		.align	2
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 82


 2650              	hspi1:
 2651 0000 00000000 		.space	100
 2651      00000000 
 2651      00000000 
 2651      00000000 
 2651      00000000 
 2652              		.global	hi2c1
 2653              		.section	.bss.hi2c1,"aw",%nobits
 2654              		.align	2
 2657              	hi2c1:
 2658 0000 00000000 		.space	84
 2658      00000000 
 2658      00000000 
 2658      00000000 
 2658      00000000 
 2659              		.global	tDivide
 2660              		.section	.bss.tDivide,"aw",%nobits
 2663              	tDivide:
 2664 0000 00       		.space	1
 2665              		.global	tPulse
 2666              		.section	.bss.tPulse,"aw",%nobits
 2669              	tPulse:
 2670 0000 00       		.space	1
 2671              		.global	timePulseMin
 2672              		.section	.data.timePulseMin,"aw"
 2675              	timePulseMin:
 2676 0000 01       		.byte	1
 2677              		.global	timePulseMax
 2678              		.section	.data.timePulseMax,"aw"
 2681              	timePulseMax:
 2682 0000 64       		.byte	100
 2683              		.global	timePulseDivider
 2684              		.section	.data.timePulseDivider,"aw"
 2687              	timePulseDivider:
 2688 0000 04       		.byte	4
 2689              		.global	timePulse
 2690              		.section	.data.timePulse,"aw"
 2693              	timePulse:
 2694 0000 32       		.byte	50
 2695              		.global	PWM_MIN_CHANGE
 2696              		.section	.rodata.PWM_MIN_CHANGE,"a"
 2699              	PWM_MIN_CHANGE:
 2700 0000 05       		.byte	5
 2701              		.global	PWM_MAX
 2702              		.section	.rodata.PWM_MAX,"a"
 2705              	PWM_MAX:
 2706 0000 64       		.byte	100
 2707              		.global	PWM_MIN
 2708              		.section	.rodata.PWM_MIN,"a"
 2711              	PWM_MIN:
 2712 0000 04       		.byte	4
 2713              		.text
 2714              	.Letext0:
 2715              		.file 3 "C:/Program Files/arm-gnu-toolchain-13.2.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/i
 2716              		.file 4 "C:/Program Files/arm-gnu-toolchain-13.2.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/i
 2717              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 2718              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 83


 2719              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2720              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 2721              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 2722              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 2723              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 2724              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2c.h"
 2725              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_ll_usb.h"
 2726              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_pcd.h"
 2727              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h"
 2728              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 2729              		.file 17 "Inc/main.h"
 2730              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim_ex.h"
 2731              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2c_ex.h"
 2732              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 2733              		.file 21 "<built-in>"
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 84


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:222    .text.MX_GPIO_Init:000000dc $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:229    .text.Error_Handler:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:235    .text.Error_Handler:00000000 Error_Handler
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:267    .text.MX_I2C1_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:272    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:354    .text.MX_I2C1_Init:00000048 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2657   .bss.hi2c1:00000000 hi2c1
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:361    .text.MX_SPI1_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:366    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:442    .text.MX_SPI1_Init:00000040 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2650   .bss.hspi1:00000000 hspi1
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:448    .text.MX_TIM2_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:453    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:608    .text.MX_TIM2_Init:000000a0 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2636   .bss.htim2:00000000 htim2
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:613    .text.MX_TIM3_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:618    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:812    .text.MX_TIM3_Init:000000d0 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2629   .bss.htim3:00000000 htim3
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:818    .text.MX_TIM4_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:823    .text.MX_TIM4_Init:00000000 MX_TIM4_Init
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:943    .text.MX_TIM4_Init:00000074 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2622   .bss.htim4:00000000 htim4
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:949    .text.MX_TIM8_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:954    .text.MX_TIM8_Init:00000000 MX_TIM8_Init
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:1182   .text.MX_TIM8_Init:000000e4 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2608   .bss.htim8:00000000 htim8
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:1188   .text.MX_TIM15_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:1193   .text.MX_TIM15_Init:00000000 MX_TIM15_Init
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:1372   .text.MX_TIM15_Init:000000a8 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2601   .bss.htim15:00000000 htim15
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:1378   .text.MX_TIM16_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:1383   .text.MX_TIM16_Init:00000000 MX_TIM16_Init
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:1548   .text.MX_TIM16_Init:00000098 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2594   .bss.htim16:00000000 htim16
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:1554   .text.MX_TIM17_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:1559   .text.MX_TIM17_Init:00000000 MX_TIM17_Init
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:1724   .text.MX_TIM17_Init:00000098 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2587   .bss.htim17:00000000 htim17
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:1730   .text.MX_USB_PCD_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:1735   .text.MX_USB_PCD_Init:00000000 MX_USB_PCD_Init
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:1784   .text.MX_USB_PCD_Init:00000024 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2580   .bss.hpcd_USB_FS:00000000 hpcd_USB_FS
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:1790   .text.MX_TIM1_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:1795   .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2052   .text.MX_TIM1_Init:0000010c $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2643   .bss.htim1:00000000 htim1
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2058   .text.MX_TIM7_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2063   .text.MX_TIM7_Init:00000000 MX_TIM7_Init
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2142   .text.MX_TIM7_Init:00000044 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2615   .bss.htim7:00000000 htim7
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2148   .text.SystemClock_Config:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2154   .text.SystemClock_Config:00000000 SystemClock_Config
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s 			page 85


C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2300   .text.SystemClock_Config:00000098 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2305   .text.main:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2311   .text.main:00000000 main
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2565   .text.main:00000144 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2693   .data.timePulse:00000000 timePulse
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2669   .bss.tPulse:00000000 tPulse
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2663   .bss.tDivide:00000000 tDivide
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2687   .data.timePulseDivider:00000000 timePulseDivider
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2577   .bss.hpcd_USB_FS:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2584   .bss.htim17:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2591   .bss.htim16:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2598   .bss.htim15:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2605   .bss.htim8:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2612   .bss.htim7:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2619   .bss.htim4:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2626   .bss.htim3:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2633   .bss.htim2:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2640   .bss.htim1:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2647   .bss.hspi1:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2654   .bss.hi2c1:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2664   .bss.tDivide:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2670   .bss.tPulse:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2675   .data.timePulseMin:00000000 timePulseMin
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2681   .data.timePulseMax:00000000 timePulseMax
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2699   .rodata.PWM_MIN_CHANGE:00000000 PWM_MIN_CHANGE
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2705   .rodata.PWM_MAX:00000000 PWM_MAX
C:\Users\PC\AppData\Local\Temp\ccXrPyMX.s:2711   .rodata.PWM_MIN:00000000 PWM_MIN

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_TIMEx_ConfigBreakDeadTime
HAL_PCD_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_TIM_Base_Start_IT
HAL_TIM_PWM_Start
HAL_GPIO_ReadPin
HAL_Delay
HAL_GPIO_TogglePin
