ARM GAS  C:\Users\PC\AppData\Local\Temp\cctcuEie.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f3xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Src/stm32f3xx_it.c"
  20              		.section	.text.NMI_Handler,"ax",%progbits
  21              		.align	1
  22              		.global	NMI_Handler
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	NMI_Handler:
  28              	.LFB130:
   1:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f3xx_it.c **** /**
   3:Src/stm32f3xx_it.c ****   ******************************************************************************
   4:Src/stm32f3xx_it.c ****   * @file    stm32f3xx_it.c
   5:Src/stm32f3xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f3xx_it.c ****   ******************************************************************************
   7:Src/stm32f3xx_it.c ****   * @attention
   8:Src/stm32f3xx_it.c ****   *
   9:Src/stm32f3xx_it.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Src/stm32f3xx_it.c ****   * All rights reserved.
  11:Src/stm32f3xx_it.c ****   *
  12:Src/stm32f3xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/stm32f3xx_it.c ****   * in the root directory of this software component.
  14:Src/stm32f3xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/stm32f3xx_it.c ****   *
  16:Src/stm32f3xx_it.c ****   ******************************************************************************
  17:Src/stm32f3xx_it.c ****   */
  18:Src/stm32f3xx_it.c **** /* USER CODE END Header */
  19:Src/stm32f3xx_it.c **** 
  20:Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Src/stm32f3xx_it.c **** #include "main.h"
  22:Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  23:Src/stm32f3xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Includes */
  25:Src/stm32f3xx_it.c **** /* USER CODE END Includes */
  26:Src/stm32f3xx_it.c **** 
  27:Src/stm32f3xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Src/stm32f3xx_it.c **** /* USER CODE BEGIN TD */
  29:Src/stm32f3xx_it.c **** 
  30:Src/stm32f3xx_it.c **** /* USER CODE END TD */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cctcuEie.s 			page 2


  31:Src/stm32f3xx_it.c **** 
  32:Src/stm32f3xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PD */
  34:Src/stm32f3xx_it.c **** 
  35:Src/stm32f3xx_it.c **** /* USER CODE END PD */
  36:Src/stm32f3xx_it.c **** 
  37:Src/stm32f3xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PM */
  39:Src/stm32f3xx_it.c **** 
  40:Src/stm32f3xx_it.c **** /* USER CODE END PM */
  41:Src/stm32f3xx_it.c **** 
  42:Src/stm32f3xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PV */
  44:Src/stm32f3xx_it.c **** 
  45:Src/stm32f3xx_it.c **** /* USER CODE END PV */
  46:Src/stm32f3xx_it.c **** 
  47:Src/stm32f3xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PFP */
  49:Src/stm32f3xx_it.c **** 
  50:Src/stm32f3xx_it.c **** /* USER CODE END PFP */
  51:Src/stm32f3xx_it.c **** 
  52:Src/stm32f3xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  54:Src/stm32f3xx_it.c **** 
  55:Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  56:Src/stm32f3xx_it.c **** 
  57:Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim1;
  59:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim2;
  60:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim7;
  61:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim16;
  62:Src/stm32f3xx_it.c **** 
  63:Src/stm32f3xx_it.c **** 
  64:Src/stm32f3xx_it.c **** extern const uint8_t PWM_MIN;
  65:Src/stm32f3xx_it.c **** extern const uint8_t PWM_MAX;
  66:Src/stm32f3xx_it.c **** extern const uint8_t PWM_MIN_CHANGE;
  67:Src/stm32f3xx_it.c **** /* USER CODE BEGIN EV */
  68:Src/stm32f3xx_it.c **** 
  69:Src/stm32f3xx_it.c **** 
  70:Src/stm32f3xx_it.c **** extern eDir tPulse;
  71:Src/stm32f3xx_it.c **** extern eDir tDivide;
  72:Src/stm32f3xx_it.c **** extern uint8_t timePulseDivider;
  73:Src/stm32f3xx_it.c **** extern uint8_t timePulse;
  74:Src/stm32f3xx_it.c **** uint8_t timePulse2 = 50;
  75:Src/stm32f3xx_it.c **** 
  76:Src/stm32f3xx_it.c **** 
  77:Src/stm32f3xx_it.c **** // enum{
  78:Src/stm32f3xx_it.c **** //   UP=0,
  79:Src/stm32f3xx_it.c **** //   DOWN
  80:Src/stm32f3xx_it.c **** // }eDir;
  81:Src/stm32f3xx_it.c **** /* USER CODE END EV */
  82:Src/stm32f3xx_it.c **** 
  83:Src/stm32f3xx_it.c **** /******************************************************************************/
  84:Src/stm32f3xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  85:Src/stm32f3xx_it.c **** /******************************************************************************/
  86:Src/stm32f3xx_it.c **** /**
  87:Src/stm32f3xx_it.c ****   * @brief This function handles Non maskable interrupt.
ARM GAS  C:\Users\PC\AppData\Local\Temp\cctcuEie.s 			page 3


  88:Src/stm32f3xx_it.c ****   */
  89:Src/stm32f3xx_it.c **** void NMI_Handler(void)
  90:Src/stm32f3xx_it.c **** {
  29              		.loc 1 90 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  91:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  92:Src/stm32f3xx_it.c **** 
  93:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  94:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  95:Src/stm32f3xx_it.c ****   while (1)
  36              		.loc 1 95 3 view .LVU1
  96:Src/stm32f3xx_it.c ****   {
  97:Src/stm32f3xx_it.c ****   }
  37              		.loc 1 97 3 view .LVU2
  95:Src/stm32f3xx_it.c ****   {
  38              		.loc 1 95 9 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE130:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB131:
  98:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  99:Src/stm32f3xx_it.c **** }
 100:Src/stm32f3xx_it.c **** 
 101:Src/stm32f3xx_it.c **** /**
 102:Src/stm32f3xx_it.c ****   * @brief This function handles Hard fault interrupt.
 103:Src/stm32f3xx_it.c ****   */
 104:Src/stm32f3xx_it.c **** void HardFault_Handler(void)
 105:Src/stm32f3xx_it.c **** {
  52              		.loc 1 105 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
 106:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 107:Src/stm32f3xx_it.c **** 
 108:Src/stm32f3xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 109:Src/stm32f3xx_it.c ****   while (1)
  59              		.loc 1 109 3 view .LVU5
 110:Src/stm32f3xx_it.c ****   {
 111:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 112:Src/stm32f3xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 113:Src/stm32f3xx_it.c ****   }
  60              		.loc 1 113 3 view .LVU6
ARM GAS  C:\Users\PC\AppData\Local\Temp\cctcuEie.s 			page 4


 109:Src/stm32f3xx_it.c ****   {
  61              		.loc 1 109 9 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE131:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	MemManage_Handler:
  74              	.LFB132:
 114:Src/stm32f3xx_it.c **** }
 115:Src/stm32f3xx_it.c **** 
 116:Src/stm32f3xx_it.c **** /**
 117:Src/stm32f3xx_it.c ****   * @brief This function handles Memory management fault.
 118:Src/stm32f3xx_it.c ****   */
 119:Src/stm32f3xx_it.c **** void MemManage_Handler(void)
 120:Src/stm32f3xx_it.c **** {
  75              		.loc 1 120 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 121:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 122:Src/stm32f3xx_it.c **** 
 123:Src/stm32f3xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 124:Src/stm32f3xx_it.c ****   while (1)
  82              		.loc 1 124 3 view .LVU9
 125:Src/stm32f3xx_it.c ****   {
 126:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 127:Src/stm32f3xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 128:Src/stm32f3xx_it.c ****   }
  83              		.loc 1 128 3 view .LVU10
 124:Src/stm32f3xx_it.c ****   {
  84              		.loc 1 124 9 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE132:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB133:
 129:Src/stm32f3xx_it.c **** }
 130:Src/stm32f3xx_it.c **** 
 131:Src/stm32f3xx_it.c **** /**
 132:Src/stm32f3xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 133:Src/stm32f3xx_it.c ****   */
 134:Src/stm32f3xx_it.c **** void BusFault_Handler(void)
 135:Src/stm32f3xx_it.c **** {
ARM GAS  C:\Users\PC\AppData\Local\Temp\cctcuEie.s 			page 5


  98              		.loc 1 135 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 136:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 137:Src/stm32f3xx_it.c **** 
 138:Src/stm32f3xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 139:Src/stm32f3xx_it.c ****   while (1)
 105              		.loc 1 139 3 view .LVU13
 140:Src/stm32f3xx_it.c ****   {
 141:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 142:Src/stm32f3xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 143:Src/stm32f3xx_it.c ****   }
 106              		.loc 1 143 3 view .LVU14
 139:Src/stm32f3xx_it.c ****   {
 107              		.loc 1 139 9 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE133:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB134:
 144:Src/stm32f3xx_it.c **** }
 145:Src/stm32f3xx_it.c **** 
 146:Src/stm32f3xx_it.c **** /**
 147:Src/stm32f3xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 148:Src/stm32f3xx_it.c ****   */
 149:Src/stm32f3xx_it.c **** void UsageFault_Handler(void)
 150:Src/stm32f3xx_it.c **** {
 121              		.loc 1 150 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 151:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 152:Src/stm32f3xx_it.c **** 
 153:Src/stm32f3xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 154:Src/stm32f3xx_it.c ****   while (1)
 128              		.loc 1 154 3 view .LVU17
 155:Src/stm32f3xx_it.c ****   {
 156:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 157:Src/stm32f3xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 158:Src/stm32f3xx_it.c ****   }
 129              		.loc 1 158 3 view .LVU18
 154:Src/stm32f3xx_it.c ****   {
 130              		.loc 1 154 9 view .LVU19
 131 0000 FEE7     		b	.L10
ARM GAS  C:\Users\PC\AppData\Local\Temp\cctcuEie.s 			page 6


 132              		.cfi_endproc
 133              	.LFE134:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	SVC_Handler:
 143              	.LFB135:
 159:Src/stm32f3xx_it.c **** }
 160:Src/stm32f3xx_it.c **** 
 161:Src/stm32f3xx_it.c **** /**
 162:Src/stm32f3xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 163:Src/stm32f3xx_it.c ****   */
 164:Src/stm32f3xx_it.c **** void SVC_Handler(void)
 165:Src/stm32f3xx_it.c **** {
 144              		.loc 1 165 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 166:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 167:Src/stm32f3xx_it.c **** 
 168:Src/stm32f3xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 169:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 170:Src/stm32f3xx_it.c **** 
 171:Src/stm32f3xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 172:Src/stm32f3xx_it.c **** }
 149              		.loc 1 172 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE135:
 154              		.section	.text.DebugMon_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	DebugMon_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	DebugMon_Handler:
 162              	.LFB136:
 173:Src/stm32f3xx_it.c **** 
 174:Src/stm32f3xx_it.c **** /**
 175:Src/stm32f3xx_it.c ****   * @brief This function handles Debug monitor.
 176:Src/stm32f3xx_it.c ****   */
 177:Src/stm32f3xx_it.c **** void DebugMon_Handler(void)
 178:Src/stm32f3xx_it.c **** {
 163              		.loc 1 178 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 179:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 180:Src/stm32f3xx_it.c **** 
 181:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 182:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 183:Src/stm32f3xx_it.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cctcuEie.s 			page 7


 184:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 185:Src/stm32f3xx_it.c **** }
 168              		.loc 1 185 1 view .LVU23
 169 0000 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE136:
 173              		.section	.text.PendSV_Handler,"ax",%progbits
 174              		.align	1
 175              		.global	PendSV_Handler
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 180              	PendSV_Handler:
 181              	.LFB137:
 186:Src/stm32f3xx_it.c **** 
 187:Src/stm32f3xx_it.c **** /**
 188:Src/stm32f3xx_it.c ****   * @brief This function handles Pendable request for system service.
 189:Src/stm32f3xx_it.c ****   */
 190:Src/stm32f3xx_it.c **** void PendSV_Handler(void)
 191:Src/stm32f3xx_it.c **** {
 182              		.loc 1 191 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 192:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 193:Src/stm32f3xx_it.c **** 
 194:Src/stm32f3xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 195:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 196:Src/stm32f3xx_it.c **** 
 197:Src/stm32f3xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 198:Src/stm32f3xx_it.c **** }
 187              		.loc 1 198 1 view .LVU25
 188 0000 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE137:
 192              		.section	.text.SysTick_Handler,"ax",%progbits
 193              		.align	1
 194              		.global	SysTick_Handler
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	SysTick_Handler:
 200              	.LFB138:
 199:Src/stm32f3xx_it.c **** 
 200:Src/stm32f3xx_it.c **** /**
 201:Src/stm32f3xx_it.c ****   * @brief This function handles System tick timer.
 202:Src/stm32f3xx_it.c ****   */
 203:Src/stm32f3xx_it.c **** void SysTick_Handler(void)
 204:Src/stm32f3xx_it.c **** {
 201              		.loc 1 204 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              	.LCFI0:
 207              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\PC\AppData\Local\Temp\cctcuEie.s 			page 8


 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 205:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 206:Src/stm32f3xx_it.c **** 
 207:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 208:Src/stm32f3xx_it.c ****   HAL_IncTick();
 210              		.loc 1 208 3 view .LVU27
 211 0002 FFF7FEFF 		bl	HAL_IncTick
 212              	.LVL0:
 209:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 210:Src/stm32f3xx_it.c **** 
 211:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 212:Src/stm32f3xx_it.c **** }
 213              		.loc 1 212 1 is_stmt 0 view .LVU28
 214 0006 08BD     		pop	{r3, pc}
 215              		.cfi_endproc
 216              	.LFE138:
 218              		.section	.text.TIM1_UP_TIM16_IRQHandler,"ax",%progbits
 219              		.align	1
 220              		.global	TIM1_UP_TIM16_IRQHandler
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 225              	TIM1_UP_TIM16_IRQHandler:
 226              	.LFB139:
 213:Src/stm32f3xx_it.c **** 
 214:Src/stm32f3xx_it.c **** /******************************************************************************/
 215:Src/stm32f3xx_it.c **** /* STM32F3xx Peripheral Interrupt Handlers                                    */
 216:Src/stm32f3xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 217:Src/stm32f3xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 218:Src/stm32f3xx_it.c **** /* please refer to the startup file (startup_stm32f3xx.s).                    */
 219:Src/stm32f3xx_it.c **** /******************************************************************************/
 220:Src/stm32f3xx_it.c **** 
 221:Src/stm32f3xx_it.c **** /**
 222:Src/stm32f3xx_it.c ****   * @brief This function handles TIM1 update and TIM16 interrupts.
 223:Src/stm32f3xx_it.c ****   */
 224:Src/stm32f3xx_it.c **** void TIM1_UP_TIM16_IRQHandler(void)
 225:Src/stm32f3xx_it.c **** {
 227              		.loc 1 225 1 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231 0000 10B5     		push	{r4, lr}
 232              	.LCFI1:
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 4, -8
 235              		.cfi_offset 14, -4
 226:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 0 */
 227:Src/stm32f3xx_it.c ****   // if( eDir == UP ){
 228:Src/stm32f3xx_it.c ****   //   if( timePulse >= PWM_MAX )
 229:Src/stm32f3xx_it.c ****   //     eDir = DOWN;
 230:Src/stm32f3xx_it.c ****   //   else
 231:Src/stm32f3xx_it.c ****   //     timePulse += PWM_MIN_CHANGE;
 232:Src/stm32f3xx_it.c ****   // } else {
 233:Src/stm32f3xx_it.c ****   //   if ( timePulse <= PWM_MIN )
 234:Src/stm32f3xx_it.c ****   //     eDir = UP;
 235:Src/stm32f3xx_it.c ****   //   else
ARM GAS  C:\Users\PC\AppData\Local\Temp\cctcuEie.s 			page 9


 236:Src/stm32f3xx_it.c ****   //     timePulse -= PWM_MIN_CHANGE;
 237:Src/stm32f3xx_it.c ****   // }
 238:Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_UP_TIM16_IRQn 0 */
 239:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 236              		.loc 1 239 3 view .LVU30
 237 0002 0E4C     		ldr	r4, .L18
 238 0004 2046     		mov	r0, r4
 239 0006 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 240              	.LVL1:
 240:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim16);
 241              		.loc 1 240 3 view .LVU31
 242 000a 0D48     		ldr	r0, .L18+4
 243 000c FFF7FEFF 		bl	HAL_TIM_IRQHandler
 244              	.LVL2:
 241:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 1 */
 242:Src/stm32f3xx_it.c ****   TIM1->CCR1 = (htim1.Init.Period * timePulse) / 10u;
 245              		.loc 1 242 3 view .LVU32
 246              		.loc 1 242 27 is_stmt 0 view .LVU33
 247 0010 E268     		ldr	r2, [r4, #12]
 248              		.loc 1 242 35 view .LVU34
 249 0012 0C4B     		ldr	r3, .L18+8
 250 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 251 0016 02FB03F3 		mul	r3, r2, r3
 252              		.loc 1 242 48 view .LVU35
 253 001a 0B4A     		ldr	r2, .L18+12
 254 001c A2FB0312 		umull	r1, r2, r2, r3
 255 0020 D208     		lsrs	r2, r2, #3
 256              		.loc 1 242 14 view .LVU36
 257 0022 0A49     		ldr	r1, .L18+16
 258 0024 4A63     		str	r2, [r1, #52]
 243:Src/stm32f3xx_it.c ****   TIM1->CCR2 = (htim1.Init.Period * timePulse) / timePulseDivider;
 259              		.loc 1 243 3 is_stmt 1 view .LVU37
 260              		.loc 1 243 48 is_stmt 0 view .LVU38
 261 0026 0A4A     		ldr	r2, .L18+20
 262 0028 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 263 002a B3FBF2F2 		udiv	r2, r3, r2
 264              		.loc 1 243 14 view .LVU39
 265 002e 8A63     		str	r2, [r1, #56]
 244:Src/stm32f3xx_it.c ****   TIM1->CCR3 = (htim1.Init.Period * timePulse) / 300u;
 266              		.loc 1 244 3 is_stmt 1 view .LVU40
 267              		.loc 1 244 48 is_stmt 0 view .LVU41
 268 0030 084A     		ldr	r2, .L18+24
 269 0032 A2FB0323 		umull	r2, r3, r2, r3
 270 0036 5B09     		lsrs	r3, r3, #5
 271              		.loc 1 244 14 view .LVU42
 272 0038 CB63     		str	r3, [r1, #60]
 245:Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_UP_TIM16_IRQn 1 */
 246:Src/stm32f3xx_it.c **** }
 273              		.loc 1 246 1 view .LVU43
 274 003a 10BD     		pop	{r4, pc}
 275              	.L19:
 276              		.align	2
 277              	.L18:
 278 003c 00000000 		.word	htim1
 279 0040 00000000 		.word	htim16
 280 0044 00000000 		.word	timePulse
 281 0048 CDCCCCCC 		.word	-858993459
ARM GAS  C:\Users\PC\AppData\Local\Temp\cctcuEie.s 			page 10


 282 004c 002C0140 		.word	1073818624
 283 0050 00000000 		.word	timePulseDivider
 284 0054 B5814E1B 		.word	458129845
 285              		.cfi_endproc
 286              	.LFE139:
 288              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 289              		.align	1
 290              		.global	TIM2_IRQHandler
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 295              	TIM2_IRQHandler:
 296              	.LFB140:
 247:Src/stm32f3xx_it.c **** 
 248:Src/stm32f3xx_it.c **** /**
 249:Src/stm32f3xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 250:Src/stm32f3xx_it.c ****   */
 251:Src/stm32f3xx_it.c **** void TIM2_IRQHandler(void)
 252:Src/stm32f3xx_it.c **** {
 297              		.loc 1 252 1 is_stmt 1 view -0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301 0000 08B5     		push	{r3, lr}
 302              	.LCFI2:
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 3, -8
 305              		.cfi_offset 14, -4
 253:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 254:Src/stm32f3xx_it.c ****   // TIM2->CCR2 = (htim2.Init.Period * timePulse2) / 100u;
 255:Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 256:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 306              		.loc 1 256 3 view .LVU45
 307 0002 0248     		ldr	r0, .L22
 308 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 309              	.LVL3:
 257:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 258:Src/stm32f3xx_it.c **** 
 259:Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 260:Src/stm32f3xx_it.c **** }
 310              		.loc 1 260 1 is_stmt 0 view .LVU46
 311 0008 08BD     		pop	{r3, pc}
 312              	.L23:
 313 000a 00BF     		.align	2
 314              	.L22:
 315 000c 00000000 		.word	htim2
 316              		.cfi_endproc
 317              	.LFE140:
 319              		.section	.text.TIM7_IRQHandler,"ax",%progbits
 320              		.align	1
 321              		.global	TIM7_IRQHandler
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 326              	TIM7_IRQHandler:
 327              	.LFB141:
 261:Src/stm32f3xx_it.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cctcuEie.s 			page 11


 262:Src/stm32f3xx_it.c **** /**
 263:Src/stm32f3xx_it.c ****   * @brief This function handles TIM7 global interrupt.
 264:Src/stm32f3xx_it.c ****   */
 265:Src/stm32f3xx_it.c **** void TIM7_IRQHandler(void)
 266:Src/stm32f3xx_it.c **** {
 328              		.loc 1 266 1 is_stmt 1 view -0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332 0000 08B5     		push	{r3, lr}
 333              	.LCFI3:
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 3, -8
 336              		.cfi_offset 14, -4
 267:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM7_IRQn 0 */
 268:Src/stm32f3xx_it.c ****   // TIM7->CCR2 = (htim7.Init.Period * timePulse2) / 100u;
 269:Src/stm32f3xx_it.c ****   /* USER CODE END TIM7_IRQn 0 */
 270:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim7);
 337              		.loc 1 270 3 view .LVU48
 338 0002 0248     		ldr	r0, .L26
 339 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 340              	.LVL4:
 271:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM7_IRQn 1 */
 272:Src/stm32f3xx_it.c **** 
 273:Src/stm32f3xx_it.c ****   /* USER CODE END TIM7_IRQn 1 */
 274:Src/stm32f3xx_it.c **** }
 341              		.loc 1 274 1 is_stmt 0 view .LVU49
 342 0008 08BD     		pop	{r3, pc}
 343              	.L27:
 344 000a 00BF     		.align	2
 345              	.L26:
 346 000c 00000000 		.word	htim7
 347              		.cfi_endproc
 348              	.LFE141:
 350              		.global	timePulse2
 351              		.section	.data.timePulse2,"aw"
 354              	timePulse2:
 355 0000 32       		.byte	50
 356              		.text
 357              	.Letext0:
 358              		.file 2 "C:/Program Files/arm-gnu-toolchain-13.2.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/i
 359              		.file 3 "C:/Program Files/arm-gnu-toolchain-13.2.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/i
 360              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 361              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 362              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 363              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 364              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  C:\Users\PC\AppData\Local\Temp\cctcuEie.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_it.c
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:21     .text.NMI_Handler:00000000 $t
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:27     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:44     .text.HardFault_Handler:00000000 $t
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:50     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:67     .text.MemManage_Handler:00000000 $t
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:73     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:90     .text.BusFault_Handler:00000000 $t
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:96     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:113    .text.UsageFault_Handler:00000000 $t
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:136    .text.SVC_Handler:00000000 $t
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:142    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:155    .text.DebugMon_Handler:00000000 $t
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:161    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:174    .text.PendSV_Handler:00000000 $t
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:180    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:193    .text.SysTick_Handler:00000000 $t
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:199    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:219    .text.TIM1_UP_TIM16_IRQHandler:00000000 $t
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:225    .text.TIM1_UP_TIM16_IRQHandler:00000000 TIM1_UP_TIM16_IRQHandler
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:278    .text.TIM1_UP_TIM16_IRQHandler:0000003c $d
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:289    .text.TIM2_IRQHandler:00000000 $t
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:295    .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:315    .text.TIM2_IRQHandler:0000000c $d
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:320    .text.TIM7_IRQHandler:00000000 $t
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:326    .text.TIM7_IRQHandler:00000000 TIM7_IRQHandler
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:346    .text.TIM7_IRQHandler:0000000c $d
C:\Users\PC\AppData\Local\Temp\cctcuEie.s:354    .data.timePulse2:00000000 timePulse2

UNDEFINED SYMBOLS
HAL_IncTick
HAL_TIM_IRQHandler
htim1
htim16
timePulse
timePulseDivider
htim2
htim7
